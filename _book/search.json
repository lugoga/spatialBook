[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Geospatial Technology and Spatial Analysis in R",
    "section": "",
    "text": "Preface"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Geospatial Technology and Spatial Analysis in R",
    "section": "Welcome",
    "text": "Welcome\nWelcome to the world of spatial data and analysis in R! In today’s data-driven era, the importance of spatial information cannot be overstated. From urban planning and environmental management to transportation logistics and public health, the ability to understand and analyze spatial data has become essential for making informed decisions and solving complex problems.\nThis book serves as your comprehensive guide to harnessing the power of R for working with spatial data. Whether you are a student, researcher, data scientist, or professional in a related field, this resource will equip you with the knowledge and skills to effectively manipulate, visualize, analyze, and model spatial data using R.\nR, a widely used programming language for statistical computing and graphics, offers a rich set of packages and tools specifically tailored for spatial data analysis. With its extensive capabilities, R provides a versatile and efficient environment for working with diverse spatial datasets, ranging from point patterns and geospatial polygons to raster data and satellite imagery.\nIn this book, we will start by introducing the fundamentals of spatial data and its representation in R. You will learn about spatial objects, coordinate reference systems, and the various data structures used to handle spatial information efficiently. We will explore techniques for importing, exporting, and manipulating spatial data, ensuring that you have a solid foundation for subsequent analysis.\nThe core of this book revolves around spatial analysis techniques in R. We will delve into essential topics such as spatial data visualization, spatial statistics, spatial interpolation, spatial regression, and geostatistics. Through step-by-step tutorials, code examples, and real-world applications, you will gain a deep understanding of how to apply these techniques to uncover patterns, explore relationships, and derive meaningful insights from spatial data.\nAdditionally, we will explore advanced topics such as spatial data modeling, spatial clustering, and spatial optimization, which will enable you to tackle complex spatial problems and make informed decisions. Throughout the book, we will emphasize the importance of sound statistical principles and best practices for spatial data analysis.\nEach chapter is carefully crafted to provide a balance between theoretical concepts, practical demonstrations, and hands-on exercises. The code snippets and reproducible examples provided will help you to grasp the concepts effectively and apply them to your own spatial analysis tasks. We encourage you to actively engage with the material, experiment with the code, and explore additional resources to deepen your understanding.\nFinally, we would like to express our sincere appreciation to the open-source community, which has contributed immensely to the development of R and its spatial packages. We are grateful to the countless individuals who have shared their knowledge, expertise, and code, making spatial data analysis in R accessible and empowering users around the world.\nWe hope that this book will serve as your valuable companion in your journey through the fascinating realm of spatial data and analysis in R. By the end, we aim to equip you with the skills and confidence to unlock the hidden insights in spatial data and contribute to the advancement of knowledge in your respective domains.\nLet’s embark on this exciting adventure together and explore the vast possibilities of spatial data analysis in R!\nHappy spatial coding!\nMasumbuko SEMBA"
  },
  {
    "objectID": "index.html#what-is-r",
    "href": "index.html#what-is-r",
    "title": "Geospatial Technology and Spatial Analysis in R",
    "section": "What is R?",
    "text": "What is R?\nR is a programming language and environment, originally developed for statistical computing and graphics. As of October 2020, there are ~16,000 R packages in the official repository CRAN2.\nNotable advantages of R are that it is a full-featured programming language, yet customized for working with data, relatively simple and has a huge collection of over 100,000 functions from various areas of interest.\nR's popularity has been steadily increasing in recent years (Figures 0.1–0.3).\nFigure 0.1: Stack Overflow Trend for the 'r' question tag (https://insights.stackoverflow.com/trends?tags=r)\nFigure 0.2: IEEE Language Rankings 2019 (https://spectrum.ieee.org/computing/software/the-top-programming-languages-2019)\nFigure 0.3: Proportion of research papers citing R (https://www.nature.com/news/programming-tools-adventures-with-r-1.16609)\nA brief overview of the capabilities and packages for several domains of R use, are available in the \"CRAN Task Views\" (Figure 0.4).\nFigure 0.4: CRAN Task Views (http://www.maths.lancs.ac.uk/~rowlings/R/TaskViews/)"
  },
  {
    "objectID": "index.html#r-and-analysis-of-spatial-data",
    "href": "index.html#r-and-analysis-of-spatial-data",
    "title": "Geospatial Technology and Spatial Analysis in R",
    "section": "R and analysis of spatial data",
    "text": "R and analysis of spatial data\n\nIntroduction\nOver time, there was an increasing number of contributed packages for handling and analyzing spatial data in R. Today, spatial analysis is a major functionality in R. As of October 2020, there are at least 185 packages3 specifically addressing spatial analysis in R.\nFigure 0.5: Books on Spatial Data Analysis with R\nSome important events in the history of spatial analysis support in R are summarized in Table 0.1.\n\n\n\n\nTable 0.1: Significant events in the history of R-spatial\n\n\nYear\nEvent\n\n\npre-2003\nVariable and incomplete approaches (MASS, spatstat, maptools, geoR, splancs, gstat, …)\n\n\n2003\nConsensus that a package defining standard data structures should be useful; rgdal released on CRAN\n\n\n2005\nsp released on CRAN; sp support in rgdal (Section 7.1.3\n\n\n2008\nApplied Spatial Data Analysis with R, 1st ed.\n\n\n2010\nraster released on CRAN (Section 5.3.4)\n\n\n2011\nrgeos released on CRAN\n\n\n2013\nApplied Spatial Data Analysis with R, 2nd ed.\n\n\n2016\nsf released on CRAN (Section 7.1.4)\n\n\n2018\nstars released on CRAN (Section 5.3.5)\n\n\n2019\nGeocomputation with R (https://geocompr.robinlovelace.net/)\n\n\n2021(?)\nSpatial Data Science (https://www.r-spatial.org/book/)\n\n\n\nThe question that arises here is: can R be used as a Geographic Information System (GIS), or as a comprehensive toolbox for doing spatial analysis? The answer is definitely yes. Moreover, R has some important advantages over traditional approaches to GIS, i.e., software with graphical user interfaces such as ArcGIS or QGIS.\nGeneral advantages of Command Line Interface (CLI) software include:\n\nAutomation—Doing otherwise unfeasible repetitive tasks\nReproducibility—Precise control of instructions to the computer\n\nMoreover, specific strengths of R as a GIS are:\n\nR capabilities in data processing and visualization, combined with dedicated packages for spatial data\nA single environment encompassing all analysis aspects—acquiring data, computation, statistics, visualization, Web, etc.\n\nNevertheless, there are situations when other tools are needed:\n\nInteractive editing or georeferencing (but see mapedit package)\nUnique GIS algorithms (3D analysis, label placement, splitting lines at intersections)\nData that cannot fit in RAM (but R can connect to spatial databases4 and other softwere for working with big data)\n\nThe following sections (0.3.2–0.3.11) highlight some of the capabilities of spatial data analysis packages in R, through short examples. We are going to elaborate on most of these packages later on in the book, and many of those examples will become clear.\n\n\nInput and output of spatial data\nReading spatial layers from a file into an R data structure, or writing the R data structure into a file, are handled by external libraries:\n\nGDAL/OGR is used for reading/writing vector and raster files, with sf and stars\nPROJ is used for handling Coordinate Reference Systems (CRS), in both sf and stars\nWorking with specialized formats, e.g., NetCDF with ncdf4\n\nPackage sf combined with RPostgreSQL can be used to read from, and write to, a PostGIS spatial database:\nlibrary(sf) library(RPostgreSQL) con = dbConnect(   PostgreSQL(),   dbname = \"gisdb\",   host = \"159.89.13.241\",   port = 5432,   user = \"geobgu\",   password = \"*******\" ) dat = st_read(con, query = \"SELECT name_lat, geometry FROM plants LIMIT 5;\")\ndat ## Simple feature collection with 5 features and 1 field ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 35.1397 ymin: 31.44711 xmax: 35.67976 ymax: 32.77013 ## Geodetic CRS:  WGS 84 ##         name_lat                  geometry ## 1    Iris haynei POINT (35.67976 32.77013) ## 2    Iris haynei   POINT (35.654 32.74137) ## 3 Iris atrofusca POINT (35.19337 31.44711) ## 4 Iris atrofusca POINT (35.18914 31.51475) ## 5  Iris vartanii  POINT (35.1397 31.47415)\n###sf: Processing Vector Layers {.unnumbered}\nGEOS is used for geometric operations on vector layers with sf:\n\nNumeric operators—Area, Length, Distance…\nLogical operators—Contains, Within, Within distance, Crosses, Overlaps, Equals, Intersects, Disjoint, Touches…\nGeometry generating operators—Centroid, Buffer, Intersection, Union, Difference, Convex-Hull, Simplification…\n\nFigure 0.6: Buffer function\n###stars: Processing Rasters {.unnumbered}\nGeometric operations on rasters can be done with package stars:\n\nAccessing cell values—As matrix / array, Extracting to points / lines / polygons\nRaster algebra—Arithmetic (+, -, …), Math (sqrt, log10, …), logical (!, ==, &gt;, …), summary (mean, max, …), Masking\nChanging resolution and extent—Cropping, Mosaic, Resampling, Reprojection\nTransformations—Raster &lt;-&gt; Points / Contour lines / Polygons\n\n\n\ngeosphere: Geometric calculations on longitude/latitude\nPackage geosphere implements spherical geometry functions for distance- and direction-related calculations on geographic coordinates (lon-lat).\nFigure 0.7: Points on Great Circle\nFigure 0.8: Visualizing Facebook Friends with geosphere (http://paulbutler.org/archives/visualizing-facebook-friends/)\n\n\ngstat: Geostatistical Modelling\nAs mentioned above, R was initially developed for statistical computing (Section 0.2). Accordingly, there is an extensive set of R packages for spatial statistics. For example, package gstat provides a comprehensive set of functions for univariate and multivariate geostatistics, mainly for the purpose of spatial interpolation:\n\nVariogram modelling\nOrdinary and universal point or block (co)kriging\nCross-validation\n\nFigure 0.9: Predicted Zinc concentration, using Ordinary Kriging\nWe are going to learn about the gstat package in Chapter 12. An introduction to the package can also be found in Chapter 8 of Applied Spatial Data Analysis with R (Bivand, Pebesma, and Gomez-Rubio 2013).\n\n\nspdep: Spatial dependence modelling\nModelling with spatial weights:\n\nBuilding neighbor lists and spatial weights\nTests for spatial autocorrelation for areal data (e.g., Moran's I)\nSpatial regression models (e.g., SAR, CAR)\n\nFigure 0.10: Neighbours list based on regions with contiguous boundaries\nThe spdep package is beyond the scope of this book. An introduction to the package can be found in Chapter 9 of Applied Spatial Data Analysis with R (Bivand, Pebesma, and Gomez-Rubio 2013).\n\n\nspatstat: Spatial point pattern analysis\nPackage spatstat provides a comprehensive collection of techniques for statistical analysis of spatial point patterns, such as:\n\nKernel density estimation\nDetection of clustering using Ripley's K-function\nSpatial logistic regression\n\nFigure 0.11: Distance map for the Biological Cells point pattern dataset\nThe book Spatial point patterns: methodology and applications with R (Baddeley, Rubak, and Turner 2015) provides a thorough introduction to the subject of point pattern analysis using the spatstat package. A more brief introduction can also be found in Chapter 7 of Applied Spatial Data Analysis with R (Bivand, Pebesma, and Gomez-Rubio 2013).\n\n\nosmdata: Access to OpenStreetMap data\nPackage osmdata gives access to OpenStreetMap (OSM) data—the most extensive open-source map database in the worls—using the Overpass API5.\nlibrary(sf) library(osmdata) q = opq(bbox = \"Beer-Sheva, Israel\") q = add_osm_feature(q, key = \"highway\") dat = osmdata_sf(q) lines = dat$osm_lines pol = dat$osm_polygons pol = st_cast(pol, \"MULTILINESTRING\") pol = st_cast(pol, \"LINESTRING\") lines = rbind(lines, pol) lines = lines[, \"highway\"] lines = st_transform(lines, 32636) plot(lines, key.pos = 4, key.width = lcm(4), main = \"\")\nFigure 0.12: Beer-Sheva road types map, using data downloaded from OpenStreetMap (OSM)\n\n\nggplot2: Visualization\nThe ggplot2 package is one of the most popular packages in R. It provides advanced visualization methods through a well-designed and consistent syntax. The package supports visualization of both vector layers6 and rasters7.\nThe ggplot2 package is highly customizable and capable of producing publication-quality figures and maps as well as original and innovative designs (Figure 0.13). One of its strengths is in easy preparation of \"small-multiple\"—or facet, in the terminology of ggplot2—figures (Figure 0.14).\nFigure 0.13: London cycle hire journeys with ggplot2 (http://spatial.ly/2012/02/great-maps-ggplot2/)\nFigure 0.14: Crime density by day with ggplot2\nThe ggplot2 package is beyond the scope of this book. A good place to start is the book ggplot2: Elegant Graphics for Data Analysis, by package author (Wickham 2016). The book is available online8.\n\n\nleaflet, mapview: Web mapping\nPackages leaflet and mapview provide methods to produce interactive maps using the Leaflet JavaScript library.\nPackage leaflet gives more low-level control. Package mapview is a wrapper around leaflet, automating addition of useful features:\n\nCommonly used basemaps\nColor scales and legends\nLabels\nPopups\n\nFunction mapview produces an interactive map given a spatial object. The zcol parameter is used to specify the attribute used for symbology:\nlibrary(sf) library(mapview) states = st_read(\"USA_2_GADM_fips.shp\") mapview(states, zcol = \"NAME_1\")\nFigure 0.15: Intractive map made with mapview"
  },
  {
    "objectID": "index.html#other-materials",
    "href": "index.html#other-materials",
    "title": "Geospatial Technology and Spatial Analysis in R",
    "section": "Other materials",
    "text": "Other materials\nThis section lists some other resources that are relevant for working with spatial data in R.\n\nBooks\n\nModel-based Geostatistics (Diggle and Ribeiro 2007)\nA Practical Guide to Geostatistical Mapping (Hengl 2009)\nSpatial Data Analysis in Ecology and Agriculture using R (1st ed. 2012, 2nd ed. 2018) (Plant 2018)\nLearning R for Geospatial Analysis (Dorman 2014)\nApplied Spatial Data Analysis with R (1st ed. 2008, 2nd ed. 2013) (Bivand, Pebesma, and Gomez-Rubio 2013)\nHierarchical Modeling and Analysis for Spatial Data (1st ed. 2003, 2nd ed. 2014) (Banerjee, Carlin, and Gelfand 2014)\nAn Introduction to R for Spatial Analysis and Mapping (1st ed. 2015, 2nd ed. 2018) (Brunsdon and Comber 2015)\nSpatial Point Patterns: Methodology and Applications with R (2015) (Baddeley, Rubak, and Turner 2015)\nDisplaying Time Series, Spatial, and Space-Time Data with R (1st ed. 2014, 2nd ed. 2018) (Lamigueiro 2014)\nPredictive Soil Mapping with R (Hengl and MacMillan 2019)\nGeocomputation with R (Lovelace, Nowosad, and Muenchow 2019)\nSpatial Data Science (2021?)\n\n\n\nPapers\n\nPebesma, E., Bivand, R. S. (2005). Classes and Methods for Spatial Data: the sp Package. R news, 5(2), 9-13. [PDF]\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1):439-446. [PDF]\n\n\n\nCourses and tutorials\n\nCourses\n\nGEOG 4/595: Geographic Data Analysis\nCP6521 Advanced GIS\nES214 Introduction to GIS and Spatial Analysis\nGEOG 4/590: R for Earth-System Science\nGEOG 4/595: Geographic Data Analysis\nSpatial Data Science with R (Robert J. Hijmans)\nIntroduction to Spatial Data Programming with R (this course)\nGISC 422 Spatial Analysis and Modelling\nCASA0005 Geographic Information Systems and Science\nAnother list here\n\n\n\nTutorials\n\nGeospatial Data Science with R\nData Carpentry Workshops\nGIS in R (Nick Eubank)\nNEON Data Tutorials\nLearn Spatial Analysis (University of Chicago)\nWUR Geoscripting\nMapping in R\nSpatial Analysis notes\nClassifying Satellite Imagery in R\nFundamentals of Spatial Analysis in R\nHandling and Analyzing Vector and Raster Data Cubes with R\nIntroduction to geospatial data analysis in R\n\n\n\nPresentations\n\nUseR! 2017: Tutorial \"Spatial Data in R: New Directions\"\nUseR! 2019: Spatial workshop part I\nUseR! 2019: Spatial workshop part II\nWhy-R 2020: Applied Spatial Data Analysis with R: retrospect and prospect\n\n\n\nOfficial materials\n\nsf Vignettes\nstars Vignettes"
  },
  {
    "objectID": "ch0.html",
    "href": "ch0.html",
    "title": "1  Geospatial Technology in R: Exploring Spatial Analysis Packages",
    "section": "",
    "text": "Geospatial technology has revolutionized the way we collect, analyze and interpret data related to coastal and marine environments. The use of remote sensing, geographic information systems (GIS) and global positioning systems (GPS) has enabled us to gain a better understanding of our oceans, coastlines, and the impact of human activity on these ecosystems.\nOne of the key advantages of geospatial technology is its ability to collect data over large areas in a relatively short period of time. This is particularly important in coastal and marine environments where traditional methods of data collection, such as boat surveys, can be time-consuming and expensive. Remote sensing techniques, such as satellite imagery and aerial photography, can provide a wealth of information on coastal and marine ecosystems, including water quality, sea surface temperature, and the distribution of habitats and species.\nGIS technology has also been instrumental in mapping and analyzing coastal and marine data. By overlaying different layers of information, such as bathymetry, sediment type, and biological data, we can gain a better understanding of the complex interactions that occur within these ecosystems. GIS has also been used to identify areas of high conservation value, such as critical habitat for endangered species or important breeding grounds for fish and other marine organisms.\nIn addition to remote sensing and GIS, GPS technology has also played a key role in coastal and marine data collection. By accurately recording the location of sampling sites and other data points, GPS has enabled researchers to create detailed maps of coastal and marine environments. This information can then be used to monitor changes over time, such as the erosion of shorelines or the expansion of harmful algal blooms.\nGeospatial technology has also been used to address a range of environmental issues in coastal and marine environments. For example, it has been used to monitor the impact of human activity on these ecosystems, such as the discharge of pollutants into coastal waters or the impact of commercial fishing on fish populations. It has also been used to develop tools for coastal zone management, such as predicting the impact of sea level rise on coastal communities or identifying areas at risk of coastal erosion.\nGeospatial technology has revolutionized the way we analyze and interpret spatial data. With the advent of powerful computing systems and sophisticated software packages, it has become easier to explore complex spatial patterns and relationships. In this book chapter, we will focus on exploring the various spatial analysis packages available in R, a popular open-source programming language for statistical computing and graphics.\nR, a powerful programming language and environment for statistical computing and graphics, offers a wide range of packages specifically designed for geospatial analysis. These packages provide tools and functions that enable users to work with spatial data, conduct geospatial analysis, and create informative visualizations. R offers a wide range of geospatial packages that can be used for different types of spatial analysis. Some of the most popular packages include:\n\nsf: This package provides a simple and efficient way to work with vector data in R. It supports a wide range of data formats, including shapefiles, GeoJSON, and KML. The package also includes a set of functions for data manipulation, visualization, and spatial analysis.\nraster: This package is designed for working with raster data in R. It provides functions for reading, writing, and manipulating raster datasets. The package also includes a set of functions for spatial analysis, such as resampling, reclassification, and overlay analysis.\nsp: This is one of the oldest and most widely used geospatial packages in R. It provides a set of classes and methods for working with spatial data in R. The package supports a wide range of spatial data formats, including shapefiles, GeoJSON, and KML. It also includes a set of functions for spatial analysis, such as buffering, distance calculations, and point-in-polygon tests.\nmaptools: This package provides a set of tools for working with spatial data in R. It includes functions for reading and writing spatial data in different formats, such as shapefiles, GeoJSON, and KML. The package also includes a set of functions for spatial analysis, such as clipping, merging, and overlay analysis.\nrgdal: This package provides an interface to the GDAL library, which is a powerful open-source library for working with geospatial data. The package allows R users to read and write different geospatial data formats, such as shapefiles, GeoJSON, and KML. It also includes a set of functions for spatial analysis, such as coordinate transformations and reprojection.\n\nThese are just a few of the many geospatial packages available in R. Each package has its own strengths and weaknesses, and the choice of package will depend on the specific needs of the user.\nSpatial analysis in R typically involves three main steps: data preparation, analysis, and visualization. In the data preparation step, the user loads the spatial data into R and prepares it for analysis. This may involve cleaning the data, transforming it into a different coordinate system, or merging it with other datasets.\nIn the analysis step, the user performs various spatial operations on the data using the functions provided by the geospatial packages. This may involve calculating distances between points, overlaying different layers of data to identify spatial patterns, or clustering points based on their proximity.\nIn the visualization step, the user creates maps and other visualizations to communicate the results of the analysis. R provides a wide range of tools for creating maps and other visualizations, including ggplot2, plotly, and leaflet.\nOverall, geospatial technology in R has greatly expanded our ability to analyze and interpret spatial data. With its wide range of geospatial packages and powerful analytical capabilities, R has become an essential tool for anyone working with spatial data. Whether you are a researcher analyzing complex environmental patterns or a business analyst looking to optimize logistics networks, geospatial technology in R can help you make sense of your data and gain new insights into the world around us.\n\nR, a powerful programming language and environment for statistical computing and graphics, offers a wide range of packages specifically designed for geospatial analysis. These packages provide tools and functions that enable users to work with spatial data, conduct geospatial analysis, and create informative visualizations. In this chapter, we will explore some popular packages for spatial analysis in R, highlighting their features and applications.\n\nsf: Simple Features for R: The “sf” package is a fundamental package for working with spatial data in R. It provides a consistent and efficient framework for representing, manipulating, and analyzing spatial data. The package supports various types of spatial objects, including points, lines, polygons, and grids. With “sf,” users can perform common geospatial operations such as spatial joins, spatial queries, and spatial aggregations. The package also integrates seamlessly with other geospatial packages, making it a versatile choice for spatial analysis in R.\nsp: Spatial Data Classes and Methods: The “sp” package is another essential package for geospatial analysis in R. It offers classes and methods for handling and analyzing spatial data. The package includes classes for spatial points, lines, polygons, and grids, along with functions for spatial data manipulation, transformation, and visualization. “sp” also provides capabilities for spatial interpolation, geostatistics, and spatial regression modeling. While “sf” has gained popularity in recent years, “sp” remains widely used and is compatible with many existing R packages.\nraster: Analysis of Gridded Data: The “raster” package focuses on the analysis of gridded data, such as satellite imagery, digital elevation models, and climate data. It provides functions for reading, writing, and manipulating raster data, as well as tools for raster algebra, resampling, and overlay analysis. With “raster,” users can extract values from raster layers at specific locations, calculate terrain attributes, perform neighborhood operations, and conduct spatial modeling. The package also supports parallel processing to handle large raster datasets efficiently.\nrgdal: Interface to GDAL: The “rgdal” package acts as a bridge between R and the Geospatial Data Abstraction Library (GDAL), a widely used open-source library for reading and writing geospatial data formats. “rgdal” allows users to read, write, and manipulate spatial data in various formats, including shapefiles, GeoTIFFs, and KML files. It provides functions for coordinate system transformations, projection conversions, and geometric operations. “rgdal” enhances the spatial analysis capabilities of R by expanding its data interoperability.\nleaflet: Interactive Web Mapping: The “leaflet” package enables the creation of interactive web maps directly within R. It leverages the Leaflet JavaScript library and provides an R interface for building web-based maps with rich interactivity and customization options. Users can add various layers, including markers, polygons, and heatmaps, to their maps and incorporate interactive controls and pop-ups. “leaflet” also supports the integration of geospatial data with external data sources and enables the creation of dynamic and engaging web map applications.\n\nConclusion: R offers a diverse set of packages for geospatial analysis, catering to different needs and requirements. The packages mentioned in this chapter, including sf, sp, raster, rgdal, and leaflet, provide a solid foundation for conducting spatial analysis, handling spatial data, and creating visually appealing maps. By leveraging these packages, users can unlock the full potential of R for exploring and understanding spatial patterns, conducting geospatial modeling, and communicating results effectively."
  },
  {
    "objectID": "ch1.html#programming",
    "href": "ch1.html#programming",
    "title": "2  Introduction  The R environment",
    "section": "\n2.1 Programming",
    "text": "2.1 Programming\nIn this section, we are going to demontrate the way that programming differs from Graphical User Interfaces (GUI), and its advantages, through two examples. The first example (Section 1.1.1.2) shows how the graphical interface hides essential details about the data we are working with, and ways to interact with them. The second example (Section 1.1.1.3) is similar, but related to spatial data—it shows how a seemingly simple operation is in fact complex when working with a graphical interface, but it is made simple through programming.\n\n2.1.1 Why is programming necessary?\nProgramming is an essential skill for spatial data analysis due to the complexity of the data involved. Spatial data analysis involves working with data that has a geographic component, such as maps, satellite imagery, and GPS coordinates. This type of data can be incredibly large and complex, making it difficult to work with using traditional data analysis tools. Programming allows analysts to automate tasks, manipulate data, and create custom algorithms that can handle large amounts of spatial data. In addition, programming languages such as Python and R have libraries specifically designed for spatial data analysis, making it easier for analysts to work with this type of data. Overall, programming is necessary for spatial data analysis because it allows analysts to efficiently and effectively work with complex spatial data.\n\n2.1.2 What is programming?\nA computer program is a sequence of text instructions that can be “understood” by a computer and executed. A programming language is a machine-readable artificial language designed to express computations that can be performed by a computer. Programming is the preferred way for giving instructions to the computer.\nProgramming is the process of designing, writing, testing, and maintaining computer programs. It involves using various programming languages and tools to create software that can perform specific tasks. When it comes to data analysis, programming plays a crucial role in processing and analyzing large volumes of data. Data analysis is the process of examining data sets to extract meaningful insights and information.\nProgramming provides the necessary tools and techniques to manipulate and analyze data efficiently. This includes using programming languages such as Python, R, and SQL, as well as specialized libraries and frameworks for data analysis. With programming, data analysts can automate repetitive tasks, visualize data, and build complex models to make predictions and identify patterns. In summary, programming is an essential skill for data analysts as it enables them to work with large datasets and extract valuable insights from them.\n\n2.1.3 Computer hardware\nComputing is an essential aspect of modern life, and it comprises of five key elements that are crucial for its functioning (Figure 2.1). The first element is the Central Processing Unit (CPU), which is the brain of a computer. It performs all the processing tasks and manages the computer’s hardware and software components. The second element is Random Access Memory (RAM), which stores data temporarily and enables the CPU to access it quickly. The third element is the Display, which shows the output of the CPU’s processing in a visual format. It allows users to interact with the computer and access information easily.\nThe fourth element is Storage, which stores all the data and programs permanently, even when the computer is turned off. It includes hard drives, solid-state drives, and other types of storage devices. The final element is Network, which enables computers to communicate with each other and share data over a network. It includes wired and wireless networks and is crucial for internet connectivity. Understanding these five key elements of computing is essential for anyone who uses technology in their daily lives.\n\n\n\n\nFIGURE 2.1. Key component of the computing system\n\n\n\n\n\n2.1.4 Object-oriented programming\nIn object-oriented programming, the interaction with the computer takes places through objects. Each object belongs to a class: an abstract structure with certain properties. Objects are in fact instances of a class.\nThe class comprises a template which sets the properties and methods each object of that class should have, while an object contains specific values for that particular instance (Figure 1.12).\nFor example:\n\nAll cars we see in the parking lot are instances of the “car” class\nThe “car” class has certain properties (manufacturer, color, year) and methods (start, drive, stop)\nEach “car” object has specific values for the properties (Suzuki, brown, 2011)\n\nFigure 1.12: An object (https://www.w3schools.com/js/)\nIn R, as we will see later on, everything we work with are objects. For example, a raster—such as rainfall.tif which we mentioned earlier (Section 1.1.1.3)—that we import into R is actually translated to an object of a class named stars. The object has numerous properties, such as the number of rows an columns, the resolution, the Coordinate Reference System (CRS), and so on.\nThe following two expressions are used to import the raster rainfall.tif into the R environment (we will elaborate on that later on, in Sections 2.2 and 5.3.6):\nlibrary(stars) r = read_stars(\"rainfall.tif\")\nOnce imported, an object named r, belonging to the class named stars is used to represent rasters in R, exists in the R environment (more specifically in the RAM, see Section 1.1.3). For example, printing to object displays some of its properties and their specific values, such as a resolution (delta) of 1000 meters:\nr ## stars object with 2 dimensions and 1 attribute ## attribute(s): ##  rainfall.tif    ##  Min.   :200.0   ##  1st Qu.:373.3   ##  Median :500.7   ##  Mean   :483.8   ##  3rd Qu.:585.6   ##  Max.   :908.5   ##  NA's   :20780   ## dimension(s): ##   from  to  offset delta                refsys point values x/y ## x    1 153  616965  1000 WGS 84 / UTM zone 36N FALSE   NULL [x] ## y    1 240 3691819 -1000 WGS 84 / UTM zone 36N FALSE   NULL [y]\nYou don’t need to worry about the meaning of the different properties in the above output yet. Again, we are going to cover these in detail later on (Sections 5.3.8.1–5.3.8.3 and 6.3).\n\n2.1.5 Inheritance\nOne of the implications of object-oriented programming is inheritance. Inheritance makes it possible for one class to “extend” another class, by adding new properties and/or new methods. Using our car example (Figure 1.12):\n\nA “taxi” is an extension of the “car” class, inheriting all of its properties and methods\nIn addition to the inherited properties, a “taxi” has new properties (taxi company name) and new methods (switching the taximeter on and off)\n\nIn R, the idea of inheritance is realized in various ways. For example, every complex object (such as a raster) is actually a collection of smaller components (the properties). Looking at the structure of the raster object r (using the str function, see Section 4.1.4.2) reveals that it is, in fact, a collection of many small objects belonging to simpler classes, each holding a piece of information. For example, the resolution property (named delta) is in fact a numeric vector (class numeric, see Section 2.3) of length 1 (i.e., containing a single value, 1000):\nstr(r) ## List of 1 ##  $ rainfall.tif: num [1:153, 1:240] NA NA NA NA NA NA NA NA NA NA ... ##  - attr(*, \"dimensions\")=List of 2 ##   ..$ x:List of 7 ##   .. ..$ from  : num 1 ##   .. ..$ to    : num 153 ##   .. ..$ offset: num 616965 ##   .. ..$ delta : num 1000 ##   .. ..$ refsys:List of 2 ##   .. .. ..$ input: chr \"WGS 84 / UTM zone 36N\" ##   .. .. ..$ wkt  : chr \"PROJCRS[\\\"WGS 84 / UTM zone 36N\\\",\\n    BASEGEOGCRS[\\\"WGS 84\\\",\\n        DATUM[\\\"World Geodetic System 1984\\\",\\\"| __truncated__ ##   .. .. ..- attr(*, \"class\")= chr \"crs\" ##   .. ..$ point : logi FALSE ##   .. ..$ values: NULL ##   .. ..- attr(*, \"class\")= chr \"dimension\" ##   ..$ y:List of 7 ##   .. ..$ from  : num 1 ##   .. ..$ to    : num 240 ##   .. ..$ offset: num 3691819 ##   .. ..$ delta : num -1000 ##   .. ..$ refsys:List of 2 ##   .. .. ..$ input: chr \"WGS 84 / UTM zone 36N\" ##   .. .. ..$ wkt  : chr \"PROJCRS[\\\"WGS 84 / UTM zone 36N\\\",\\n    BASEGEOGCRS[\\\"WGS 84\\\",\\n        DATUM[\\\"World Geodetic System 1984\\\",\\\"| __truncated__ ##   .. .. ..- attr(*, \"class\")= chr \"crs\" ##   .. ..$ point : logi FALSE ##   .. ..$ values: NULL ##   .. ..- attr(*, \"class\")= chr \"dimension\" ##   ..- attr(*, \"raster\")=List of 3 ##   .. ..$ affine     : num [1:2] 0 0 ##   .. ..$ dimensions : chr [1:2] \"x\" \"y\" ##   .. ..$ curvilinear: logi FALSE ##   .. ..- attr(*, \"class\")= chr \"stars_raster\" ##   ..- attr(*, \"class\")= chr \"dimensions\" ##  - attr(*, \"class\")= chr \"stars\"\nThe benefit of inheritance is that the programmer does not need to write every class from scratch. Instead, new classes can be built on top of existing ones, while re-using their properties and methods."
  },
  {
    "objectID": "ch1.html#sec-r",
    "href": "ch1.html#sec-r",
    "title": "2  Introduction  The R environment",
    "section": "\n2.2 Starting R",
    "text": "2.2 Starting R\nNow that we covered some central theoretical concepts related to programming, we are staring the practical part—writing R code to work with spatial data. In this chapter, we will become familiar with the R environment, its basic operators and syntax rules. To install R on a Windows computer, follow these steps:\n\nVisit the official R website at https://www.r-project.org/.\nClick on the “Download R” link in the “Getting Started” section.\nChoose a CRAN mirror site that is geographically closest to your location.\nSelect the appropriate version of R for your operating system (Windows in this case).\nClick on the download link for the base distribution of R.\nRun the installer and follow the prompts to complete the installation process.\nOnce installed, launch R by clicking on its icon on your desktop or from the Start menu.\n\nThe current version at the time of writing (October 2020) is R version 4.3.0 released on 2023-04-21. Once R is installed, we can open the default interface (RGui) with Start → All Programs → R → R x64 4.3.0 (Figure 2.2).\n\n\n\n\nFIGURE 2.2. R language Graphic User Interaface (GUI)\n\n\n\n\nWe will be working with R through a more advanced interface than the default one, called the RStudio. It can be downloaded from the RStudio company website. The current version is RSTUDIO-2023.03.1-446. Once both R and RStudio are installed, we can open RStudio with Start → All Programs → RStudio → RStudio Figure 2.3.\n\n\n\n\nFIGURE 2.3. Interactive Development Environment of R simplified in RStudio\n\n\n\n\n\n2.2.1 Console\nIn this section, we will only work with the console shown in Figure 2.4. The console in RStudio is an essential tool for coding in R. It is a command-line interface that allows users to interact with the R programming language. The console is where users can enter and execute R commands and see the output of those commands.\nIt is a powerful tool for data analysis and statistical modeling, allowing users to quickly test and iterate on code. The console also displays error messages and warnings, making it easier to debug code. In addition, the console can be used to install and load packages, set working directories, and manage data objects. Overall, the console in RStudio is a valuable tool for any programmer working with R, providing a streamlined way to write, test, and debug code.\n\n\n\n\nFIGURE 2.4. RStudio console\n\n\n\n\n\n2.2.2 Basic R expressions\n\n2.2.3 Console input and output\nThe simplest way to interact with the R environment is typing an expression into the R console, pressing Enter to execute it. For example, let’s type the expression 1+3+5+7:\n\nCode1 + 3 + 5 + 7\n\n[1] 16\n\n\nAfter we press Enter, the expression 1+3+5+7 is sent to the processor. The returned value, 16, is then printed in the console. Note that the value 16 is not kept in in the RAM or Mass Storage, just printed on screen.\nWe can type a number, the number itself is returned:\n\nCode600 \n\n[1] 600\n\n\nWe can type text inside single ' or double \" quotes:\n\nCode\"Hello\" \n\n[1] \"Hello\"\n\n\nThe last two expressions are examples of constant values, numeric or character. These are the simplest type of expressions in R.\n\n2.2.4 Arithmetic operators\nThrough interactive use of the command line, we can experiment with basic operators in R. For example, R includes the standard arithmetic operators (Table 1.1).\n\n\n\nTable 1.1: Arithmetic operators\n\n\nOperator\nMeaning\n\n\n+\nAddition\n\n\n-\nSubtraction\n\n\n*\nMultiplication\n\n\n/\nDivision\n\n\n^\nExponent\n\n\nHere are some examples of expressions that use the arithmetic operators:\n\nCode5 + 3 \n\n[1] 8\n\n\n\nCode4 - 5 \n\n[1] -1\n\n\n\nCode1 * 10 \n\n[1] 10\n\n\n\nCode1 / 10 \n\n[1] 0.1\n\n\n\nCode10 ^ 2 \n\n[1] 100\n\n\n\n\n\n\n\n\nImportant\n\n\n\nWe can use the up ↑ and down ↓ keys to scroll through the executed expressions history. Try to execute several different expressions, then scroll up until you reach one of the previous expressions and re-execute it by pressing Enter. Scrolling through expression history is convenient for going back to previously exceuted code, without re-typing it, possibly making modifications before excecuting it once again.\n\n\nNote that very large or very small numbers are formatted in exponential notation:\n\nCode1 / 1000000\n\n[1] 1e-06\n\n\n\nCode7 * 100000\n\n[1] 7e+05\n\n\nInfinity is treated as a special numeric value, Inf or -Inf:\n\nCode1 / 0\n\n[1] Inf\n\n\n\nCode-1 / 0\n\n[1] -Inf\n\n\n\nCodeInf + 1\n\n[1] Inf\n\n\n-1 *\nWe can control operator precedence with brackets, just like in math:\n\nCode2 * 3 + 1\n\n[1] 7\n\n\n\nCode2 * (3 + 1)\n\n[1] 8\n\n\nIt is recommended to use brackets for clarity, even where not strictly required.\n\n2.2.5 Spaces and comments\nThe interpreter ignores everything to the right of the number symbol #:\n1 * 2 # * 3 \nThe # symbol is therefore used for code comments:\n# Multiplication example 5 * 5 \n\nWhy do you think the code outputs are marked by ## in the code sections (such as ## [1] 25 in the above code section)?\n\nThe interpreter ignores spaces, so the following expressions are treated exactly the same way:\n1 + 1 \n1+1 \n1+1\nWe can type Enter in the middle of an expression and keep typing on the next line. The interpreter displays the + symbol, which means that the expression is incomplete (Figure 1.18):\n5 *  2 #\nFigure 1.18: Incomplete expression\nWe can exit from the “completion” state, or from an ongoing computation, any time, by pressing Esc.\nClearing the console can be done with Ctrl+L.\n\n2.2.6 Conditional operators\nConditions are expressions that use conditional operators and have a yes/no result, i.e., the condition can be either true or false. The result of a condition is a logical value, TRUE or FALSE:\n\nTRUE means the expression is true\nFALSE means the expression is false\n(NA means it is unknown)\n\nThe conditional operators in R are listed in Table 1.2.\n\n\n\nTable 1.2: Conditional operators\n\n\nOperator\nMeaning\n\n\n==\nEqual\n\n\n&gt;\nGreater than\n\n\n&gt;=\nGreater than or equal\n\n\n&lt;\nLess than\n\n\n&lt;=\nLess than or equal\n\n\n!=\nNot equal\n\n\n&\nAnd\n\n\n|\nOr\n\n\n!\nNot\n\n\nFor example, we can use conditional operators to compare numeric values:\n1 &lt; 2\n1 &gt; 2\n2 &gt; 2\n2 &gt;= 2\n2 != 2\n“Equal” (==) and “not equal” (!=) are opposites of each other, since a pair of values can be either equal or not:\n1 == 1 \n1 == 2 \nThe “and” (&) and “or” (|) operators are used to create more complex conditions. “And” (&) returns TRUE when both sides are TRUE:\n(1 &lt; 10) & (10 &lt; 100) \n(1 &lt; 10) & (10 &gt; 100) \n“Or” (|) returns TRUE when at least one of the sides is TRUE:\n\nCode(1 &lt; 10) | (10 &lt; 100) \n\n[1] TRUE\n\n\n\nCode(1 &lt; 10) | (10 &gt; 100) \n\n[1] TRUE\n\n\nThe last conditional operator is “not” (!), which reverses TRUE to FALSE and FALSE to TRUE:\n\nCode1 == 1 \n\n[1] TRUE\n\n\n\nCode!(1 == 1) \n\n[1] FALSE\n\n\n\nCode(1 == 1) & (2 == 2) \n\n[1] TRUE\n\n\n\nCode(1 == 1) & !(2 == 2) \n\n[1] FALSE\n\n\n\nRun the following expression and explain their result:\nFALSE == FALSE\n!(TRUE == TRUE)\n!(!(1 == 1))\n\n\n2.2.7 Special values\nR has several special values, as listed in Table 1.3.\n\n\n\nTable 1.3: Special values in R\n\n\nValue\nMeaning\n\n\nInf\nInfinity\n\n\nNA\nNot Available\n\n\nNaN\nNot a Number\n\n\nNULL\nEmpty object\n\n\nWe already met Inf, and have shown how it can be the result of particular arithmetic operations such as division by zero (Section 1.3.2):\n\nCode1 / 0\n\n[1] Inf\n\n\nNA specifies an unknown, or missing, value. Later on, we are going to encounter several situations where NA values can arise. For example, empty cells in a table imported into R, such as from a CSV file (Section 4.4), are encoded in R as NA values.\nNA values can participate in any arithmetic or logical operation. For example:\n\nCodeNA + 3\n\n[1] NA\n\n\n\nWhy do you think the result of the above expression is NA?\n\n\nWhat do you think will be the result of the expression NA == NA?\n\nNaN is less relevant for the material of this book, but it is important to be familiar with it. NaN values often result from “meaningless” arithmetic operations:\n\nCode0 / 0 \n\n[1] NaN\n\n\nFor most practical purposes, NaN values behave exactly the same way as NA values.\nFinally, the value of NULL specifies an empty object:\n\nCodeNULL\n\nNULL\n\n\nNULL has some uses which we will discuss later on (Section 4.2.3).\n\n2.2.8 Functions\nIn math, a function (Figure 1.19) is a relation that associates each element x of a set X, to a single element y of another set Y. For example, the function y=2x�=2� is a mathematical function that associates any number x� with the number 2x2�.\nFigure 1.19: A function\nThe concept of functions in programming is similar. A function is a code piece that “knows” how to do a certain task. Executing the function is known as a function call. The function accepts zero or more objects as input (e.g., 2) and returns a single object as output (e.g., 4). In addition to the returned value, the function may perform other task(s), known as side effects (for example: writing information to a file, or displaying graphical output).\nThe number and type of inputs the function needs are determined in the function definition; these are known as the function parameters (e.g., a single number). The objects the function received in practice, as part of a particular function call, are known as arguments (e.g., 2).\nA function is basically a set of pre-defined instructions. There are thousands of built-in functions in R. Later on we will learn to define our own functions (Section 3.3).\nA function call is composed of the function name, followed by the arguments inside brackets () and separated by commas ,. For example, the sqrt function calculates the square root of its input. For example, the following expression calls the sqrt function with the argument 4:\n\nCodesqrt(4)\n\n[1] 2\n\n\nHere, the sqrt function received a single argument 4 and returned its square root 2.\nAs a side note, it is interesting to mention that everything we do in R in fact involves functions (Figure 1.20).\nFigure 1.20: From Chambers 2014, Statistical Science (https://arxiv.org/pdf/1409.3531.pdf)\nEven arithmetic operators are functions, just written in a special way. The arithmetic operators can be executed in the “ordinary” function syntax, too, as follows:\n\nCode`+`(5, 5)\n\n[1] 10\n\n\n\n2.2.9 Error messages\nConsider the following three different expressions:\n\nCodesqrt(16)\n\n[1] 4\n\n\nsqrt(\"16\")\nsqrt(a)\nIn last two expressions we got error messages, because the expressions were illegal, i.e., not in agreement with the syntax rules of R. The first error occurred because we tried to run a mathematical operation sqrt on a text value \"a\". The second error occurred because we tried to use a non-existing object a. Any text without quotes is treated as a name of an object, i.e., a label for an actual object stored in RAM. Since we don’t have an object named a we got an error.\n\n2.2.10 Pre-loaded objects\nWhen starting R, a default set of objects is loaded into the RAM, such as TRUE, FALSE, sqrt and pi. For example, type pi and see what happens:\n\nCodepi\n\n[1] 3.141593\n\n\n\n2.2.11 Decimal places\nIs the value of π� stored in memory really equal to the value we see on screen (3.141593)? Executing the following condition reveals that the answer is no:\n\nCodepi == 3.141593\n\n[1] FALSE\n\n\nIf not, what is the difference?\n\nCodepi - 3.141593\n\n[1] -3.464102e-07\n\n\nThe reason for the discrepancy is that, by default, R prints only the first 7 digits:\n\nCodeoptions()$digits\n\n[1] 7\n\n\nWhen working with R we should keep in mind that the printed value and object contents are not always identical, so that the printed output is more convenient for the user.\n\nThe number of digits to print can be changed with an expression such as options(digits=22). Try running the latter expression, then print the value of pi once again.\n\n\n2.2.12 Case-sensitivity\nR is case-sensitive, it distinguishes between lower-case and upper-case letters. For example, TRUE is a logical value, but True and true are undefined:\n\nCodeTRUE\n\n[1] TRUE\n\n\nTrue\ntrue\n\n2.2.13 Classes\nR is an object-oriented language (Section 1.1.5), where each object belongs to a class. The class functions accepts an object and returns the class name:\n\nCodeclass(TRUE)\n\n[1] \"logical\"\n\n\n\nCodeclass(1)\n\n[1] \"numeric\"\n\n\n\nCodeclass(pi)\n\n[1] \"numeric\"\n\n\n\nCodeclass(\"a\")\n\n[1] \"character\"\n\n\n\nCodeclass(sqrt)\n\n[1] \"function\"\n\n\n\nExplain the returned value of the following expressions.\n\nclass(1 &lt; 2)\nclass(\"logical\")\nclass(1) == class(2)\nclass(class)\nclass(class(sqrt))\nclass(class(1))\n\n2.2.14 Using help files\nEvery built-in object is associated with a help document, which can be accessed using the help function or the ? operator:\nhelp(class) ?class ?TRUE ?pi"
  },
  {
    "objectID": "ch1.html#packages",
    "href": "ch1.html#packages",
    "title": "2  Introduction  The R environment",
    "section": "\n2.3 Packages",
    "text": "2.3 Packages\nSo far we’ve been using a couple functions that are included with R out-of-the-box such as search() and q(). We say that these functions are from “Base R”. But, one of the amazing things about R is its users’ community that create new functions and packages. An R package is a collection of functions, data, and documentation that extends the capabilities of base R. Using packages is key to the successful use of R. The majority of the packages that you will learn in this manual are part of the so-called tidyverse, which is an ecosystem of packages that share a common philosophy of data and R programming, and are designed to work together naturally.\nThe tidyverse is a coherent system of packages for data manipulation, exploration and visualization that share a common design philosophy. The Tidyverse (Wickham et al. 2019) packages form a core set of functions that will allow us to perform most any type of data cleaning or analysis we will need to do. We will use the following packages from the tidyverse\n\n\nggplot2—for data visualisation.\n\ndplyr—for data manipulation.\n\ntidyr—for data tidying.\n\nreadr—for data import.\n\npurrr—for functional programming.\n\ntibble—for tibbles, a modern re-imagining of data frames.\n\n\n2.3.1 Installing R packages\nFor us to use tidyverse and any other package that is not included in Base R, we must install them first. The easiest way to install packages is to use the install.packages() command. For example, let’s go ahead and install the tidyverse package on your machine:\ninstall.packages(\"tidyverse\")\nOn your own computer, type that line of code in the console, and then press enter to run it. R will download the packages from CRAN and install it to your computer. If you have problems installing, make sure that you are connected to the internet, and that https://cloud.r-project.org/ isn’t blocked by your firewall or proxy.\n\n2.3.2 Loading installed packages\nNow we’ve installed the package, but we need to tell R that we are going to use some functions within the tidyverse package. With exception to base R package, add on package that are installed must be called with either library or require functions to make their tools accessible in R session. Let’s us load the tidyverse package we just installed\nrequire(tidyverse)\nYou notice that when we load tidyverse, it popup a notification message showing the loaded packages and the conflicts they bring in. These conflicts happen when packages have functions with the same names as other functions. This is OK when you prefer the function in a package like tidyverse rather than some other function. Basically the last package loaded in will mask over other functions if they have common names.\n\n2.3.3 Flavours of R: base and tidyverse\nR is a programming language, and just like any language, it has different dialects. When you read about R online, you’ll frequently see people mentioning the words “base” and “tidyverse.” These are the two most common dialects of R. Base R is just that, R in its purest form. The tidyverse is a collection of add-on packages for working with different types of data. The two are fully compatible, and you can mix and match as much as you like. Both ggplot2 and magrittr are part of the tidyverse.\nIn recent years, the tidyverse has been heavily promoted as being “modern” R which “makes data science faster, easier and more fun.” You should believe the hype. The tidyverse is marvellous. But if you only learn tidyverse R, you will miss out on much of what R has to offer. Base R is just as marvellous, and can definitely make data science as fast, easy and fun as the tidyverse. Besides, nobody uses just base R anyway - there are a ton of non-tidyverse packages that extend and enrich R in exciting new ways. Perhaps “extended R” would be better names for the non-tidyverse dialect.\nAnyone who tells you to just learn one of these dialects is wrong. Both are great, they work extremely well together, and they are similar enough that you shouldn’t limit yourself to just mastering one of them. This book will show you both base R and tidyverse solutions to problems, so that you can decide for yourself which is faster, easier, and more fun.\nA defining property of the tidyverse is that there are separate functions for everything, which is perfect for code that relies on pipes. In contrast, base R uses fewer functions, but with more parameters, to perform the same tasks. If you use tidyverse solutions there is a good chance that there exists a function which performs exactly the task you’re going to do with its default settings. This is great (once again, especially if you want to use pipes), but it means that there are many more functions to master for tidyverse users, whereas you can make do with much fewer in base R. You will spend more time looking up function arguments when working with base R (which fortunately is fairly straightforward using the ? documentation), but on the other hand, looking up arguments for a function that you know the name of is easier than finding a function that does something very specific that you don’t know the name of. There are advantages and disadvantages to both approaches.\n\nExample 2.1 Oh no! After all our analyses and everything we’ve done, our colleague just emailed us that Tanzania and Zanzibar should not be separated but combined to form a single country Tanzania.\n\n\nSolution. \n\nThat request force us to start over the analysis and combine the catch data for mainland Tanzania and Zanzibar. Aaaaah! If we were doing this in Excel, this would be a bummer; we’d have to rebuild our pivot table and click through all of our logic again. And then export our figures and save them into our report.\n\n\n\n\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686."
  },
  {
    "objectID": "ch2.html#rstudio-keyboard-stortcuts",
    "href": "ch2.html#rstudio-keyboard-stortcuts",
    "title": "\n3  Vectors\n",
    "section": "\n3.1 RStudio keyboard stortcuts",
    "text": "3.1 RStudio keyboard stortcuts\nRStudio provides several handy keyboard shortcuts that streamline the process of editing and executing code files. Here are some useful RStudio keyboard shortcuts:\n\nCtrl + Enter: Executes the currently selected line or the highlighted code chunk.\nCtrl + Shift + Enter: Executes the current line or selected code chunk and moves the cursor to the next line.\nCtrl + Shift + Up/Down Arrow: Moves the current line or selected lines up or down within the script.\nCtrl + L: Clears the console.\nCtrl + 1/2/3/4: Switches between the different panes in RStudio (Source, Console, Environment, and Plots).\nCtrl + Shift + M: Inserts a new Markdown chunk in an R Markdown document.\nCtrl + Shift + K: Knits the current R Markdown document to the specified output format.\nCtrl + Shift + C: Comments or uncomments the selected lines or the current line.\nCtrl + Shift + R: Runs the current line or selected code as R code (useful for running lines in R Markdown documents).\nCtrl + Shift + T: Surrounds the selected text with a tag in an R Markdown document.\n\nThese are just a few examples of the keyboard shortcuts available in RStudio. To explore more shortcuts or customize them according to your preferences, you can go to the “Tools” menu in RStudio, select “Modify Keyboard Shortcuts,” and browse through the available options."
  },
  {
    "objectID": "ch2.html#vectors",
    "href": "ch2.html#vectors",
    "title": "\n3  Vectors\n",
    "section": "\n3.2 Vectors",
    "text": "3.2 Vectors\n\n3.2.1 What is a vector?\nThe vector is indeed the simplest data structure in R and serves as our introductory topic in this book. In R, a vector is an ordered collection of values that share the same data type. It can contain elements of various types, such as numeric, character, logical, or factors. Here are a few examples illustrating the concept of a vector:\n\nNumeric vector: c(1.5, 2.7, 3.9, 4.2)\nCharacter vector: c(“apple”, “banana”, “orange”)\nLogical vector: c(TRUE, FALSE, TRUE, FALSE)\nFactor vector: factor(c(“low”, “medium”, “high”, “low”))\n\nEach of these examples represents a vector with elements of the same data type. The elements within a vector maintain their order, allowing for easy indexing and manipulation. Understanding vectors is fundamental as they serve as building blocks for more complex data structures and facilitate data analysis and manipulation in R.\n\n3.2.2 The c function\nVectors can be created with the c function, which combines the given vectors, in the specified order. For example:\n\nCodex = c(1, 2, 3) \nx \n\n[1] 1 2 3\n\n\nThe c() function in R is not limited to combining individual values but can also be used to combine multiple vectors of different lengths into a new vector. Here’s an example that demonstrates this capability:\n\nCodev1 &lt;- c(1, 2, 3)\nv2 &lt;- c(4)\nv3 &lt;- c(5, 6, 7)\nv4 &lt;- c(8, 9)\n\ncombined_vector &lt;- c(v1, v2, v3, v4)\ncombined_vector\n\n[1] 1 2 3 4 5 6 7 8 9\n\n\nThe c() function in R can indeed be used to combine vectors of different lengths into a new vector. Here’s the corrected example:\n\nCodev1 &lt;- c(1, 2, 3)\nv2 &lt;- c(4)\nv3 &lt;- c(5, 6, 7)\nv4 &lt;- c(8, 9)\n\ncombined_vector &lt;- c(v1, v2, v3, v4)\ncombined_vector\n\n[1] 1 2 3 4 5 6 7 8 9\n\n\nThe expression c(x, 84, x, c(-1, -2)) combines the values from multiple vectors into a new vector. However, since the value of x is not provided, I’ll demonstrate the general concept using a placeholder value.\nHere is another example of using the c function, this time to combine four character values into a vector of length 4.\n\nCodey = c(\"cat\", \"dog\", \"mouse\", \"apple\") \ny\n\n[1] \"cat\"   \"dog\"   \"mouse\" \"apple\"\n\n\n\n3.2.3 Vector subsetting (individual elements)\nIn R, individual elements of a vector can be accessed using the [ operator along with a numeric index. This indexing mechanism allows us to retrieve a specific element from the vector, effectively creating a subset containing only that element. By specifying the desired index within square brackets, we can extract the value associated with that position in the vector. For example, my_vector[3] would retrieve the third element of the vector my_vector. This capability provides flexibility in working with vectors, allowing us to selectively access and manipulate individual elements as needed for our data analysis and computations.\n\nCodey[1] \n\n[1] \"cat\"\n\n\n\nCodey[2] \n\n[1] \"dog\"\n\n\n\nCodey[3] \n\n[1] \"mouse\"\n\n\n\nCodey[4]\n\n[1] \"apple\"\n\n\nNote that numeric indices in R start at 110!\nHere is another example:\n\nCodecounts = c(2, 0, 3, 1, 3, 2, 9, 0, 2, 1, 11, 2) \ncounts[4] \n\n[1] 1\n\n\nWe can also make an assignment into a vector subset, for example to replace an individual element:\n\nCodex = c(1, 2, 3)\nx \n\n[1] 1 2 3\n\n\n\nCodex[2] = 300 \nx \n\n[1]   1 300   3\n\n\nIndeed, in the example you provided, we made an assignment into a subset with a single element. However, as we progress in our learning, we will discover that assigning values into subsets can be done for subsets of any length. This flexibility allows us to modify specific elements or even replace entire subsets within a vector. By specifying the desired subset using indexing techniques, we can assign new values to those elements, effectively updating or altering the vector according to our requirements.\nThis capability becomes particularly valuable when performing data manipulations, transformations, or when updating specific data points within a larger dataset. As we delve deeper into R, we will explore various techniques and approaches for assigning values into subsets of different lengths, empowering us to efficiently manipulate and update our data as needed.\n\n3.2.4 Calling functions on a vector\nR provides a wide range of functions that allow us to calculate various properties of vectors. Some commonly used functions include length, min, max, range, mean, and sum. Here’s an example that showcases their usage:\n\nCodex = c(1, 6, 3, -8, 2) \nx \n\n[1]  1  6  3 -8  2\n\n\n\nCodelength(x)  \n\n[1] 5\n\n\n\nCodemin(x)    \n\n[1] -8\n\n\n\nCodemax(x)     \n\n[1] 6\n\n\n\nCoderange(x)   \n\n[1] -8  6\n\n\n\nCodemean(x)    \n\n[1] 0.8\n\n\n\nCodesum(x)     \n\n[1] 4\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn what way is the range function different from the other functions shown above?\n\n\nContrariwise, there are functions that operate on each vector element, separately, returning a vector of results having the same length as the input:\n\nCodeabs(x)   # Absolute value ## [1] 1 6 3 8 2\n\n[1] 1 6 3 8 2\n\n\n\nCodesqrt(x)  \n\n[1] 1.000000 2.449490 1.732051      NaN 1.414214\n\nCodex\n\n[1]  1  6  3 -8  2\n\n\n\n3.2.5 The recycling rule (arithmetic)\nWhen binary operations, such as arithmetic operators (+, -, *, /), are applied to two vectors in R, the operations are performed element-by-element. This means that each corresponding pair of elements from the two vectors is operated upon independently, resulting in a new vector of the respective results. Here’s an example that demonstrates this behavior:\n\nCodevector1 &lt;- c(1, 2, 3)\nvector2 &lt;- c(4, 5, 6)\n\n\n\nCodevector1 + vector2\n\n[1] 5 7 9\n\n\n\nCodevector1 - vector2\n\n[1] -3 -3 -3\n\n\n\nCodevector1 * vector2\n\n[1]  4 10 18\n\n\n\nCodevector1 / vector2\n\n[1] 0.25 0.40 0.50\n\n\n\nCodevector1 &gt; vector2\n\n[1] FALSE FALSE FALSE\n\n\n\nCodevector1 &lt; vector2\n\n[1] TRUE TRUE TRUE\n\n\nWhat happens when the input vector lengths do not match? In such case, the shorter vector gets “recycled”. For example, when one of the vectors is of length 3 and the other vector is of length 6, then the shorter vector (of length 3) is replicated two times, until it matches the longer vector (Figure 2.7). Thus, the expression:\n\nCodec(1, 2, 3)  + c(1, 2, 3, 4, 5, 6) \n\n[1] 2 4 6 5 7 9\n\n\nis similar to the expression:\n\nCodec(1, 2, 3, 1, 2, 3) + c(1, 2, 3, 4, 5, 6) \n\n[1] 2 4 6 5 7 9\n\n\nWhen one of the vectors is of length 1 and the other is of length 4, the shorter vector (of length 1) is replicated 4 times:\n\nCode2  * c(1, 2, 3, 4) \n\n[1] 2 4 6 8\n\n\n\nCodec(2, 2, 2, 2) * c(1, 2, 3, 4) \n\n[1] 2 4 6 8\n\n\nWhen one of the vectors is of length 2 and the other is of length 6, the shorter vector (of length 2) is replicated 3 times:\n\nCodec(10, 100) + c(1, 2, 3, 4, 5, 6) \n\n[1]  11 102  13 104  15 106\n\n\n\nCodec(10, 100, 10, 100, 10, 100) + c(1, 2, 3, 4, 5, 6) \n\n[1]  11 102  13 104  15 106\n\n\nWhat happens when the longer vector length is not a multiple of the shorter vector length? When the longer vector length is not a multiple of the shorter vector length, a situation arises where recycling is incomplete. This means that the elements of the shorter vector cannot be evenly distributed or recycled to match the length of the longer vector. As a result, some elements from the shorter vector will be used to fill up the longer vector, but there will be remaining elements in the shorter vector that do not have corresponding positions in the longer vector.\nIn programming languages like R, this incomplete recycling is indicated by a warning message, which alerts the user to the fact that the two vectors are not compatible for recycling. It is important to ensure that vector lengths are compatible before attempting to recycle elements, as incomplete recycling\n\nCodec(1, 2) * c(1, 2, 3) \n\n[1] 1 4 3\n\n\n\nCodec(1, 2, 1) * c(1, 2, 3) \n\n[1] 1 4 3\n\n\n\n3.2.6 Consecutive and repetitive vectors\nIn addition to the c function, there are three commonly used methods for creating consecutive or repetitive vectors: the seq and rep functions.\nThe seq function generates a sequence of numbers that can be either increasing or decreasing. It takes arguments such as the starting point, ending point, and the increment or decrement value. For example, seq(1, 10, 2) creates a vector with the numbers 1, 3, 5, 7, 9, indicating an increasing sequence with a step of 2.\n\nCodeseq(1, 10, 2)\n\n[1] 1 3 5 7 9\n\n\nGenerate a decreasing sequence from 10 to 1 with a step of 1\n\nCodeseq(10, 1, -1)\n\n [1] 10  9  8  7  6  5  4  3  2  1\n\n\nThe rep function, on the other hand, replicates elements of a vector. It can replicate a single element or an entire vector multiple times. By specifying the times argument, you can control the number of repetitions. For instance, rep(c(1, 2, 3), times = 3) generates a vector containing three repetitions of the sequence 1, 2, 3: 1, 2, 3, 1, 2, 3, 1, 2, 3.\n\nCoderep(1:3, times = 3)\n\n[1] 1 2 3 1 2 3 1 2 3\n\n\nReplicate a vector multiple times\n\nCoderep(c(\"A\", \"B\", \"C\"), each = 3)\n\n[1] \"A\" \"A\" \"A\" \"B\" \"B\" \"B\" \"C\" \"C\" \"C\"\n\n\nThese functions provide flexible ways to create consecutive or repetitive vectors in programming languages like R, allowing for efficient generation of data for various purposes.\n\n3.2.7 Function calls\nBy utilizing the seq function, we will illustrate three characteristics of function calls. Initially, it is possible to exclude parameter names provided that the arguments are provided in the default order. For instance, the subsequent function calls are equivalent as the default order of the first three parameters of the seq function is from, to, and by:\n\nCodeseq(from = 5, to = 10, by = 1) ## [1]  5  6  7  8  9 10\n\n[1]  5  6  7  8  9 10\n\n\n\nCodeseq(5, 10, 1) ## [1]  5  6  7  8  9 10\n\n[1]  5  6  7  8  9 10\n\n\nFurthermore, we can utilize any argument order by explicitly specifying parameter names. This allows for flexibility in function calls. Even if the order of arguments is different, the following three function calls are equivalent due to the usage of parameter names:\n\nCodeseq(to = 10, by = 1, from = 5) \n\n[1]  5  6  7  8  9 10\n\n\n\nCodeseq(by = 1, from = 5, to = 10) \n\n[1]  5  6  7  8  9 10\n\n\n\nCodeseq(from = 5, by = 1, to = 10) \n\n[1]  5  6  7  8  9 10\n\n\nLastly, it is possible to exclude parameters that have a default argument defined in the function. A default argument is a predefined value specified in the function definition. As an illustration, the by parameter in the seq function has a default value of 1. Hence, if the by argument is omitted in the function call, it will automatically be assigned the default value of 1:\n\nCodeseq(5, 10, 1) \n\n[1]  5  6  7  8  9 10\n\n\n\nCodeseq(5, 10) \n\n[1]  5  6  7  8  9 10\n\n\nThe order of parameters, their default values (if any), and other relevant information about a specific function can be found in the help file associated with that function. The help file provides comprehensive documentation that describes the function’s usage, arguments, return values, and often includes examples and additional explanations.\nIt is a valuable resource for understanding and utilizing functions effectively in programming languages like R. To access the help file for a specific function, you can use the ? operator followed by the function name in the R console or refer to the documentation provided by the programming environment or package documentation.\n?seq\n\n3.2.8 Vector subsetting (general)\nVector subsetting refers to the process of selecting specific elements from a vector based on certain criteria or indices. It allows you to extract a subset of data from a vector that meets your desired conditions or requirements. There are different ways to perform vector subsetting in various programming languages, including R.\nIn R, vector subsetting can be done using square brackets [ ] and various indexing methods. Here are a few commonly used approaches:\n\nCodex = c(43, 85, 10) \nx[3] \n\n[1] 10\n\n\nWe can also use a vector of length &gt;1 as an index. For example, the following expression returns the first and second elements of x, since the index is the the vector c(1,2) (which we create using the : operator) (Section 2.3.6.2):\n\nCodex[1:2] \n\n[1] 43 85\n\n\nNote that the vector of indices can consist of any combination of indices whatsoever. It does not have to be consecutive, and it can even include repetitions:\n\nCodex[c(1, 1, 3, 2)] \n\n[1] 43 43 10 85\n\n\nHere is another example:\n\nCodecounts = c(2, 0, 3, 1, 3) \ncounts[1:3] \n\n[1] 2 0 3\n\n\nAnd here is one more example where the index is not consecutive:\n\nCodecounts = c(2, 0, 3, 1, 3, 2, 9, 0, 2, 1, 11, 2) \ncounts[c(1:3, 7:9)] ## [1] 2 0 3 9 0 2\n\n[1] 2 0 3 9 0 2\n\n\nFor the next examples, let’s create a vector of all even numbers between 1 and 100:\n\nCodex = seq(2, 100, 2) \nx ##  [1]   2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38 ## [20]  40  42  44  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76 ## [39]  78  80  82  84  86  88  90  92  94  96  98 100\n\n [1]   2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38\n[20]  40  42  44  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76\n[39]  78  80  82  84  86  88  90  92  94  96  98 100\n\n\n\nWhat is the meaning of the numbers in square brackets when printing the vector?\n\nHow can we check how many elements does x have? Recall the length function :\n\nCodelength(x) ## [1] 50\n\n[1] 50\n\n\nUsing this knowledge, here are two expression that return the value of the last element in x:\n\nCodex[50] \n\n[1] 100\n\n\n\nCodex[length(x)] \n\n[1] 100\n\n\n\nWhich of the last two expressions is preferable? Why?\n\nWhich index can we use to get back the entire vector? We can use an index that contains all of the vector element indices, starting from 1 and up to length(x):\n\nCodex[1:length(x)] ##  [1]   2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38 ## [20]  40  42  44  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76 ## [39]  78  80  82  84  86  88  90  92  94  96  98 100\n\n [1]   2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38\n[20]  40  42  44  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76\n[39]  78  80  82  84  86  88  90  92  94  96  98 100\n\n\n\nWhat index can we use to get the entire vector except for the last two elements?\n\n\nWhat index can we use to get a reversed vector?\n\nNote that there is a special function named rev for reversing a vector:\n\nCoderev(x) ##  [1] 100  98  96  94  92  90  88  86  84  82  80  78  76  74  72  70  68  66  64 ## [20]  62  60  58  56  54  52  50  48  46  44  42  40  38  36  34  32  30  28  26 ## [39]  24  22  20  18  16  14  12  10   8   6   4   2\n\n [1] 100  98  96  94  92  90  88  86  84  82  80  78  76  74  72  70  68  66  64\n[20]  62  60  58  56  54  52  50  48  46  44  42  40  38  36  34  32  30  28  26\n[39]  24  22  20  18  16  14  12  10   8   6   4   2\n\n\nNote that, when requesting an element, or elements, beyond the vector length, we get NA (Not Available) value(s). For example:\n\nCodex[55] ## [1] NA\n\n[1] NA\n\n\n\nCodex[1:80] ##  [1]   2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38 ## [20]  40  42  44  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76 ## [39]  78  80  82  84  86  88  90  92  94  96  98 100  NA  NA  NA  NA  NA  NA  NA ## [58]  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA ## [77]  NA  NA  NA  NA\n\n [1]   2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38\n[20]  40  42  44  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76\n[39]  78  80  82  84  86  88  90  92  94  96  98 100  NA  NA  NA  NA  NA  NA  NA\n[58]  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA\n[77]  NA  NA  NA  NA\n\n\n\n3.2.9 The recycling rule (assignment)\nThe recycling rule in R also applies to assignment operations. When assigning a vector of length 1 to a subset of a longer vector, R will recycle the single value to match the length of the subset. This ensures that the assignment can be performed consistently across the subset.For example, here we assign a vector of length 1 (NA) into a subset of length 6 (c(1:3,7:9)). As a result, NA is replicated six times, to match the subset. Here’s an example illustrating this behavior:\n\nCodecounts = c(2, 0, 3, 1, 3, 2, 9, 0, 2, 1, 11, 2) \ncounts ##  [1]  2  0  3  1  3  2  9  0  2  1 11  2\n\n [1]  2  0  3  1  3  2  9  0  2  1 11  2\n\n\n\nCodecounts[c(1:3, 7:9)] = NA \ncounts ##  [1] NA NA NA  1  3  2 NA NA NA  1 11  2\n\n [1] NA NA NA  1  3  2 NA NA NA  1 11  2\n\n\nHere, c(NA,99) is replicated three times, also to match the subset of length 6:\n\nCodecounts[c(1:3, 7:9)] = c(NA, 99) \ncounts ##  [1] NA 99 NA  1  3  2 99 NA 99  1 11  2\n\n [1] NA 99 NA  1  3  2 99 NA 99  1 11  2\n\n\n\n3.2.10 Logical vectors\n\n3.2.10.1 Creating logical vectors\nThe third common type of vectors in R, alongside numeric and character vectors, is the logical vector. A logical vector consists of logical values, which are primarily represented by TRUE and FALSE. These values are used to denote logical conditions or Boolean expressions in R. Here’s an example of a logical vector:\n\nCode# Create a logical vector\nmy_logical_vector &lt;- c(TRUE, FALSE, TRUE, FALSE, NA)\n\n# Output the logical vector\nmy_logical_vector\n\n[1]  TRUE FALSE  TRUE FALSE    NA\n\n\nn the provided case, the logical vector is composed of five elements: TRUE, FALSE, TRUE, FALSE, and NA (representing missing or undefined values). Logical vectors are commonly used for logical operations, conditional statements, filtering data, and controlling program flow in R. They allow for the representation and manipulation of logical conditions and Boolean values within vectorized operations.\n\nCodec(TRUE, FALSE, FALSE) ## [1]  TRUE FALSE FALSE\n\n[1]  TRUE FALSE FALSE\n\n\n\nCoderep(TRUE, 7) ## [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n[1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\nLogical vectors are typically created by applying conditional operators to numeric or character vectors. These conditional operators evaluate each element of the vector and return a logical value (TRUE or FALSE) based on the specified condition.\n\nCodex = 1:10 \nx \n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n\n\nCodex &gt;= 7 \n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n\n\nNote how the recycling rule applies to conditional operators in the above expression.\nAn important property of logical vectors is, that, when arithmetic operations are applied, the logical vector is automatically converted to a numeric one, where TRUE becomes 1 and FALSE becomes 0. For example:\n\nCodeTRUE + FALSE ## [1] 1\n\n[1] 1\n\n\n\nCodesum(x &gt;= 7) ## [1] 4\n\n[1] 4\n\n\n\nCodemean(x &gt;= 7) ## [1] 0.4\n\n[1] 0.4\n\n\n::: layout-important What is the meaning of the values 4 and 0.4 in the above example? :::\n\n3.2.10.2 Subsetting with logical vectors\nExactly! In addition to using a numeric vector of indices for subsetting, a logical vector can also be used as an index. When a logical vector is used as an index for subsetting, the resulting subset will include the elements that correspond to the TRUE positions in the index. For example:\n\nCodecounts = c(2, 0, 3, 1, 3)\n\n\n\nCodecounts[c(TRUE, FALSE, TRUE, FALSE, FALSE)] ## [1] 2 3\n\n[1] 2 3\n\n\nHere is another example, where the logical vector of indices is created from the same vector being subsetted:\n\nCodecounts[counts &lt; 3] ## [1] 2 0 1\n\n[1] 2 0 1\n\n\nIn this example, the logical vector counts&lt;3:\n\nCodecounts &lt; 3 ## [1]  TRUE  TRUE FALSE  TRUE FALSE\n\n[1]  TRUE  TRUE FALSE  TRUE FALSE\n\n\nspecifies whether to include each of the elements of counts in the resulting subset (Figure 2.10).\n\nWhat does the expression counts[counts&lt;3] do, in plain language?\n\nFigure 2.10: Subsetting with a logical vector\nHere are some more examples of subsetting with a logical index:\n\nCodex = 1:10 \nx \n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n\n\nCodex[x &gt;= 3]         # Elements of 'x' greater or equal than 3 ## [1]  3  4  5  6  7  8  9 10\n\n[1]  3  4  5  6  7  8  9 10\n\n\n\nCodex[x != 2]         # Elements of 'x' not equal to 2  ## [1]  1  3  4  5  6  7  8  9 10\n\n[1]  1  3  4  5  6  7  8  9 10\n\n\n\nCodex[x &gt; 4 | x &lt; 2]  # Elements of 'x' greater than 4 or smaller than 2 ## [1]  1  5  6  7  8  9 10\n\n[1]  1  5  6  7  8  9 10\n\n\n\nCodex[x &gt; 4 & x &lt; 2]  # Elements of 'x' greater than 4 and smaller than 2 ## integer(0)\n\ninteger(0)\n\n\n\nWhat does the output integer(0), which we got in the last expression, mean?\n\nThe next example is slightly more complex; we select the elements of z whose square is larger than 8:\n\nCodez = c(5, 2, -3, 8) \nz[z^2 &gt; 8] ## [1]  5 -3  8\n\n[1]  5 -3  8\n\n\nLet’s go over this step-by-step. First, z^2 gives a vector of squared z values (2 is recycled):\n\nCodez^2 ## [1] 25  4  9 64\n\n[1] 25  4  9 64\n\n\nThen, each of the squares is compared to 8 (8 is recycled):\n\nCodez^2 &gt; 8 ## [1]  TRUE FALSE  TRUE  TRUE\n\n[1]  TRUE FALSE  TRUE  TRUE\n\n\nFinally, the logical vector z^2&gt;8 is used for subsetting z.\n\n3.2.11 Missing values\nMissing values, often represented as NA in R, are used to indicate the absence or unavailability of data for a particular element in a vector. Missing values play a crucial role in handling incomplete or undefined information within datasets. It\n\naccepts a vector, of any type, and\nreturns a logical vector, with TRUE in place of NA values and FALSE in place of non-NA values.\n\nFor example, suppose we have a vector x where some of the values are missing:\n\nCodex = c(28, 58, NA, 31, 39, NA, 9) \nx ## [1] 28 58 NA 31 39 NA  9\n\n[1] 28 58 NA 31 39 NA  9\n\n\nThe is.na function can be used to detect which values are missing:\n\nCodeis.na(x) ## [1] FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE\n\n[1] FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE\n\n\n\nHow can we use the above expression to subset the non-missing values of x?\n\nMany of the functions that summarize vector properties, such as sum and mean, have a parameter called na.rm. The na.rm parameter is used to determine whether NA values are excluded from the calculation. The default is na.rm=FALSE, meaning that NA values are not excluded. For example:\n\nCodex = c(28, 58, NA, 31, 39, NA, 9) \nmean(x) \n\n[1] NA\n\n\n\nWhy do we get NA in the first expression?\n\n\nWhat do you think will be the result of length(x)?\n\n\nHow can we replace the NA values in x with the mean of its non-NA values?"
  },
  {
    "objectID": "ch2.html#additional-useful-functions",
    "href": "ch2.html#additional-useful-functions",
    "title": "\n3  Vectors\n",
    "section": "\n3.3 Additional useful functions",
    "text": "3.3 Additional useful functions\n\n3.3.1 any and all\n\nSometimes we want to figure out whether a logical vector:\n\ncontains at least one TRUE value; or\nis entirely composed of TRUE values.\n\nWe can use the any and all functions, respectively, to do those things.\nThe any function returns TRUE if at least one of the input vector values is TRUE, otherwise it returns FALSE. For example, let’s take a numeric vector x:\n\nCodex = c(2, 6, 2, 3, 0, 1, 6) \nx ## [1] 2 6 2 3 0 1 6\n\n[1] 2 6 2 3 0 1 6\n\n\nThe expression any(x &gt; 5) returns TRUE, which means that the vector x &gt; 5 contains at least one TRUE value, i.e., at least one element of x is greater than 5:\n\nCodex &gt; 5 \n\n[1] FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE\n\n\nThe expression any(x &gt; 88) returns FALSE, which means that the vector x &gt; 88 contains no TRUE values, i.e., none of the elements of x are greater than 88:\n\nCodex &gt; 88 ## [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE any(x &gt; 88) ## [1] FALSE\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n\nThe all function returns TRUE if all of the input vector values are TRUE, otherwise it returns FALSE. For example, the expression all(x &gt; 5) returns FALSE, which means that the vector x &gt; 5 contains at least one FALSE value, i.e., not all elements of x are greater than 5:\n\nCodex &gt; 5 ## [1] FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE all(x &gt; 5) ## [1] FALSE\n\n[1] FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE\n\n\nThe expression all(x &gt; -1) returns TRUE, which means that x &gt; -1 is composed entirely of TRUE values, i.e., all elements of x are greater than -1:\n\nCodex &gt; -1 \n\n[1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\nIn a way, any and all are inverse:\n\nany determines if the logical vector contains at least one TRUE value.\nall determines if the logical vector contains at least one FALSE value.\n\n3.3.2 which\n\nThe which function converts a logical vector to a numeric one, with the indices of TRUE values. That way, we can find out the index of values that satisfy a given condition. For example, considering the vector x:\n\nCodex ## [1] 2 6 2 3 0 1 6\n\n[1] 2 6 2 3 0 1 6\n\n\nthe expression which(x &gt; 2.3) returns the indices of TRUE elements in x &gt; 2.3, i.e., the indices of x elements which are greater than 2.3:\n\nCodex &gt; 2.3 ## [1] FALSE  TRUE FALSE  TRUE FALSE FALSE  TRUE which(x &gt; 2.3) ## [1] 2 4 7\n\n[1] FALSE  TRUE FALSE  TRUE FALSE FALSE  TRUE\n\n\n\n3.3.3 which.min and which.max\n\nRelated to the which function, there are two additional functions in R: which.min and which.max. These functions return the index of the first occurrence of the minimum or maximum value in a vector, respectively.\nHere’s an example illustrating the usage of which.min and which.max functions with a vector x:\n\nCodex \n\n[1] 2 6 2 3 0 1 6\n\n\nusing which.min we can find out that the minimal value of x is in the 5th position:\n\nCodewhich.min(x) \n\n[1] 5\n\n\nwhile using which.max we can find out that the maximal value of x is in the 2nd position:\n\nCodewhich.max(x) \n\n[1] 2\n\n\n\n\n\n\n3.3.4 The order function\nThe order function returns ordered vector indices, based on the order of vector values. In other words, order gives the index of the smallest value, the index of the second smallest value, etc., up to the index of the largest value. For example, given the vector x:\n\nCodex ~ [1] 2 6 2 3 0 1 6\n\n\norder(x) returns the indices 1:length(x), ordered from smallest to largest value:\n\nCodeorder(x) ## [1] 5 6 1 3 4 2 7\n\n[1] 5 6 1 3 4 2 7\n\n\nThis result tells us that the 5th element of x is the smallest, the 6th is the second smallest, and so on.\nWe can also get the reverse order with decreasing=TRUE:\norder(x, decreasing = TRUE) ## [1] 2 7 4 1 3 6 5\n\nHow can we get a sorted vector of elements from x, as shown below, using the order function?\n\n\nCode## [1] 0 1 2 2 3 6 6\n\n\n\n3.3.5 paste and paste0\n\nThe paste function is used to “paste” text values. Its sep parameter determines the separating character(s), with the default being sep=\" \" (a space). For example:\n\nCodepaste(\"There are\", \"5\", \"books.\") ## [1] \"There are 5 books.\" paste(\"There are\", \"5\", \"books.\", sep = \"_\") ## [1] \"There are_5_books.\"\n\n[1] \"There are 5 books.\"\n\n\nNon-character vectors are automatically converted to character before pasting:\n\nCodepaste(\"There are\", 80, \"books.\") ## [1] \"There are 80 books.\"\n\n[1] \"There are 80 books.\"\n\n\nThe recycling rule applies in paste too:\n\nCodepaste(\"image\", 1:5, \".tif\", sep = \"\") ## [1] \"image1.tif\" \"image2.tif\" \"image3.tif\" \"image4.tif\" \"image5.tif\"\n\n[1] \"image1.tif\" \"image2.tif\" \"image3.tif\" \"image4.tif\" \"image5.tif\"\n\n\nThe paste0 function is a shortcut for paste with sep=\"\":\n\nCodepaste0(\"image\", 1:5, \".tif\") ## [1] \"image1.tif\" \"image2.tif\" \"image3.tif\" \"image4.tif\" \"image5.tif\"\n\n[1] \"image1.tif\" \"image2.tif\" \"image3.tif\" \"image4.tif\" \"image5.tif\""
  },
  {
    "objectID": "ch3.html#dates",
    "href": "ch3.html#dates",
    "title": "\n4  Time and Date\n",
    "section": "\n4.1 Dates",
    "text": "4.1 Dates\nDates play a crucial role in data analysis and represent an essential component in many datasets. In R, working with dates is made easy through a range of functions and packages specifically designed for handling date-related operations. Dates in R are represented as objects, allowing for convenient manipulation and calculations.\nWith R’s built-in date functions and packages like lubridate, users can create, format, and perform various operations on date objects. These operations include extracting components like year, month, and day, performing arithmetic operations to calculate time intervals, comparing dates, and visualizing temporal data. With the flexibility and functionality offered by R, users can effectively work with dates to gain valuable insights and make informed decisions based on temporal patterns in their data.\n\n4.1.1 Date and time classes in R\nIn R, there are specific classes designed for representing times and time-series data. These classes provide specialized functionalities for handling temporal information. Some of the commonly used classes include:\n\nPOSIXct: This class represents time as the number of seconds since January 1, 1970 (known as the Unix epoch) in the UTC time zone. It offers precision up to the second and is suitable for handling timestamps.\nPOSIXlt: Similar to the POSIXct class, POSIXlt represents time as the number of seconds since the Unix epoch. However, it provides more detailed components like year, month, day, hour, minute, and second. POSIXlt objects are useful when you need to work with individual time components.\nDate: The Date class is used to represent dates without time information. Dates are stored as the number of days since January 1, 1970. This class is useful when you want to work with dates and perform date-specific operations.\nTime-Series: R provides the ts class to handle time-series data, which is a combination of time and corresponding data values. The ts class allows for efficient storage and manipulation of time-series data and supports various time-based operations.\nxts: The xts (eXtensible Time Series) class is an extension of the ts class and provides enhanced functionality for working with time-series data. It includes features like subsetting, merging, and advanced time-based calculations.\n\nThese specialized classes make it easier to work with time and time-series data in R. In this book, we will only be working with the Date class, which is used to represent times of type date.\n\n4.1.2 Working with Date objects\n\n4.1.2.1 Today’s date\nThe Date data structure is the simplest and most basic way to represent dates in R. It is specifically designed to store dates without the inclusion of the time of day. One common use of Date is to represent calendar dates, such as birthdays, holidays, or any event that is not concerned with specific timestamps.\nTo obtain the current date in R, you can use the Sys.Date() function. This function retrieves the current system date and returns it as a Date object. Here’s an example:\n\nCodecurrent_date &lt;- Sys.Date()\ncurrent_date\n\n[1] \"2023-05-28\"\n\n\nThe output will be the current date in the format YYYY-MM-DD, where YYYY represents the year, MM represents the month, and DD represents the day. By utilizing the Sys.Date() function, you can easily retrieve the current date for various purposes, such as tracking data entry, performing date-based calculations, or generating reports based on the current date.\n\nCodecurrent_date |&gt;\n  class()\n\n[1] \"Date\"\n\n\n\n4.1.2.2 Converting character to Date\n\nIn addition to retrieving the current date using Sys.Date(), we can also convert character values to Date objects using the as.Date() function. This allows us to create Date objects representing specific dates of our choice.\nThe as.Date() function takes a character value as input and converts it to a Date object based on the specified format. The format is specified using the format parameter, which follows the conventions of the strftime() function in C. Here’s an example:\n\nCodecustom_date &lt;- as.Date(\"2023-05-24\", format = \"%Y-%m-%d\")\ncustom_date\n\n[1] \"2023-05-24\"\n\n\nIn this example, the character value “2023-05-24” is converted to a Date object using the %Y-%m-%d format, where %Y represents the year with century, %m represents the month, and %d represents the day.\nWhen the character values are in the standard date format (YYYY-MM-DD), such as in the above example, the as.Date function works without any additional arguments. However, when the character values are in a non-standard format, we need to specify the format definition with format, using the various date component symbols. Table [3.1] lists the most commonly used symbols for specifying date formats in R. The full list of symbols can be found in ?strptime.\n\n\n\n\n\n\n\n\n\n\nTable 3.1: Common Date format components\n\n\nSymbol\nExample\nMeaning\n\n\n%d\n\"15\"\nDay\n\n\n%m\n\"08\"\nMonth, numeric\n\n\n%b\n\"Aug\"\nMonth, 3-letter\n\n\n%B\n\"August\"\nMonth, full\n\n\n%y\n14\nYear, 2-digit\n\n\n%Y\n2014\nYear, 4-digit\n\n\n\nBefore going into examples of date formatting, it is useful to set the standard \"C\" locale in R. That way, we make sure that month or weekday names are interpreted in English as intended:\n\nCodeSys.setlocale(\"LC_TIME\", \"C\") ## [1] \"C\"\n\n[1] \"C\"\n\n\nFor example, converting the following character date—which is in a non-standard format—to Date fails when format is not specified:\n\nCodeas.Date(\"07/Aug/12\") \n\n# Error in charToDate(x) \n\n\nSpecifying the right format, which is \"%d/%b/%y\" in this case, leads to a successful conversion:\n\nCodeas.Date(\"07/Aug/12\", format = \"%d/%b/%y\") \n\n[1] \"2012-08-07\"\n\n\n\nWhat will be the result if we used format=\"%y/%b/%d\" (switching %d and %y) in the above expression?\n\nHere is another example with a different non-standart format (\"%Y-%B-%d\"):\n\nCodeas.Date(\"2012-August-07\")\n# Error in charToDate(x) \n\n\nUsing the anytime::anytime() function allows us to handle a broader range of date formats without explicitly specifying the format. It provides convenience and flexibility in parsing date strings and converting them to appropriate date objects.\n\nCodeanytime::anytime((\"2012-August-07\") )\n\n[1] \"2012-08-07 EAT\"\n\n\n\nCodeas.Date(\"2012-August-07\", format = \"%Y-%B-%d\") \n\n[1] \"2012-08-07\"\n\n\n\n4.1.2.3 Converting Date to character\n\nA Date can always be converted back to character using as.character:\n\nCoded = as.Date(\"1961-12-09\") \nd \n\n[1] \"1961-12-09\"\n\n\n\nCodeclass(d) \n\n[1] \"Date\"\n\n\n\nCodeas.character(d) \n\n[1] \"1961-12-09\"\n\n\n\nCodeclass(as.character(d)) ## [1] \"character\"\n\n[1] \"character\"\n\n\nNote that both the Date and the character objects are printed exactly the same way, so we have to use class to figure out which class we are dealing with.\nThe as.character function, by default, returns a text string with all three date components in the standard YYYY-MM-DD (or \"%Y-%m-%d\") format. Using the format argument, however, lets us compose different date formats, or extract individual date components out of a Date object:\n\nCoded \n\n[1] \"1961-12-09\"\n\n\n\nCodeas.character(d, format = \"%m/%Y\") \n\n[1] \"12/1961\"\n\n\n{r            as.character(d, \"%d\")\n{r            as.character(d, \"%B\")\n{r            as.character(d, \"%Y\")\nNote that as.character consistently returns a character, even when the result contains nothing but numbers, as in \"%d\" or \"%Y\". We can always convert from character to numeric with as.numeric if necessary:\n{r            as.numeric(as.character(d, \"%Y\"))\n\n4.1.2.4 Arithmetic operations with dates\nArithmetic operations can be performed on Date objects in R, allowing for calculations involving dates and time intervals. Here are some common arithmetic operations that can be applied to Date objects:\n\nAddition and Subtraction:\n\nAdding/Subtracting Days: You can add or subtract a certain number of days to/from a Date object using the + and - operators. For example:\n\n\n\n\nCode     date1 &lt;- as.Date(\"2023-05-24\")\n     date2 &lt;- date1 + 7   # Adds 7 days to date1\n     date3 &lt;- date1 - 3   # Subtracts 3 days from date1\n\n\n\nAdding/Subtracting Weeks/Months/Years: Similarly, you can add or subtract weeks, months, or years using the same operators. R automatically adjusts the resulting date according to the specified time interval. For example:\n\n\nCode     date4 &lt;- date1 + lubridate::weeks(2)   # Adds 2 weeks to date1\n     date5 &lt;- date1 - lubridate::month(6)  # Subtracts 6 months from date1\n     date6 &lt;- date1 + lubridate::years(1)   # Adds 1 year to date1\n\n\n\nCalculating Time Differences: You can calculate the time difference between two Date objects using the - operator. The result will be an object of class difftime, representing the difference in days. For example:\n\n\nCode   date1 &lt;- as.Date(\"2023-05-24\")\n   date2 &lt;- as.Date(\"2023-06-01\")\n   diff &lt;- date2 - date1   # Calculates the difference in days between date2 and date1\n   diff\n\nTime difference of 8 days\n\n\n\nComparing Dates: Dates can be compared using comparison operators (&lt;, &lt;=, &gt;, &gt;=, ==, !=) to check their relative order. This is useful for sorting or filtering data based on dates. For example:\n\n\nCode   date1 &lt;- as.Date(\"2023-05-24\")\n   date2 &lt;- as.Date(\"2023-06-01\")\n   date1 &lt; date2   # Returns TRUE as date1 is earlier than date2\n\n[1] TRUE\n\n\n\n4.1.2.5 Arithmetric operation with lubridate package\nThe lubridate package introduces intuitive functions like ymd() (year-month-day) for creating Date objects with a specified format. It also provides convenient helper functions such asweeks(), months(), and years() to perform arithmetic operations on dates. These functions enhance readability and simplify the code when working with dates and time intervals.\n\nCode   library(lubridate)\n\n\nBy utilizing the lubridate package, you can handle date arithmetic operations more intuitively and efficiently, making it easier to perform calculations and comparisons involving dates in your R code. Here are examples of arithmetic operations with dates using the lubridate package:\n\nAddition and Subtraction:\n\n\nCode   date1 &lt;- ymd(\"2023-05-24\")\n   date2 &lt;- date1 + weeks(2)   # Adds 2 weeks to date1\n   date1 - months(6)  # Subtracts 6 months from date1\n\n[1] \"2022-11-24\"\n\n\n\nCalculating Time Differences:\n\n\nCode   date1 &lt;- ymd(\"2023-05-24\")\n   date2 &lt;- ymd(\"2023-06-01\")\ndate2 - date1   # Calculates the difference in days between date2 and date1\n\nTime difference of 8 days\n\n\n\nComparing Dates:\n\n\nCode   date1 &lt;- ymd(\"2023-05-24\")\n   date2 &lt;- ymd(\"2023-06-01\")\n   date1 &lt; date2   # Returns TRUE as date1 is earlier than date2\n\n[1] TRUE\n\n\nFinally, the seq function, which we are already familiar with, can be used to create a sequence of consecutive dates in R. By specifying the starting date, ending date, and the desired interval, we can generate a sequence of dates.\nFor example, the following expression creates a sequence of dates from January 1, 2023, to January 10, 2023, with a daily interval:\n\nCodeseq(ymd(\"2023-01-01\"), ymd(\"2023-01-10\"), by = \"day\")\n\n [1] \"2023-01-01\" \"2023-01-02\" \"2023-01-03\" \"2023-01-04\" \"2023-01-05\"\n [6] \"2023-01-06\" \"2023-01-07\" \"2023-01-08\" \"2023-01-09\" \"2023-01-10\"\n\n\nThe output is a sequence of Date objects representing consecutive dates from January 1, 2023, to January 10, 2023.\nBy adjusting the starting and ending dates and specifying a different interval (e.g., “week”, “month”, “year”), you can generate sequences of dates that suit your specific needs. This can be useful for generating date ranges, creating time-based indices, or iterating over a series of dates for analysis or visualization purposes.\n\n4.1.3 Time series\nA time series is a sequence of data points collected and recorded over a period of time. In R, time series data can be represented and analyzed using specialized data structures and functions. The two main data structures for handling time series data in R are:\n\n\nts (Time Series): The ts object is a basic data structure in R for representing univariate time series. It is created using the ts() function, which takes the data as input and optionally accepts arguments for specifying the frequency and start time of the time series. Here’s an example of creating a ts object:\n\n\nCodedata &lt;- c(10, 15, 20, 25, 30)\nts_data &lt;- ts(data, start = c(2020, 1), frequency = 1)\nts_data\n\nTime Series:\nStart = 2020 \nEnd = 2024 \nFrequency = 1 \n[1] 10 15 20 25 30\n\n\nIn this example, the ts() function is used to create a time series object ts_data from the numeric vector data. The start argument specifies the start time of the series (January 2020 in this case), and the frequency argument indicates the number of observations per unit of time (1 observation per year).\n\n\nxts (eXtensible Time Series): The xts object is a more powerful and flexible data structure for handling time series data in R. It is part of the xts package, which extends the functionality of ts objects by providing additional features and methods for working with time series data. xts objects are created using the xts() function, and they can store both univariate and multivariate time series data. Here’s an example of creating an xts object:\n\n\nCode# Load the xts package\nlibrary(xts)\n\n# Create an xts object\ndata &lt;- c(10, 15, 20, 25, 30)\ntime &lt;- as.Date(c(\"2020-01-01\", \"2020-02-01\", \"2020-03-01\", \"2020-04-01\", \"2020-05-01\"))\nxts_data &lt;- xts(data, order.by = time)\nxts_data\n\n           [,1]\n2020-01-01   10\n2020-02-01   15\n2020-03-01   20\n2020-04-01   25\n2020-05-01   30\n\n\nIn this example, the xts() function is used to create an xts object xts_data. The data argument contains the time series data, and the order.by argument specifies the corresponding time stamps for each observation.\nBoth ts and xts objects offer various methods and functions for analyzing and manipulating time series data in R. These include plotting, statistical analysis, time-based subsetting, aggregation, and more. Time series analysis techniques such as forecasting, seasonal decomposition, and autocorrelation analysis can also be applied to these data structures.\nHere are a few more examples of working with time series using the ts package in R:\n\nCreating a Monthly Time Series:\n\n\nCode# Generate monthly time series data\n   \nts_data &lt;- rnorm(n = 233, mean = 25, sd = 4) |&gt;\nts(start = c(2004,1), frequency = 12)\nts_data\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n2004 14.74781 25.46688 20.50439 26.06081 19.08484 21.08044 23.45740 18.57261\n2005 22.13340 30.24903 28.51953 21.12515 27.30389 22.52658 23.47052 30.11469\n2006 16.27582 27.37721 25.60020 29.80502 29.11926 19.91884 22.11190 31.11152\n2007 33.72920 27.08315 20.90440 19.40813 28.06915 30.19177 30.30076 27.59431\n2008 27.16708 21.77838 25.88143 21.34045 17.02736 22.62716 27.55099 17.48557\n2009 18.35944 29.54533 24.67420 21.60934 28.10115 27.08557 18.52824 26.17246\n2010 25.78932 28.29462 26.66224 23.65757 20.71172 16.94170 27.60954 24.95769\n2011 16.79767 24.80603 30.10144 23.49664 24.84373 26.60351 31.38598 21.16260\n2012 22.59265 27.95870 23.78821 29.64875 28.45095 22.44216 24.01068 20.47284\n2013 26.33529 19.03980 25.23478 18.84127 24.00813 30.19608 20.11256 21.97585\n2014 23.01312 29.81151 29.08982 19.15088 24.76162 26.38414 21.02302 33.58700\n2015 31.49628 24.18298 24.96090 22.13469 24.36741 26.73912 20.47131 22.19941\n2016 25.08718 16.04119 25.31774 25.32757 30.12519 29.11489 28.17876 24.13547\n2017 21.72325 19.91837 19.37147 23.73474 24.33955 20.90653 28.46943 26.36190\n2018 29.48470 23.58262 24.42627 21.45971 17.96059 35.11920 20.60675 31.01668\n2019 21.23316 22.82433 23.46820 17.82889 20.54924 27.77987 26.09987 19.60782\n2020 28.98075 27.36108 30.55557 32.51606 24.53108 29.19327 24.11180 30.94042\n2021 24.57242 24.69647 26.72961 24.64428 30.44610 25.76650 25.02205 23.26870\n2022 26.42610 28.39235 23.70687 17.91268 33.04206 23.45669 25.66875 24.09364\n2023 27.39200 29.81333 29.81085 26.92161 22.85085                           \n          Sep      Oct      Nov      Dec\n2004 22.79385 25.53573 26.32870 30.85631\n2005 24.89605 26.80225 18.70784 29.96150\n2006 19.87213 29.95444 26.56868 20.19432\n2007 27.37739 20.70057 24.73431 26.09642\n2008 29.52925 31.98205 21.04970 28.46272\n2009 24.77562 22.26052 25.53011 29.08084\n2010 21.47375 25.37017 22.93835 35.86601\n2011 33.77580 23.42968 32.75940 23.10161\n2012 18.35201 25.26843 20.68595 27.08916\n2013 27.78270 28.12227 26.93004 26.80132\n2014 26.88997 21.47888 24.87013 27.02277\n2015 23.12800 25.71919 24.73327 26.04201\n2016 28.40811 21.53323 23.20109 29.54210\n2017 37.87974 26.26356 28.46372 33.38593\n2018 31.76887 24.41763 19.25150 23.25284\n2019 21.41990 27.49392 17.98803 30.07582\n2020 28.14265 27.68696 27.72108 29.26007\n2021 25.95433 18.56609 31.27320 30.26822\n2022 23.81255 15.72077 29.16249 24.84366\n2023                                    \n\n\n2.Subsetting Time Series Data\nSubsetting time series data involves extracting a portion of the data based on specific criteria, such as a range of dates or a subset of observations. In R, subsetting time series data can be done using various approaches.\n\nCode   # Subset time series data for a specific period\nsubset_data &lt;- ts_data |&gt;\n  window(start = c(2020, 1), end = c(2021, 6))\nsubset_data\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n2020 28.98075 27.36108 30.55557 32.51606 24.53108 29.19327 24.11180 30.94042\n2021 24.57242 24.69647 26.72961 24.64428 30.44610 25.76650                  \n          Sep      Oct      Nov      Dec\n2020 28.14265 27.68696 27.72108 29.26007\n2021                                    \n\n\n\nPlotting Time Series Data\n\nPlotting time series data is a common task in analyzing and visualizing temporal patterns and trends. In R, there are various packages and functions available for creating plots of time series data. Let’s explore two commonly used plotting methods: base R plots and ggplot2 package.\n\n\n\n\nFIGURE 4.1. Time series plotted with base-R\n\n\n\n\n\n\n\n\nFIGURE 4.2. Time series plotted with ggplot\n\n\n\n\n\n\nCalculating Summary Statistics: When working with time series data, calculating summary statistics often involves considering specific aspects related to the temporal dimension. Here are some common summary statistics for time series data\n\n\nCode   # Calculate summary statistics of the time series data\n   summary(ts_data)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  14.75   22.13   25.23   25.17   28.14   37.88 \n\n\n\n\nApplying Smoothing Techniques: Smoothing techniques are commonly used in time series analysis to reduce noise, identify patterns, and reveal underlying trends in the data. In R, there are several smoothing techniques available that can be applied to time series data. Let’s explore some commonly used smoothing techniques and their implementation in R\n\n\nCode   # Apply moving average smoothing to the time series data\n   smoothed_data &lt;- filter(ts_data, filter = rep(1/3, 3), sides = 2)\n\n\n\n\n\n\nFIGURE 4.3. Smoothed time series\n\n\n\n\n\n\nDecomposing Time Series Components:\n\n\nCode   # Decompose the time series data into trend, seasonal, and random components\n   decomposition &lt;- decompose(ts_data)\n   trend &lt;- decomposition$trend\n   seasonal &lt;- decomposition$seasonal\n   random &lt;- decomposition$random\n\n\n\n4.1.4 Applying Smoothing Techniques\nSmoothing techniques are commonly used in time series analysis to reduce noise, identify patterns, and reveal underlying trends in the data. In R, there are several smoothing techniques available that can be applied to time series data. Let’s explore some commonly used smoothing techniques and their implementation in R:\n\n\nMoving Average: The moving average is a simple smoothing technique that calculates the average of a fixed window of observations. It helps to smooth out short-term fluctuations and highlight the overall trend. In R, you can apply the moving average using the ma() function from the forecast package. For example:\n\n   # Apply moving average smoothing\n   smoothed_data &lt;- ma(ts_data, order = 5)  # Moving average with a window of size 5\n\n\nExponential Smoothing: Exponential smoothing is a popular smoothing technique that assigns exponentially decreasing weights to past observations. It places more emphasis on recent observations and is suitable for data with a changing trend. In R, you can apply exponential smoothing using the ets() function from the forecast package. For example:\n\n\nCode   # Apply exponential smoothing\nsmoothed_data &lt;- ts_data |&gt;\n  forecast::ets()\n\n\n\n\n\n\nFIGURE 4.4. ETS smoothed time series\n\n\n\n\n\n\nLoess Smoothing: Loess smoothing is a non-parametric technique that fits a smooth curve through the data using local weighted regression. It is effective in capturing complex patterns and is particularly useful for data with irregular or nonlinear trends. In R, you can apply loess smoothing using the loess() function. For example:\n\n\nCode   # Apply loess smoothing\n   smoothed_data &lt;- loess(ts_data ~ time(ts_data))\n\n\n\n\n\n\nFIGURE 4.5. loess smoothed time series\n\n\n\n\n\n\nSpline Smoothing: Spline smoothing is a flexible technique that fits a piecewise polynomial function to the data. It is useful for capturing both local and global trends in the time series. In R, you can apply spline smoothing using the smooth.spline() function. For example:\n\n\nCode# Apply spline smoothing\n   smoothed_data &lt;- smooth.spline(time(ts_data), ts_data)\n\n\n\n\n\n\nFIGURE 4.6. Spline smoothed"
  },
  {
    "objectID": "ch3Edition.html#importing-data",
    "href": "ch3Edition.html#importing-data",
    "title": "\n5  Data types and data frame\n",
    "section": "\n5.1 Importing Data",
    "text": "5.1 Importing Data\nSo far, we’ve looked at several dataset in previous chapter and we have also created ourselves some datasets. While you can do all your data entry work in R or Excel, it is much more common to load data from other sources. Local and international organization have been collecting fisheries dependent and fisheries independent data for years. These historical dataset with fisheries information like fish catch, effort, landing sites, fishing ground and critical habitats can be obtained from several databases—some are open and other closed. Much of the data we download or receive from is either comma-separated value files .csv or and Excel spreadsheets, .xlsx. .csv files are spreadsheets stored as text files - basically Excel files stripped down to the bare minimum - no formatting, no formulas, no macros. You can open and edit them in spreadsheet software like LibreOffice Calc, Google Sheets or Microsoft Excel. Many devices and databases can export data in .csv format, making it a commonly used file format that you are likely to encounter sooner rather than later.\nWhether that be a comma separated (csv) or a tab delimited file, there are multiple functions that can read these data into R. We will stick to loading these data from the tidyverse packages but be aware these are not the only methods for doing this. We will use the tidyverse functions just to maintain consistency with everything else we do. The first package in tidyverse we will use is called readr (Wickham, Hester, and Bryan 2022), which is a collection of functions to load the tabular data from working directory in our machine into R session. Some of its functions include:\n\n\nread_csv(): comma separated (CSV) files\n\nread_tsv(): tab separated files\n\nread_delim(): general delimited files\n\nread_fwf(): fixed width files\n\nread_table(): tabular files where columns are separated by white-space.\n\nread_log(): web log files\n\nreadxl reads in Excel files.\n\nBefore we import the data, we need to load the packages that we will use their functions in this chapter\n\nCoderequire(tidyverse)\nrequire(magrittr)\n\n\n\n5.1.1 Importing csv files\nA CSV file is a type of file where each line contains a single record, and all the columns are separated from each other via a comma. In order to load data from a file into R, you need its path - that is, you need to tell R where to find the file. Unless you specify otherwise, R will look for files in its current working directory. You can read .csv file using read_csv() function of the readr package (Wickham, Hester, and Bryan 2022) as shown in the chunk below;\n\nCodeimported.lfq = read_csv(\"dataset/project/tidy_LFQ_sample_4.csv\")\n\nlf4\n\n\nWe imported tidy_LFQ_sample_4.csv from working directory into R using read_csv() and specify the path to the file in your working directory and store as imported.lfq. If you get an error message, it means thattidy_LFQ_sample_4.csvis not in your working directory. Either move the file to the right directory (remember, you can use rungetwd()` to see what your working directory is) or change your working directory.\n\nCodeimported.lfq = read_csv(\"data/tidy/tidy_LFQ_sample_4.csv\")\n\n\nIf you glimpse the dataframe with glimpse() function, you should see the internal structure of the imported.lfq object we just loaded;\n\nCodeimported.lfq %&gt;% \n  glimpse()\n\nRows: 6,185\nColumns: 6\n$ site  &lt;chr&gt; \"Mombasa\", \"Mombasa\", \"Mombasa\", \"Mombasa\", \"Mombasa\", \"Mombasa\"…\n$ date  &lt;date&gt; 2019-04-05, 2019-04-05, 2019-04-05, 2019-04-05, 2019-04-05, 201…\n$ tl_mm &lt;dbl&gt; 184, 185, 145, 189, 175, 165, 181, 176, 164, 154, 188, 186, 179,…\n$ fl_mm &lt;dbl&gt; 169, 169, 134, 173, 161, 153, 165, 163, 148, 142, 173, 173, 164,…\n$ wt_gm &lt;dbl&gt; 59.50, 54.71, 24.15, 61.36, 49.31, 38.54, 49.68, 45.27, 36.26, 3…\n$ sex   &lt;chr&gt; \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\",…\n\n\nThe dataset contains six variables and 6,185 records. The variables site and sex both contain text, and have been imported as character vectors4. The date column has been imported as date format, the variable tl_mm and fl_mm are measured length and have been imported as numeric vector measured in millimeters. The variable wt_gm is the weight of fish measured in grams and also have been imported as numeric vector.\nSo, what can you do in case you need to import data from a file that is not in your working directory? This is a common problem, as many of us store script files and data files in separate folders (or even on separate drives). One option is to use file.choose, which opens a pop-up window that lets you choose which file to open using a graphical interface:\nimported.lfq2 = read_csv(file.choose())\nThis solution work just fine if you just want to open a single file once. But if you want to reuse your code or run it multiple times, you probably don’t want to have to click and select your file each time. Instead, you can specify the path to your file in the call to read_csv.\n\n5.1.2 Importing Excel files\nCommonly our data is stored as a Excel file. There are several packages that can be used to import Excel files to R. I prefer the readxl package (Wickham and Bryan 2022), so let’s install that:\ninstall.packages(\"readxl\")\nThe package has read_exel() function that allows us to specify which sheet within the Excel file to read. The function automatically convert the worksheet into a .csv file and read it. Let’s us import the the data in first sheet of the tidy_LFQ_sample_4.xlsx. Is a similar dataset that just imported in the previous section, but is in Excel format. We will use this file to illustrate how to import the excel file into R workspace with readxl package (Wickham and Bryan 2022).\n\nCodeimported.lfq = readxl::read_excel(\"data/tidy/tidy_LFQ_sample_4.xlsx\", sheet = 1)\n\n\n\nCodeimported.lfq\n\n# A tibble: 6,185 × 6\n   site    date                tl_mm fl_mm wt_gm sex  \n   &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 Mombasa 2019-04-05 00:00:00   184   169  59.5 M    \n 2 Mombasa 2019-04-05 00:00:00   185   169  54.7 M    \n 3 Mombasa 2019-04-05 00:00:00   145   134  24.2 M    \n 4 Mombasa 2019-04-05 00:00:00   189   173  61.4 M    \n 5 Mombasa 2019-04-05 00:00:00   175   161  49.3 M    \n 6 Mombasa 2019-04-05 00:00:00   165   153  38.5 M    \n 7 Mombasa 2019-04-05 00:00:00   181   165  49.7 M    \n 8 Mombasa 2019-04-05 00:00:00   176   163  45.3 M    \n 9 Mombasa 2019-04-05 00:00:00   164   148  36.3 M    \n10 Mombasa 2019-04-05 00:00:00   154   142  31.9 M    \n# ℹ 6,175 more rows\n\n\n\nCodeimported.lfq %&gt;% \n  skimr::skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n6185\n\n\nNumber of columns\n6\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\nPOSIXct\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\nsite\n0\n1\n3\n7\n0\n2\n0\n\n\nsex\n0\n1\n1\n1\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\ntl_mm\n0\n1\n170.77\n21.08\n97.0\n157.00\n171.00\n183.00\n269.00\n▁▅▇▁▁\n\n\nfl_mm\n0\n1\n156.00\n19.26\n18.1\n144.00\n156.00\n168.00\n241.00\n▁▁▅▇▁\n\n\nwt_gm\n0\n1\n46.03\n19.51\n7.0\n32.77\n43.59\n55.28\n194.18\n▇▆▁▁▁\n\n\n\nVariable type: POSIXct\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\ndate\n0\n1\n2016-03-31\n2020-09-11\n2020-02-25\n42"
  },
  {
    "objectID": "ch3Edition.html#saving-and-exporting-your-data",
    "href": "ch3Edition.html#saving-and-exporting-your-data",
    "title": "\n5  Data types and data frame\n",
    "section": "\n5.2 Saving and exporting your data",
    "text": "5.2 Saving and exporting your data\nIn many a case, data manipulation is a huge part of statistical work, and of course you want to be able to save a data frame after manipulating it. There are two options for doing this in R - you can either export the data as e.g. a .csv or a .xlsx file, or save it in R format as an .RData file.\n\n5.2.1 Exporting data\nJust as we used the functions read_csv and read_excel to import data, we can use write_csvto export it. The code below saves the bookstore data frame as a .csv file file, which will be created in the current working directory. If you wish to store\n\nimported.lfq %&gt;%  write_csv(\"assets/fao_paul_dataset/tidy/tidy_lfq.csv\")\n\n5.2.2 Saving and loading R data\nBeing able to export to different spreadsheet formats is very useful, but sometimes you want to save an object that can’t be saved in a spreadsheet format. For instance, you may wish to save a multiple processed data, functions and formula that you’ve created. .RData files can be used to store one or more R objects. To save the objects bookstore and age in a .Rdata file, we can use the save function:\n\nsave.image(\"assets/fao_paul_dataset/tidy/myData.RData\")\n\n\n\n\nMüller, Kirill, and Hadley Wickham. 2022. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble.\n\n\nWickham, Hadley, and Jennifer Bryan. 2022. Readxl: Read Excel Files. https://CRAN.R-project.org/package=readxl.\n\n\nWickham, Hadley, Jim Hester, and Jennifer Bryan. 2022. Readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr."
  },
  {
    "objectID": "ch4.html#why-use-dplyr",
    "href": "ch4.html#why-use-dplyr",
    "title": "6  Data frame Manipulation",
    "section": "\n6.1 Why use dplyr?",
    "text": "6.1 Why use dplyr?\nUsing this package’s functions will allow you to code expressively—code that are easy to write and read, which make you effective and efficient data scientists.\n\nGreat for data exploration and manipulation\nIntuitive to write and easy to read, especially when using the chaining syntax\nFast on data frame—tabular dataset"
  },
  {
    "objectID": "ch4.html#core-dplyr-functions",
    "href": "ch4.html#core-dplyr-functions",
    "title": "6  Data frame Manipulation",
    "section": "\n6.2 Core dplyr Functions",
    "text": "6.2 Core dplyr Functions\nI will not go through all of the dplyr functions in this chapter. I will demonstrate the core functions that are used regularly for manipulating data. The five core functions also called verbs include:\n\n\nselect() to select columns based on their names\n\nfilter() to rows in data frame\n\narrange() to re-order or arrange the rows in ascending or descending order\n\nmutate() to create new columns—add new variable\n\nsummarise() to make a summary of variable(s)\n\ngroup_by() to group observation\n\nsample_n() and rename()to make random sample from the data set\n\nThe group_by() function perform other common task which are related to the split-apply-combine concept. You can use these verbs when you describe the algorithm or process for interrogating data, and then use dplyr verbs to write code that will closely follow your “plain language” description because it uses functions and procedures that share the same language.\nFor most of us who are familiar with the R base function, you will find that most dplyr functions on data frames can be expressed succinctly because you don’t need to repeat the name of the data frame. This becomes handy in operation, because dplyr package comes with the pipe operateor %&gt;% from the magrittr package (Bache and Wickham 2022), which allows to combine several functions in a chain to manipulate data.\nTo use dplyr functions to manipulate your data, it must be already installed in your machine so that you can load with a require () function. Once the package is loaded, its functions are available for use. dplyr is a key package of the tidyverse ecosystem—a collection of R packages, which also includes other packages like, readr (Wickham, Hester, and Bryan 2022), purr,tibble (Müller and Wickham 2022), stringr (Wickham 2019), forcats, tidyr (Wickham and Girlich 2022) and ggplot2 (Wickham 2016).\n\nCoderequire(tidyverse)"
  },
  {
    "objectID": "ch4.html#data",
    "href": "ch4.html#data",
    "title": "6  Data frame Manipulation",
    "section": "\n6.3 Data",
    "text": "6.3 Data\nData frames are ideal for representing data where each row is an observations and each column is a variable. Nearly all packages in a tidyverse work on data frames new version called tibble. A tibble provides stricter checking and better formatting than the traditional data frame.\nTo demonstrate the usefulness of the dplyr package for manipulating data, we will use the CTD data of 22 stations casted along the coastal water of Tanzania. I have prepared the data, cleaned and align the profile into 5 meter standard depth for each cast and merged them into a single .csv file. You need to load the file into your R session. We can import the file with read_csv() function from the readr package (Wickham, Hester, and Bryan 2022). The read_csv() function gives out a tibble (Müller and Wickham 2022)."
  },
  {
    "objectID": "ch4.html#choosing-rows-filtering-observations",
    "href": "ch4.html#choosing-rows-filtering-observations",
    "title": "6  Data frame Manipulation",
    "section": "\n6.4 Choosing rows: Filtering observations",
    "text": "6.4 Choosing rows: Filtering observations\nThe first dplyr verb we’ll explore is filter(). This function is primarily used to create a subset of observations that meet a specified conditions. The filter() function lets you pick out rows based on logical expressions. You give the function a predicate, specifying what a row should satisfy to be included. For instance, take a look at the chunk below:\n\nCodectd %&gt;% \n  filter(pressure &lt; 150)\n\n# A tibble: 637 × 12\n   station time                  lon   lat pressure temperature salinity oxygen\n   &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 st1     2004-08-18 15:27:46  40.6 -10.5        5        25.2     33.9   3.93\n 2 st1     2004-08-18 15:27:46  40.6 -10.5       10        25.1     34.9   4.49\n 3 st1     2004-08-18 15:27:46  40.6 -10.5       15        25.1     34.9   4.50\n 4 st1     2004-08-18 15:27:46  40.6 -10.5       20        25.0     34.9   4.51\n 5 st1     2004-08-18 15:27:46  40.6 -10.5       25        24.9     34.9   4.51\n 6 st1     2004-08-18 15:27:46  40.6 -10.5       30        24.9     34.9   4.50\n 7 st1     2004-08-18 15:27:46  40.6 -10.5       35        24.9     34.9   4.49\n 8 st1     2004-08-18 15:27:46  40.6 -10.5       40        24.9     34.9   4.48\n 9 st1     2004-08-18 15:27:46  40.6 -10.5       45        24.8     34.9   4.46\n10 st1     2004-08-18 15:27:46  40.6 -10.5       50        24.6     34.9   4.44\n# ℹ 627 more rows\n# ℹ 4 more variables: fluorescence &lt;dbl&gt;, spar &lt;dbl&gt;, par &lt;dbl&gt;, density &lt;dbl&gt;\n\n\nThe expression calls the ctd dataset and feed into the filter()and pick all observations with pressure below 150meters and create a new datase called surface. This is an expression where a single conditional statement is used.\nWe can also limit the of the variable of interest by combining multiple conditional expressions as part of the filter(). Each expression (argument) is combined with an “AND” clause by default. This means that all expressions must be matched for a recorded to be returned. For instance we want to pick observations that were measured between 5 and 10 meters water only. We combine theses expressions with & operator;\n\nCodectd %&gt;% \n  filter(pressure &gt;= 0 & pressure &lt;= 10)\n\n# A tibble: 44 × 12\n   station time                  lon   lat pressure temperature salinity oxygen\n   &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 st1     2004-08-18 15:27:46  40.6 -10.5        5        25.2     33.9   3.93\n 2 st1     2004-08-18 15:27:46  40.6 -10.5       10        25.1     34.9   4.49\n 3 st2     2004-08-18 17:00:01  40.8 -10.5        5        25.2     34.8   4.47\n 4 st2     2004-08-18 17:00:01  40.8 -10.5       10        25.2     34.8   4.47\n 5 st3     2004-08-18 20:32:54  41.0 -10.5        5        NA       NA    NA   \n 6 st3     2004-08-18 20:32:54  41.0 -10.5       10        25.0     34.9   4.49\n 7 st4     2004-08-18 22:44:56  41.1 -10.5        5        NA       NA    NA   \n 8 st4     2004-08-18 22:44:56  41.1 -10.5       10        NA       NA    NA   \n 9 st5     2004-08-19 00:59:59  41.3 -10.5        5        NA       NA    NA   \n10 st5     2004-08-19 00:59:59  41.3 -10.5       10        NA       NA    NA   \n# ℹ 34 more rows\n# ℹ 4 more variables: fluorescence &lt;dbl&gt;, spar &lt;dbl&gt;, par &lt;dbl&gt;, density &lt;dbl&gt;\n\n\nWe can also use the between() function, which is equivalent to pressure &gt;= 0 & pressure &lt;= 10 in above chunk to achive the same result.\n\nCodectd %&gt;% \n  filter(between(pressure, 5,10))\n\n# A tibble: 44 × 12\n   station time                  lon   lat pressure temperature salinity oxygen\n   &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 st1     2004-08-18 15:27:46  40.6 -10.5        5        25.2     33.9   3.93\n 2 st1     2004-08-18 15:27:46  40.6 -10.5       10        25.1     34.9   4.49\n 3 st2     2004-08-18 17:00:01  40.8 -10.5        5        25.2     34.8   4.47\n 4 st2     2004-08-18 17:00:01  40.8 -10.5       10        25.2     34.8   4.47\n 5 st3     2004-08-18 20:32:54  41.0 -10.5        5        NA       NA    NA   \n 6 st3     2004-08-18 20:32:54  41.0 -10.5       10        25.0     34.9   4.49\n 7 st4     2004-08-18 22:44:56  41.1 -10.5        5        NA       NA    NA   \n 8 st4     2004-08-18 22:44:56  41.1 -10.5       10        NA       NA    NA   \n 9 st5     2004-08-19 00:59:59  41.3 -10.5        5        NA       NA    NA   \n10 st5     2004-08-19 00:59:59  41.3 -10.5       10        NA       NA    NA   \n# ℹ 34 more rows\n# ℹ 4 more variables: fluorescence &lt;dbl&gt;, spar &lt;dbl&gt;, par &lt;dbl&gt;, density &lt;dbl&gt;\n\n\nIn the next example, two conditional expressions are passed. The first is used to filter surface water below 200 m, and the second statement filter records that above latitude 6°S\n\nCodectd %&gt;% \n  filter(pressure &lt; 200 & lat &gt; -6)\n\n# A tibble: 223 × 12\n   station time                  lon   lat pressure temperature salinity oxygen\n   &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 st17    2004-08-23 19:42:30  40.1 -5.49        5        25.6     35.2   4.40\n 2 st17    2004-08-23 19:42:30  40.1 -5.49       10        25.4     35.1   4.45\n 3 st17    2004-08-23 19:42:30  40.1 -5.49       15        25.3     35.1   4.48\n 4 st17    2004-08-23 19:42:30  40.1 -5.49       20        25.4     35.2   4.48\n 5 st17    2004-08-23 19:42:30  40.1 -5.49       25        25.4     35.2   4.48\n 6 st17    2004-08-23 19:42:30  40.1 -5.49       30        25.4     35.2   4.48\n 7 st17    2004-08-23 19:42:30  40.1 -5.49       35        25.4     35.2   4.46\n 8 st17    2004-08-23 19:42:30  40.1 -5.49       40        25.4     35.2   4.48\n 9 st17    2004-08-23 19:42:30  40.1 -5.49       45        25.4     35.2   4.47\n10 st17    2004-08-23 19:42:30  40.1 -5.49       50        25.4     35.2   4.45\n# ℹ 213 more rows\n# ℹ 4 more variables: fluorescence &lt;dbl&gt;, spar &lt;dbl&gt;, par &lt;dbl&gt;, density &lt;dbl&gt;\n\n\nIn this case, the surface.transect dataset has records where both conditions are met—the pressure is blow 200 meter and latitude above -6. Note that when two or more conditions are paased, the & operator is used.\nYou may sometimes want to know stations and at what depth a particular variable has missing values. You can pick all variable in the data frame using is.na() function.\n\nCodectd %&gt;% \n  filter(is.na(fluorescence))\n\n# A tibble: 7 × 12\n  station time                  lon    lat pressure temperature salinity oxygen\n  &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n1 st3     2004-08-18 20:32:54  41.0 -10.5         5          NA       NA     NA\n2 st4     2004-08-18 22:44:56  41.1 -10.5         5          NA       NA     NA\n3 st4     2004-08-18 22:44:56  41.1 -10.5        10          NA       NA     NA\n4 st5     2004-08-19 00:59:59  41.3 -10.5         5          NA       NA     NA\n5 st5     2004-08-19 00:59:59  41.3 -10.5        10          NA       NA     NA\n6 st10    2004-08-19 19:36:50  39.7  -8.83        5          NA       NA     NA\n7 st10    2004-08-19 19:36:50  39.7  -8.83       10          NA       NA     NA\n# ℹ 4 more variables: fluorescence &lt;dbl&gt;, spar &lt;dbl&gt;, par &lt;dbl&gt;, density &lt;dbl&gt;\n\n\nYou can also drop the observation with missing values in the data frame using the !is.na() operator\n\nCodectd %&gt;% \n  filter(!is.na(fluorescence))\n\n# A tibble: 2,789 × 12\n   station time                  lon   lat pressure temperature salinity oxygen\n   &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 st1     2004-08-18 15:27:46  40.6 -10.5        5        25.2     33.9   3.93\n 2 st1     2004-08-18 15:27:46  40.6 -10.5       10        25.1     34.9   4.49\n 3 st1     2004-08-18 15:27:46  40.6 -10.5       15        25.1     34.9   4.50\n 4 st1     2004-08-18 15:27:46  40.6 -10.5       20        25.0     34.9   4.51\n 5 st1     2004-08-18 15:27:46  40.6 -10.5       25        24.9     34.9   4.51\n 6 st1     2004-08-18 15:27:46  40.6 -10.5       30        24.9     34.9   4.50\n 7 st1     2004-08-18 15:27:46  40.6 -10.5       35        24.9     34.9   4.49\n 8 st1     2004-08-18 15:27:46  40.6 -10.5       40        24.9     34.9   4.48\n 9 st1     2004-08-18 15:27:46  40.6 -10.5       45        24.8     34.9   4.46\n10 st1     2004-08-18 15:27:46  40.6 -10.5       50        24.6     34.9   4.44\n# ℹ 2,779 more rows\n# ℹ 4 more variables: fluorescence &lt;dbl&gt;, spar &lt;dbl&gt;, par &lt;dbl&gt;, density &lt;dbl&gt;\n\n\nWhen you have string variable in the data frame with character or factor format, you can filter the certain observation with %in% statement. For example, to obtain profiles from three stations: st1, st8, and st13, we can write the code as;\n\nCodectd %&gt;% \n  filter(station %in% c(\"st1\", \"st8\", \"st13\"))\n\n# A tibble: 347 × 12\n   station time                  lon   lat pressure temperature salinity oxygen\n   &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 st1     2004-08-18 15:27:46  40.6 -10.5        5        25.2     33.9   3.93\n 2 st1     2004-08-18 15:27:46  40.6 -10.5       10        25.1     34.9   4.49\n 3 st1     2004-08-18 15:27:46  40.6 -10.5       15        25.1     34.9   4.50\n 4 st1     2004-08-18 15:27:46  40.6 -10.5       20        25.0     34.9   4.51\n 5 st1     2004-08-18 15:27:46  40.6 -10.5       25        24.9     34.9   4.51\n 6 st1     2004-08-18 15:27:46  40.6 -10.5       30        24.9     34.9   4.50\n 7 st1     2004-08-18 15:27:46  40.6 -10.5       35        24.9     34.9   4.49\n 8 st1     2004-08-18 15:27:46  40.6 -10.5       40        24.9     34.9   4.48\n 9 st1     2004-08-18 15:27:46  40.6 -10.5       45        24.8     34.9   4.46\n10 st1     2004-08-18 15:27:46  40.6 -10.5       50        24.6     34.9   4.44\n# ℹ 337 more rows\n# ℹ 4 more variables: fluorescence &lt;dbl&gt;, spar &lt;dbl&gt;, par &lt;dbl&gt;, density &lt;dbl&gt;"
  },
  {
    "objectID": "ch4.html#select",
    "href": "ch4.html#select",
    "title": "6  Data frame Manipulation",
    "section": "\n6.5 select",
    "text": "6.5 select\nThe second verb we are going to demonstrate is the select() function. Often you work with large datasets with many columns but only a few are actually of interest to you. The select() function selects columns of the data frame. select() function allows you to choose variables that are of interest. You can use it to pick out a some columns from the dataset. For instance, fi we want pressure, temprature, salinity, fluorescence and ovygen variables from the data frame, we can simply write a code as;\n\nCodectd %&gt;% \n  select (pressure, temperature, salinity, fluorescence, oxygen)\n\n# A tibble: 2,796 × 5\n   pressure temperature salinity fluorescence oxygen\n      &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;  &lt;dbl&gt;\n 1        5        25.2     33.9        0.560   3.93\n 2       10        25.1     34.9        0.599   4.49\n 3       15        25.1     34.9        0.650   4.50\n 4       20        25.0     34.9        0.678   4.51\n 5       25        24.9     34.9        0.760   4.51\n 6       30        24.9     34.9        0.729   4.50\n 7       35        24.9     34.9        0.740   4.49\n 8       40        24.9     34.9        0.693   4.48\n 9       45        24.8     34.9        0.703   4.46\n10       50        24.6     34.9        0.752   4.44\n# ℹ 2,786 more rows\n\n\nBesides just selecting columns, you can use a minus sign to remove variables you do not need from the data frame.\n\nCodectd %&gt;% \n  select(-spar, -par, -density, -time) \n\n# A tibble: 2,796 × 8\n   station   lon   lat pressure temperature salinity oxygen fluorescence\n   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;        &lt;dbl&gt;\n 1 st1      40.6 -10.5        5        25.2     33.9   3.93        0.560\n 2 st1      40.6 -10.5       10        25.1     34.9   4.49        0.599\n 3 st1      40.6 -10.5       15        25.1     34.9   4.50        0.650\n 4 st1      40.6 -10.5       20        25.0     34.9   4.51        0.678\n 5 st1      40.6 -10.5       25        24.9     34.9   4.51        0.760\n 6 st1      40.6 -10.5       30        24.9     34.9   4.50        0.729\n 7 st1      40.6 -10.5       35        24.9     34.9   4.49        0.740\n 8 st1      40.6 -10.5       40        24.9     34.9   4.48        0.693\n 9 st1      40.6 -10.5       45        24.8     34.9   4.46        0.703\n10 st1      40.6 -10.5       50        24.6     34.9   4.44        0.752\n# ℹ 2,786 more rows\n\nCode## or you can bind the variable you want to remove\nctd %&gt;% \n  select(-c(spar, par, density, time))\n\n# A tibble: 2,796 × 8\n   station   lon   lat pressure temperature salinity oxygen fluorescence\n   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;        &lt;dbl&gt;\n 1 st1      40.6 -10.5        5        25.2     33.9   3.93        0.560\n 2 st1      40.6 -10.5       10        25.1     34.9   4.49        0.599\n 3 st1      40.6 -10.5       15        25.1     34.9   4.50        0.650\n 4 st1      40.6 -10.5       20        25.0     34.9   4.51        0.678\n 5 st1      40.6 -10.5       25        24.9     34.9   4.51        0.760\n 6 st1      40.6 -10.5       30        24.9     34.9   4.50        0.729\n 7 st1      40.6 -10.5       35        24.9     34.9   4.49        0.740\n 8 st1      40.6 -10.5       40        24.9     34.9   4.48        0.693\n 9 st1      40.6 -10.5       45        24.8     34.9   4.46        0.703\n10 st1      40.6 -10.5       50        24.6     34.9   4.44        0.752\n# ℹ 2,786 more rows\n\n\nYou can drop a range of variables in the data frame with select() function. For instance, the code below drop all variables beween temperature to fluorescence. You can also select those variables in range by removing the negative sign\n\nCode# hide a range of columns\nctd %&gt;% \n  select(-(temperature:fluorescence))\n\n# A tibble: 2,796 × 8\n   station time                  lon   lat pressure  spar   par density\n   &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n 1 st1     2004-08-18 15:27:46  40.6 -10.5        5 1177. 53.9    1022.\n 2 st1     2004-08-18 15:27:46  40.6 -10.5       10 1151. 40.3    1023.\n 3 st1     2004-08-18 15:27:46  40.6 -10.5       15 1135. 31.3    1023.\n 4 st1     2004-08-18 15:27:46  40.6 -10.5       20 1124. 25.6    1023.\n 5 st1     2004-08-18 15:27:46  40.6 -10.5       25 1111. 21.1    1023.\n 6 st1     2004-08-18 15:27:46  40.6 -10.5       30 1103. 17.2    1023.\n 7 st1     2004-08-18 15:27:46  40.6 -10.5       35 1097. 13.9    1023.\n 8 st1     2004-08-18 15:27:46  40.6 -10.5       40 1091. 11.2    1023.\n 9 st1     2004-08-18 15:27:46  40.6 -10.5       45 1087.  9.05   1024.\n10 st1     2004-08-18 15:27:46  40.6 -10.5       50 1084.  7.30   1024.\n# ℹ 2,786 more rows\n\n\nJust like you can pick columns with the matching name, you can also drop any column with a matching name\n\nCodectd %&gt;% \n  select(-contains(\"t\"))\n\n# A tibble: 2,796 × 6\n     lon pressure oxygen fluorescence  spar   par\n   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  40.6        5   3.93        0.560 1177. 53.9 \n 2  40.6       10   4.49        0.599 1151. 40.3 \n 3  40.6       15   4.50        0.650 1135. 31.3 \n 4  40.6       20   4.51        0.678 1124. 25.6 \n 5  40.6       25   4.51        0.760 1111. 21.1 \n 6  40.6       30   4.50        0.729 1103. 17.2 \n 7  40.6       35   4.49        0.740 1097. 13.9 \n 8  40.6       40   4.48        0.693 1091. 11.2 \n 9  40.6       45   4.46        0.703 1087.  9.05\n10  40.6       50   4.44        0.752 1084.  7.30\n# ℹ 2,786 more rows\n\n\nBecause of the naming conventions, many of the column names that you import dont make sense. You will often need to change the name of the variable. select() function allows you to accomplish that. For example, we want to select station, pressure and fluoresence, but we need also change the name of station to be Cast, pressure to Depth and fluorescence to Chlorophyll. You can achieve that with code written as;\n\nCodectd %&gt;% \n  select(Cast = station, \n         Depth = pressure, \n         Chlorophyll = fluorescence)\n\n# A tibble: 2,796 × 3\n   Cast  Depth Chlorophyll\n   &lt;chr&gt; &lt;dbl&gt;       &lt;dbl&gt;\n 1 st1       5       0.560\n 2 st1      10       0.599\n 3 st1      15       0.650\n 4 st1      20       0.678\n 5 st1      25       0.760\n 6 st1      30       0.729\n 7 st1      35       0.740\n 8 st1      40       0.693\n 9 st1      45       0.703\n10 st1      50       0.752\n# ℹ 2,786 more rows\n\n\n\nThere are also a number of handy helper functions that you can use with the select() function to filter the returned columns. These include starts_with(), ends_with(), contains(), matches(), and num_range(). I wont illustrate them here, however, you can consult the help document for more information.\n\n\n6.5.1 Adding new variables: mutate, transmute, add_rownames\nBesides selecting sets of existing columns, it’s often useful to add new columns that are functions of existing columns. This is the job of mutate(): Any new variable created with the mutate() function will be added to the end of the data frame. For example, raw fluorescence values are often skewed (Figure 6.1 a) and we often transform them to have normal distribution (Figure 6.1 b).\n\n\n\n\nFIGURE 6.1. ?(caption)\n\n\n\n\nAt this situation, its handy to add a new column with transformed values in the data frame as shown in the code;\n\nCodectd %&gt;% \n  select(pressure, fluorescence) %&gt;%\n  mutate(log.fluorescence = fluorescence %&gt;% log10())\n\n# A tibble: 2,796 × 3\n   pressure fluorescence log.fluorescence\n      &lt;dbl&gt;        &lt;dbl&gt;            &lt;dbl&gt;\n 1        5        0.560           -0.251\n 2       10        0.599           -0.223\n 3       15        0.650           -0.187\n 4       20        0.678           -0.169\n 5       25        0.760           -0.119\n 6       30        0.729           -0.138\n 7       35        0.740           -0.131\n 8       40        0.693           -0.159\n 9       45        0.703           -0.153\n10       50        0.752           -0.124\n# ℹ 2,786 more rows\n\n\nThe code tells important two steps: the first steps involved selecting the pressure and fluorescence variables, once these variables were selected fromt he ctd data frame were fed into a mutate() function, which computed the logarithmic of fluorescence and assign a new log.fluorescence variable into the data frame.\nIn a similar way above, we can create a new variable of anomaly as the code below shows;\n\nCodectd %&gt;% \n  select(pressure, fluorescence) %&gt;%\n  mutate(anomaly = fluorescence - mean(fluorescence, na.rm = TRUE))\n\n# A tibble: 2,796 × 3\n   pressure fluorescence anomaly\n      &lt;dbl&gt;        &lt;dbl&gt;   &lt;dbl&gt;\n 1        5        0.560   0.425\n 2       10        0.599   0.464\n 3       15        0.650   0.515\n 4       20        0.678   0.542\n 5       25        0.760   0.624\n 6       30        0.729   0.593\n 7       35        0.740   0.604\n 8       40        0.693   0.557\n 9       45        0.703   0.568\n10       50        0.752   0.617\n# ℹ 2,786 more rows\n\n\n\n6.5.2 Arranging rows\nThe arrange() function in the dplyr package can be used to order the rows in a data frame. This function accepts a set of columns to order by with the default row ordering being in ascending order.\n\nCodectd %&gt;% \n  arrange(pressure)\n\n# A tibble: 2,796 × 12\n   station time                  lon    lat pressure temperature salinity oxygen\n   &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 st1     2004-08-18 15:27:46  40.6 -10.5         5        25.2     33.9   3.93\n 2 st2     2004-08-18 17:00:01  40.8 -10.5         5        25.2     34.8   4.47\n 3 st3     2004-08-18 20:32:54  41.0 -10.5         5        NA       NA    NA   \n 4 st4     2004-08-18 22:44:56  41.1 -10.5         5        NA       NA    NA   \n 5 st5     2004-08-19 00:59:59  41.3 -10.5         5        NA       NA    NA   \n 6 st6     2004-08-19 11:49:08  40.3  -8.83        5        25.2     34.9   4.48\n 7 st7     2004-08-19 13:33:31  40.2  -8.83        5        25.3     34.9   4.52\n 8 st8     2004-08-19 15:28:18  40.0  -8.83        5        25.0     34.9   4.59\n 9 st9     2004-08-19 17:39:39  39.8  -8.83        5        25.1     34.9   4.64\n10 st10    2004-08-19 19:36:50  39.7  -8.83        5        NA       NA    NA   \n# ℹ 2,786 more rows\n# ℹ 4 more variables: fluorescence &lt;dbl&gt;, spar &lt;dbl&gt;, par &lt;dbl&gt;, density &lt;dbl&gt;\n\n\nBy default, it orders numerical values in increasing order, but you can ask for decreasing order using the desc() function:\n\nCodectd %&gt;% \n  arrange(pressure %&gt;% desc())\n\n# A tibble: 2,796 × 12\n   station time                  lon   lat pressure temperature salinity oxygen\n   &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 st3     2004-08-18 20:32:54  41.0 -10.5     1015        6.43     34.8   2.13\n 2 st3     2004-08-18 20:32:54  41.0 -10.5     1010        6.45     34.8   2.13\n 3 st3     2004-08-18 20:32:54  41.0 -10.5     1005        6.45     34.8   2.13\n 4 st3     2004-08-18 20:32:54  41.0 -10.5     1000        6.45     34.8   2.13\n 5 st3     2004-08-18 20:32:54  41.0 -10.5      995        6.46     34.8   2.13\n 6 st3     2004-08-18 20:32:54  41.0 -10.5      990        6.48     34.8   2.13\n 7 st3     2004-08-18 20:32:54  41.0 -10.5      985        6.55     34.8   2.11\n 8 st3     2004-08-18 20:32:54  41.0 -10.5      980        6.60     34.8   2.14\n 9 st3     2004-08-18 20:32:54  41.0 -10.5      975        6.60     34.8   2.17\n10 st3     2004-08-18 20:32:54  41.0 -10.5      970        6.62     34.8   2.17\n# ℹ 2,786 more rows\n# ℹ 4 more variables: fluorescence &lt;dbl&gt;, spar &lt;dbl&gt;, par &lt;dbl&gt;, density &lt;dbl&gt;"
  },
  {
    "objectID": "ch4.html#summarizing-and-grouping",
    "href": "ch4.html#summarizing-and-grouping",
    "title": "6  Data frame Manipulation",
    "section": "\n6.6 Summarizing and Grouping",
    "text": "6.6 Summarizing and Grouping\nSummary statistics for a data frame can be produced with the summarise() function. The summarise() function produces a single row of data containing summary statistics from a data frame. For example, you can compute for the mean of fluorescence values:\n\nCodectd %&gt;% \n  summarise(fl.mean = mean(fluorescence, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  fl.mean\n    &lt;dbl&gt;\n1   0.118\n\n\nBy itself, it’s not that useful until chained with the group_by() verb to compute summary statistics. There you can split the data into different groups and compute the summaries for each group.For example, you can ask for the mean of and standard deviation values of fluorescence for each station in the data frame:\n\nCodectd %&gt;% group_by(station) %&gt;%\n  summarise(Mean = mean(fluorescence, na.rm = TRUE),\n           STD = sd(fluorescence, na.rm = TRUE))\n\n# A tibble: 5 × 3\n  station   Mean   STD\n  &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 st1     0.304  0.319\n2 st13    0.0897 0.179\n3 st18    0.101  0.287\n4 st4     0.0970 0.233\n5 st8     0.125  0.381\n\n\nYou can group by one or more variables; you just specify the columns you want to separate into different subsets to the function. It works best when grouping by factors or discrete numbers; there isn’t much fun in grouping by real numbers.\n\nCodectd %&gt;% group_by(station, lon)%&gt;%\n  summarise(Mean = mean(fluorescence, na.rm = TRUE),\n           STD = sd(fluorescence, na.rm = TRUE))\n\n# A tibble: 5 × 4\n# Groups:   station [5]\n  station   lon   Mean   STD\n  &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 st1      40.6 0.304  0.319\n2 st13     40.1 0.0897 0.179\n3 st18     39.9 0.101  0.287\n4 st4      41.1 0.0970 0.233\n5 st8      40.0 0.125  0.381\n\n\nsummarise() can be used to count the number of rows in each group with nc()—which just counts how many observations you have in a subset of your data: You only need to parse the argument n() in the summarise()` function as;\n\nCodectd %&gt;% \n  group_by(station) %&gt;% \n  summarise(frequency = n())\n\n# A tibble: 5 × 2\n  station frequency\n  &lt;chr&gt;       &lt;int&gt;\n1 st1            50\n2 st13          135\n3 st18          163\n4 st4           186\n5 st8           162\n\n\n\n\n\n\nBache, Stefan Milton, and Hadley Wickham. 2022. Magrittr: A Forward-Pipe Operator for r. https://CRAN.R-project.org/package=magrittr.\n\n\nMüller, Kirill, and Hadley Wickham. 2022. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\n———. 2019. Stringr: Simple, Consistent Wrappers for Common String Operations. https://CRAN.R-project.org/package=stringr.\n\n\nWickham, Hadley, Romain François, Lionel Henry, and Kirill Müller. 2022. Dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, and Maximilian Girlich. 2022. Tidyr: Tidy Messy Data. https://CRAN.R-project.org/package=tidyr.\n\n\nWickham, Hadley, Jim Hester, and Jennifer Bryan. 2022. Readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr."
  },
  {
    "objectID": "ch41.html#overview",
    "href": "ch41.html#overview",
    "title": "7  Introduction to Simple Feature (sf) in R",
    "section": "7.1 Overview",
    "text": "7.1 Overview\nHave you ever found yourself struggling to work with spatial data in R? Well, fear not, because the introduction of the simple features (sf) package has made handling spatial data a breeze. In this article, we will explore what the sf package is, how it works, and some of its key features. R, a widely used programming language for statistical computing and graphics, offers the powerful “sf” package, which provides a comprehensive framework for working with spatial data. In this chapter, we will delve into the basics of the “sf” package in R, exploring its key features, data structures, and functions. By the end of this chapter, readers will gain a solid understanding of how to leverage “sf” to perform efficient and insightful spatial analysis."
  },
  {
    "objectID": "ch41.html#what-is-simple-feature-sf",
    "href": "ch41.html#what-is-simple-feature-sf",
    "title": "7  Data models and Simple Feature (sf) in R",
    "section": "7.5 What is Simple Feature (sf)?",
    "text": "7.5 What is Simple Feature (sf)?\nThe “sf” package is an essential package in R for working with spatial data using the Simple Features standard. Simple Features is an open standard developed by the Open Geospatial Consortium (OGC) to represent and manipulate spatial data consistently across different software platforms. “sf” in R provides a unified framework for representing, managing, and analyzing spatial data, making it easier for users to perform a wide range of spatial operations."
  },
  {
    "objectID": "ch41.html#key-features-of-the-sf-package",
    "href": "ch41.html#key-features-of-the-sf-package",
    "title": "7  Data models and Simple Feature (sf) in R",
    "section": "7.6 Key Features of the “sf” Package",
    "text": "7.6 Key Features of the “sf” Package\nThe “sf” package offers several key features that make it a powerful tool for spatial analysis in R:\n\nUnified Spatial Data Objects: “sf” introduces the “sf” class, which is used to represent spatial objects in R. The “sf” class can handle various spatial data types, including points, lines, polygons, and grids, allowing users to work with different types of spatial data seamlessly.\nAttribute Management: In addition to spatial data, “sf” provides a flexible framework for managing attribute data associated with spatial objects. Users can easily access and manipulate attribute data using familiar data manipulation techniques in R. One of the most useful features is the ability to easily manipulate spatial data using dplyr-style verbs. For example, you can use the filter function to select specific features based on their attributes, or the arrange function to sort features based on their attributes. This makes it easy to perform common data manipulation tasks on spatial data without having to write complex code.\nAnother useful feature of the sf package is its ability to handle projections and coordinate reference systems (CRS). The package provides functions for converting between different CRSs, as well as for reprojecting spatial data to a different CRS. This means that you can easily work with spatial data from different sources that may have different projections or CRSs.\nGeometric Operations: “sf” provides a wide range of geometric operations to manipulate spatial data. Users can perform operations such as buffer, intersection, union, and difference on spatial objects, allowing for complex spatial analysis and data manipulation.\nIntegration with Tidyverse: The “sf” package seamlessly integrates with other popular packages in the Tidyverse, such as dplyr and ggplot2. This integration allows users to combine spatial analysis with data manipulation, visualization, and statistical modeling in a consistent and efficient workflow.\n\n\nWorking with “sf” Spatial Objects: The “sf” package introduces the concept of “sf” spatial objects, which combine geometry and attribute data into a unified structure. Users can create “sf” objects from various data sources, including shapefiles, GeoJSON files, and data frames with spatial information. This chapter will cover the process of reading and writing spatial data, as well as performing basic operations on “sf” objects, such as subsetting, filtering, and summarizing attribute data.\nSpatial Operations and Analysis: The true power of the “sf” package lies in its ability to perform complex spatial operations and analysis. This section will explore some common spatial operations, including spatial joins, spatial queries, and spatial aggregations. Users will learn how to combine spatial datasets, query spatial relationships, and summarize spatial patterns using “sf” functions. Examples will be provided to illustrate the application of these operations in real-world scenarios.\nVisualizing Spatial Data with “sf”: Effective visualization is crucial for communicating spatial information. The “sf” package integrates smoothly with popular visualization packages such as ggplot2 and leaflet, allowing users to create informative and visually appealing maps. This section will cover the basics of visualizing spatial data using “sf” and demonstrate techniques for creating thematic maps, interactive web maps, and customized map layouts.\n\nThe sf package also provides a variety of functions for visualizing spatial data. For example, you can use the ggplot2 framework to create beautiful and informative maps of your spatial data. Additionally, the package provides functions for creating interactive maps using leaflet or mapview.\n\nSpatial data in R has a reputation for being tedious and time consuming. With so many different spatial file types (.shp, .nc, .gpkg, .geojson, and .tif to name a few) with various resolutions and coordinate reference systems, it can be challenging to produce accurate maps. Most data scientists have historically utilized the raster package to calculate cell values across stacked layers and recognize patterns over space and time. In pursuit of improving methodology and keeping up with the hip trends in environmental science, many scientists are motivated to make the spatial switch from raster to terra. The terra package is essentially the modern version of raster, but with faster processing speeds and more flexible functions."
  },
  {
    "objectID": "ch5.html#matrices",
    "href": "ch5.html#matrices",
    "title": "\n8  Introduction to Matrices and rasters\n",
    "section": "\n8.1 Matrices",
    "text": "8.1 Matrices\nMatrices are a fundamental data structure in R that allows you to store and manipulate data in a two-dimensional format. They consist of rows and columns, where each element is identified by its row and column index. Matrices are useful for organizing and working with structured data, such as numerical or categorical values.\nMatrices are useful for performing various mathematical operations, such as matrix multiplication, addition, and transposition. They are also commonly used in statistical analysis and data manipulation tasks. R provides many built-in functions and operators for working with matrices, allowing you to perform calculations, subsetting, and other operations efficiently."
  },
  {
    "objectID": "ch5.html#what-is-a-matrix",
    "href": "ch5.html#what-is-a-matrix",
    "title": "\n8  Introduction to Matrices and rasters\n",
    "section": "\n8.2 What is a matrix?",
    "text": "8.2 What is a matrix?\nA matrix is a two-dimensional data structure in R that consists of rows and columns. It is similar to a table or a spreadsheet where each element in the matrix is identified by its row and column index. Matrices in R can contain elements of the same data type, such as numeric values, character strings, or logical values.\nUnlike a data.frame, the number of values in all columns of a matrix is equal, and the same can be said about the rows. It is important to know how to work with matrices because it is a commonly used data structure, with many uses in data processing and analysis, including spatial data. For example, many R function accept a matrix as an argument, or return a matrix as a returned object. Moreover, a matrix is used to store raster object."
  },
  {
    "objectID": "ch5.html#creating-a-matrix",
    "href": "ch5.html#creating-a-matrix",
    "title": "\n8  Introduction to Matrices and rasters\n",
    "section": "\n8.3 Creating a matrix\n",
    "text": "8.3 Creating a matrix\n\nIn R, you can create a matrix using the matrix() function. The function takes in a vector of values and parameters specifying the number of rows and columns. A matrix function accepts the following arguments:\n\n\ndata—A vector of the values to fill into the matrix\n\nnrow—The number of rows\n\n\nncol—The number of columns\n\n\nbyrow—Whether the matrix is filled by column (FALSE, the default) or by row (TRUE)\n\nFor example, to create a 3x3 matrix with numeric values, you can use the following code:\n\nCodemy_matrix &lt;- matrix(\n  c(1, 2, 3, 4, 5, 6, 7, 8, 9), \n  nrow = 3, \n  ncol = 3\n  )\n\n\nThis will create a matrix my_matrix with 3 rows and 3 columns, where the elements are filled in column-wise order.\n\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n\nNote that the class of matrix objects is a vector of length two, with the values \"matrix\" and \"array\":\n\nCodemy_matrix |&gt;\n  class()\n\n[1] \"matrix\" \"array\" \n\n\nThis implies the fact that the matrix class inherits from the more general array class. The nrow and ncol parameters determine the number of rows and number of columns, respectively. When only one of them is specified, the other is automatically determined based on the length of the data vector:\n\nCodemy_matrix &lt;- matrix(\n  c(1, 2, 3, 4, 5, 6, 7, 8, 9), \n  ncol = 3\n  )\n\nmy_matrix\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n\n\nExample 8.1 What do you think will happen when we try to create a matrix with less, or more, data values than matrix size nrow*ncol? Run the following expressions to find out.\n\n\nSolution. \n\nCodematrix(12:1, ncol = 4, nrow = 4)\n\n     [,1] [,2] [,3] [,4]\n[1,]   12    8    4   12\n[2,]   11    7    3   11\n[3,]   10    6    2   10\n[4,]    9    5    1    9\n\n\n\n\nExample 8.2 Create a 3×33×3 matrix where all values are 1/91/9.\n\nFinally, the byrow parameter determines the direction of filling the matrix with data values. In both cases the filling starts from the top-left corner (i.e., row 1, column 1), however with byrow=FALSE the matrix is filled one column at a time (the default), while with byrow=TRUE the matrix is filled one row at a time. For example:\n\nCodematrix(1:12, nrow = 3) \n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12"
  },
  {
    "objectID": "ch5.html#matrix-properties",
    "href": "ch5.html#matrix-properties",
    "title": "\n8  Introduction to Matrices and rasters\n",
    "section": "\n8.4 matrix properties",
    "text": "8.4 matrix properties\nIn R, a matrix is a two-dimensional data structure that contains elements of the same data type organized in rows and columns. Matrices are useful for various mathematical and statistical operations.\n\n8.4.1 Dimensions\nA matrix has a defined number of rows and columns, which determine its dimensions. The dimensions of a matrix can be obtained using the dim() function.\n\nCodex = matrix(1:6, nrow = 2) \nx \n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n\nFor example, if mat is a matrix, dim(mat) will return a vector containing the number of rows and columns.\n\nCodex |&gt;\n  dim()\n\n[1] 2 3\n\n\nThe length function returns the number of values in a matrix:\n\nCodex |&gt;\n  length()\n\n[1] 6\n\n\nJust like with a data.frame, the nrow and ncol functions return the number of rows and columns in a matrix, respectively:\n\nCodex |&gt;\n  nrow()\n\n[1] 2\n\n\n\nCodex |&gt;\n  ncol()\n\n[1] 3\n\n\nAlso like with a data.frame, the dim function gives both dimensions of the matrix as a vector of length 2, i.e., number of rows and columns, respectively:\n\nCodex |&gt;\n  dim()\n\n[1] 2 3\n\n\nFor example, R has a built-in dataset named volcano, which is a matrix of surface elevation. The sample script volcano.R, used in Section 2.1.1 to demontrate working with R code files, creates a 3D image of elevation based on that matrix (Figure 2.2).\n\nExample 8.3 Find out what are the number of elements, rows and columns in the built-in matrix named volcano.\n\n\n8.4.2 Row and column names\nLike a data.frame, matrix objects also have row and column names which can be accessed or modified using the rownames and colnames functions, respectively. Unlike data.frame row and column names, which are mandatory, matrix row and column names are optional. For example, matrices created with matrix initially do not have row and column names:\n\nCoderownames(x) \n\nNULL\n\n\n\nCodecolnames(x) \n\nNULL\n\n\nThe matrix row and column names can be initialized, or modified, by assignment to the rownames and colnames properties:\n\nCoderownames(x) = c(\"a\", \"b\") \ncolnames(x) = c(\"var1\", \"var2\", \"var3\") \nx \n\n  var1 var2 var3\na    1    3    5\nb    2    4    6\n\n\n\n8.4.3 matrix conversions\nIn R, you can convert between different data structures, such as vectors, data frames, and matrices, using various functions and operations. Here are some common ways to convert data into matrices:\n\n8.4.4 matrix → vector\nIn R, you can convert a matrix into a vector using the as.vector() or c() function. Here’s how you can perform the conversion:\n\nCodex = matrix(\n  data = 1:6, \n  ncol = 3, \n  byrow = TRUE)\nx \n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n\n\n\nCodex |&gt; \n  as.vector()\n\n[1] 1 4 2 5 3 6\n\n\n\n\n\n\n\n\nImportant\n\n\n\nNote that the matrix values are always arranged by column in the resulting vector!\n\n\n\nExample 8.4 Does the volcano matrix contain any NA values? How can we check?\n\n\n8.4.5 matrix → data.frame\n\nTo convert a matrix into a data frame in R, you can use the as.data.frame() function. Here’s how you can perform the conversion:\n\nCodex |&gt;\n  as.data.frame() \n\n  V1 V2 V3\n1  1  2  3\n2  4  5  6\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that row and column names are automatically generated (if they do not exist) as part of the conversion, since they are mandatory in a data.frame\n\n\n\n8.4.6 Transposing a matrix\nIn R, you can transpose a matrix by interchanging its rows and columns. The transpose operation flips the matrix along its diagonal. R provides the t() function specifically designed for transposing matrices. The t function transposes a matrix. In other words, the matrix rows and columns are \"switched\"—rows become columns and columns become rows. Here’s how you can transpose a matrix in R:\n\nCodex = matrix(1:6, ncol = 3) \nx \n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n\n\nCodet(x) \n\n     [,1] [,2]\n[1,]    1    2\n[2,]    3    4\n[3,]    5    6\n\n\n\nExample 8.5 What will be the result of t(t(x))?\n\n\nCoderequire(tidyverse)\nrequire(terra)\nrequire(tidyterra)\nrequire(patchwork)"
  },
  {
    "objectID": "ch5.html#what-is-a-raster",
    "href": "ch5.html#what-is-a-raster",
    "title": "\n8  Introduction to Matrices and rasters\n",
    "section": "\n8.5 What is a raster?",
    "text": "8.5 What is a raster?\nA raster is basically a matrix or an array, representing a rectangular area on the surface of the earth. To associate the matrix or the array with the particular area it represents, the raster has some additional spatial properties, on top of the non-spatial properties that any ordinary matrix or array has:\n\n\nNon-spatial properties\n\nValues\nDimensions (rows, columns, layers)\n\n\n\nSpatial properties\n\nExtent\nCoordinate Reference System (CRS)\n(Resolution)\n\n\n\nRaster extent is the range of x- and y-axis coordinates that the raster occupies. The Coordinate Reference System (CRS) is the particular system that \"associates\" the raster coordinates (which are just pairs of x/y values) to geographic locations. Raster resolution is the size of a raster cell, in the x and y directions. The resolution is listed in parentheses because it can be calculated given the extent and the number of rows and columns."
  },
  {
    "objectID": "ch5.html#commmon-raster-file-formats",
    "href": "ch5.html#commmon-raster-file-formats",
    "title": "\n8  Introduction to Matrices and rasters\n",
    "section": "\n8.6 Commmon Raster file formats",
    "text": "8.6 Commmon Raster file formats\nCommonly used raster file formats (Table [5.2] can be divided in two groups. \"Simple\" raster file formats, such as GeoTIFF, are single-band or multi-band rasters (Figure [5.10] with a geo-referenced extent, as discussed above (Section [5.3.1]. \"Complex\" raster file formats, such as HDF, contain additional complexity, such as more than three dimensions (Figure [5.11], and/or metadata, such as band names, time stamps, units of measurement, and so on. | | | | |————————————|—————————————————————–|—————————————| | | | Table 5.2: Common raster file formats | | Type | Format | File extension | | \"Simple\" | GeoTIFF | .tif | | | Erdas Imagine Image | .img | | \"Complex\" (&gt;3D and/or metadata) | HDF | .hdf, he5, and other | | | NetCDF | .nc |"
  },
  {
    "objectID": "ch5.html#raster-with-terra",
    "href": "ch5.html#raster-with-terra",
    "title": "\n8  Introduction to Matrices and rasters\n",
    "section": "\n8.7 Raster with terra",
    "text": "8.7 Raster with terra\nIn this section, our focus will be on the terra package, which serves as a replacement for the raster package in R when working with raster-based geospatial data. Over the years, the raster package has been widely used as a primary tool for geospatial data manipulation in R. However, the creators of the raster package have recently introduced the terra package as a more efficient alternative.\nterra is a geospatial data processing library in R that provides efficient and scalable tools for working with raster data. It is designed to handle large and complex spatial datasets, allowing for high-performance analysis and processing. The terra package introduces three new classes for working with geospatial data:\n\nSpatRaster: The SpatRaster class is designed for representing raster data in a geospatial context. It provides efficient memory usage compared to the data models used in the raster package. SpatRaster objects store the spatial extent, resolution, and values of a raster dataset. They support various operations and functions for raster data manipulation, analysis, and visualization.\nSpatVector: The SpatVector class represents vector-based geospatial data, including points, lines, and polygons, along with their associated attributes. SpatVector objects store the geometries and attribute data of vector features. They support common vector operations such as subsetting, spatial queries, spatial joins, and attribute manipulation.\nSpatExtent: The SpatExtent class is used to represent the spatial extent of a geospatial object, such as a SpatRaster or SpatVector. It captures the minimum and maximum coordinates along each dimension (e.g., x, y, and potentially z for 3D data). SpatExtent objects provide methods for comparing extents, calculating overlaps, and extracting subsets of data based on spatial extent.\n\nTo get started using the terra package for working with geospatial data and performing various tasks, such as raster preprocessing, install the terra package from the CRAN repository using the following command:\n\nCodeinstall.packages(\"terra\")\n\n\nThen, load the package into your R session:\n\nCodelibrary(terra)\n\n\nTo read a raster dataset from an existing file, you can use the rast() function along with the file path and name. For instance, you can read bathymetry data covering the Indian Ocean region from a file provided by NASA.\n\nCodebathy = rast(\"data/wioregio-7753.asc\")\n\nbathy\n\nclass       : SpatRaster \ndimensions  : 3181, 2641, 1  (nrow, ncol, nlyr)\nresolution  : 0.01666667, 0.01666667  (x, y)\nextent      : 25.99167, 70.00834, -40.00833, 13.00834  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 \nsource      : wioregio-7753.asc \nname        : wioregio-7753 \n\n\n\nCodebathy  |&gt;\n  class()\n\n[1] \"SpatRaster\"\nattr(,\"package\")\n[1] \"terra\"\n\n\nThe spatRaster object in R provides a range of functions to obtain information about the data it contains. Simply calling the object using its variable name will return basic information, but additional functions are available for more specific details. For instance, ncol() returns the number of columns, nrow() returns the number of rows, and ncell() returns the total number of cells in the data.\n\nCodebathy |&gt;\n  ncol()\n\n[1] 2641\n\n\n\nCodebathy |&gt;\n  nrow()\n\n[1] 3181\n\n\n\nCodebathy |&gt;\n  nlyr()\n\n[1] 1\n\n\n\nCodebathy |&gt;\n  res()\n\n[1] 0.01666667 0.01666667\n\n\nThe nlyr() function returns the number of layers or bands, while res() provides the data’s resolution relative to the map projection’s units. The names assigned to each band can be obtained using the names() function. Finally, inMemory() returns a Boolean value indicating whether the data is stored in memory or RAM. These functions allow for a more detailed understanding of the spatRaster object’s contents and properties.\n\nCodebathy |&gt;\n  ncell()\n\n[1] 8401021\n\n\n\nCodebathy |&gt;\n  names()\n\n[1] \"wioregio-7753\"\n\n\n\nCodebathy |&gt;\n  inMemory()\n\n[1] FALSE"
  },
  {
    "objectID": "ch5.html#raster-preprocessing",
    "href": "ch5.html#raster-preprocessing",
    "title": "\n8  Introduction to Matrices and rasters\n",
    "section": "\n8.8 Raster Preprocessing",
    "text": "8.8 Raster Preprocessing\nIn the next section, we will delve into raster preprocessing tasks such as cropping, masking, and merging using the terra package. These operations allow us to manipulate raster data before further analysis. To illustrate these concepts, I will use an example of reading a bathymetry model specific to the Western Indian Ocean (WIO) region.\n\nCodebathy %&gt;% \n  sf::st_bbox()\n\n     xmin      ymin      xmax      ymax \n 25.99167 -40.00833  70.00834  13.00834 \n\n\nThe command bathy %&gt;% sf::st_bbox() is used for obtaining the bounding box of the Western Indian Ocean (WIO) region in the bathymetry data. This command utilizes the st_bbox() function from the sf package in R programming language. The output of this command will provide the minimum and maximum values for longitude and latitude that define the rectangular boundary of the WIO region. This information can be useful for a variety of spatial analyses, such as selecting a subset of data within the WIO region or visualizing the extent of the region on a map. Overall, this command provides a convenient and efficient way to obtain the bounding box for the WIO region from the bathymetry data.\nTo extract a rectangular extent from a larger raster dataset, you can utilize the crop() function in the terra package. This requires specifying the desired extent using the spatExtent object, which is created using the ext() function and defining the xmin, xmax, ymin, and ymax coordinates relative to the map projection.\n\nCodecrop_extent &lt;- terra::ext(30,65,-30,10)\n\n\n\nCodebathy.aoi = bathy %&gt;% \n  terra::crop(crop_extent)\n\n\n\nCodebathy.aoi %&gt;% \n  sf::st_bbox()\n\n      xmin       ymin       xmax       ymax \n 29.991667 -30.008331  64.991674   9.991677 \n\n\n\nCodeggplot()+\n  tidyterra::geom_spatraster(data = bathy.aoi)+\n  tidyterra::scale_fill_hypso_tint_c(\n    palette = \"gmt_globe\",\n    labels = scales::label_number(),\n    breaks = seq(-6000, 6000,3000), \n    # limits = c(-6000, 6500),\n    guide = guide_colorbar(\n      direction = \"horizontal\",\n      title = \"Bathymetry & altitude (meters)\",\n      title.position = \"top\",\n      barwidth = 12, barheight = 0.8\n    ))+\n  coord_sf(expand = FALSE) +\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"top\")\n\n\n\nFIGURE 8.1. Bathymetry and altitude in the WIO region\n\n\n\n\n\nCodeiron.wio = terra::rast(\"f:/2023/dataAll/wekeza/Present.Benthic.Max.Depth.Iron.Range.tif\") |&gt;\n  terra::crop(terra::ext(25,70,-40,15)) %&gt;% \n  tidyterra::rename(iron = 1)\n\n\niron.wio %&gt;% \n  terra::values()  %&gt;%\n  quantile(na.rm = T, c(0.05,0.95))\n\n     5%     95% \n1.3e-05 6.8e-05 \n\n\n\nCodeggplot() +\n  tidyterra::geom_spatraster(data = iron.wio)+\n  scale_fill_gradientn(colours = hcl.colors(n = 120, palette = \"Spectral\", rev = TRUE),\n    guide = guide_colorbar(\n      direction = \"horizontal\",\n      title = \"Iron distribution\",\n      title.position = \"top\",\n      barwidth = 12, barheight = 0.8\n    ), \n                       limits = c(0.000013, 0.000068), na.value = \"white\", \n                       breaks = seq(0.000013, 0.000068, length.out = 5), label = seq(0.13,0.6,0.1))+\n  theme_bw(base_size = 14)+\n  coord_sf(expand = FALSE)+\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"top\")\n\n\n\nFIGURE 8.2. Iron distribution in the WIO region\n\n\n\n\nAdditionally, you can crop a raster relative to the rectangular extent or bounding box of another geospatial layer by using the extent of that layer in the crop operation. In the provided code block, an example is shown where the spatial extent of a watershed boundary is used for cropping. It is worth noting that plotting spatVector objects with the tmap package may not be possible, so the data is also read in as an sf object using the sf package for visualization purposes.\n\nCodeggplot()+\n  tidyterra::geom_spatraster(data = bathy.aoi)+\n  tidyterra::geom_spatraster_contour(data = bathy.aoi, breaks = -200)+\n  tidyterra::scale_fill_hypso_tint_c(\n    palette = \"gmt_globe\",\n    labels = scales::label_number(),\n    breaks = seq(-6000, 6000,3000), \n    # limits = c(-6000, 6500),\n    guide = guide_colorbar(\n      direction = \"horizontal\",\n      title = \"Bathymetry & altitude (meters)\",\n      title.position = \"top\",\n      barwidth = 12, barheight = 0.8\n    ))+\n  coord_sf(expand = FALSE) +\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"top\")\n\n\n\nFIGURE 8.3. Bathymetry and altitude in the WIO region superimposed with isobar"
  },
  {
    "objectID": "ch6.html#glimpse-of-raster",
    "href": "ch6.html#glimpse-of-raster",
    "title": "\n9  Raster processing\n",
    "section": "\n9.1 glimpse of raster",
    "text": "9.1 glimpse of raster\nA a raster is a fundamental spatial data structure used to represent and store geographic information. It divides a region into a grid of rectangular cells, also known as pixels. Each cell within the raster can hold one or more values, allowing for the storage of various types of information, such as elevation, temperature, land cover, or satellite imagery.\nThis grid-like structure of a raster distinguishes it from vector data, which represents geographic features using points, lines, and polygons. While vector data focuses on discrete spatial entities, rasters provide a continuous representation of data across the entire extent of the region.\nThe raster data structure is commonly employed in various fields, including remote sensing, environmental modeling, terrain analysis, and geographic information systems (GIS). It offers a flexible and efficient means of storing and analyzing spatial data, facilitating tasks such as spatial interpolation, overlay analysis, and spatial statistics."
  },
  {
    "objectID": "ch6.html#terra-package",
    "href": "ch6.html#terra-package",
    "title": "\n9  Raster processing\n",
    "section": "\n9.2 terra package",
    "text": "9.2 terra package\nThe terra package is a powerful tool in R that offers a comprehensive suite of functions for handling raster data. It provides a wide range of capabilities, including creating, reading, manipulating, and writing raster data. These functions allow users to efficiently work with raster datasets and perform various operations on them.\nOne of the notable strengths of the terra package is its collection of general raster data manipulation functions. These functions serve as building blocks and can be combined to develop more specialized functions tailored to specific analysis tasks. For instance, users can leverage functions to read a subset of raster values from a file or convert cell numbers to coordinates and vice versa, enabling them to extract relevant information and perform coordinate-based operations.\nAdditionally, the terra package implements raster algebra, enabling users to perform mathematical operations on raster data. This capability is particularly useful when working with multiple overlapping rasters or when applying mathematical transformations to derive new raster layers.\nBy encompassing such a comprehensive set of functions for raster data manipulation, the terra package empowers users to efficiently work with raster datasets, perform complex operations, and integrate spatial analysis seamlessly into their R workflow."
  },
  {
    "objectID": "ch6.html#data-structure-in-terra",
    "href": "ch6.html#data-structure-in-terra",
    "title": "\n9  Raster processing\n",
    "section": "\n9.3 Data structure in terra",
    "text": "9.3 Data structure in terra\nThe terra package is built upon several key classes, with SpatRaster and SpatVector being the most significant ones. These classes serve as the foundation for representing and manipulating spatial raster and vector data, respectively.\n\n9.3.1 spatRaster\nA SpatRaster is a data structure used to represent multi-layer raster data. It contains essential parameters that describe the raster, including the number of columns and rows, the spatial extent (bounding box) that defines its coverage, and the coordinate reference system (map projection) used to define its spatial coordinates.\nApart from these fundamental parameters, a SpatRaster object can also store information about the file(s) associated with the raster cell values. This allows for the possibility of storing the cell values either in memory or in external files. By supporting both options, SpatRaster provides flexibility in handling raster data, enabling efficient memory management for large datasets.\nWhen the raster cell values are stored in files, the SpatRaster object can hold metadata related to the file(s), such as file paths, data formats, compression methods, and other properties. This information facilitates efficient access and manipulation of raster data from external sources.\nIn summary, a SpatRaster represents multi-layer raster data and contains essential parameters to describe its dimensions, spatial extent, and coordinate reference system. It also allows for the storage of raster cell values either in memory or in external files, enabling efficient handling of raster data and supporting various data management scenarios.\nThese classes, SpatRaster and SpatVector, are fundamental to the terra package and serve as the primary means of representing and manipulating spatial raster and vector data, respectively. They provide a consistent and efficient framework for handling diverse spatial analysis tasks within the R environment.\n\n9.3.2 spatVector\nA SpatVector in the terra package represents vector data, which encompasses geometries such as points, lines, or polygons, along with their associated tabular attributes.\nThe SpatVector class provides a versatile structure for storing and analyzing vector data within the terra package. It can handle different types of geometries, allowing you to work with point data (e.g., locations of sampling sites), line data (e.g., roads, rivers), or polygon data (e.g., land parcels, administrative boundaries).\nIn addition to geometric information, SpatVector objects also store attribute data associated with the vector features. This tabular information could include attributes such as names, population counts, categories, or any other relevant information pertaining to the features.\nBy combining both geometric and attribute data, SpatVector objects enable you to perform various operations and analyses on vector data. You can perform spatial queries, spatial joins, attribute filtering, and calculations based on the geometries and their attributes."
  },
  {
    "objectID": "ch6.html#tidyterra-package",
    "href": "ch6.html#tidyterra-package",
    "title": "\n9  Raster processing\n",
    "section": "\n9.4 tidyterra package",
    "text": "9.4 tidyterra package\ntidyterra is a package that extends the functionality of the terra package by incorporating principles and methods from the tidyverse ecosystem. It enhances the data manipulation and analysis capabilities of SpatRaster and SpatVector objects, allowing for a seamless integration of spatial data into the tidyverse workflow.\nWith tidyterra, you can leverage the power of popular tidyverse packages like dplyr, tidyr, and ggplot2 for working with SpatRaster and SpatVector objects. It provides a set of methods and functions that align with the tidyverse philosophy, allowing for consistent and intuitive data manipulation.\nFor example, you can use dplyr functions like filter(), mutate(), and select() to filter, transform, and select specific subsets of your spatial data. The gather() and spread() functions from tidyr can be employed for reshaping your data into a tidy format.\nFurthermore, tidyterra includes specialized functions such as as_tibble() to convert SpatRaster and SpatVector objects into tidy tibbles, enabling smooth integration with other tidyverse functions and pipelines. This integration makes it easier to perform data wrangling, aggregation, and analysis on spatial datasets.\nIn addition to data manipulation, tidyterra also provides geom_spat*() functions for plotting SpatRaster and SpatVector objects using ggplot2. This allows for the creation of visually appealing and informative plots, leveraging the flexibility and customization options offered by ggplot2."
  },
  {
    "objectID": "ch6.html#creating-spatraster",
    "href": "ch6.html#creating-spatraster",
    "title": "\n9  Raster processing\n",
    "section": "\n9.5 Creating spatRaster",
    "text": "9.5 Creating spatRaster\nTo generate a SpatRaster from scratch using the rast() function in the terra package is a simple task. The default settings create a global raster data structure with a longitude/latitude coordinate reference system (CRS) and 1 by 1 degree cells. However, you have the option to modify these settings by providing additional arguments to the function or changing the parameters after creating the object. First, make sure the terra package is installed and loaded in your R environment:\n\nCoderequire(terra)\nrequire(tidyterra)\nrequire(tidyverse)\n\n\nTo create a SpatRaster from scratch with custom settings, you can specify arguments such as xmin, nrow, ncol, and crs when calling the rast() function. For example:\n\nCodemy.rast &lt;- rast(\n  xmin = -180, ymin = -90, xmax = 180, ymax = 90, \n  nrow = 180, \n  ncol = 360, \n  crs = \"+proj=longlat +datum=WGS84\")\n\n\nThis example creates a SpatRaster object covering the entire globe with a resolution of 1 by 1 degree and a WGS84 (longitude/latitude) CRS.\n\nCodemy.rast\n\nclass       : SpatRaster \ndimensions  : 180, 360, 1  (nrow, ncol, nlyr)\nresolution  : 1, 1  (x, y)\nextent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=longlat +datum=WGS84 +no_defs \n\n\nTo transform a SpatRaster object to a different CRS (projection), you can use the crs() function. It allows you to reproject the SpatRaster to a new CRS while preserving the underlying cell values. For example:\n\nCodemy.rast.proj = my.rast\ncrs(my.rast.proj) &lt;- \"+proj=utm +zone=37 +datum=WGS84\"\n\nmy.rast.proj\n\nclass       : SpatRaster \ndimensions  : 180, 360, 1  (nrow, ncol, nlyr)\nresolution  : 1, 1  (x, y)\nextent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=utm +zone=37 +datum=WGS84 +units=m +no_defs \n\n\nThis will transform the SpatRaster object r to a new CRS specified by the Universal Transverse Mercator (UTM) projection with zone 37.\nIn the example provided above, the my.rast object represents a skeleton or framework of a SpatRaster. It contains information about the number of rows and columns, as well as the geographic location of the raster. However, at this stage, there are no actual cell values associated with the my.rast object.\nlet’s first use ncell function to compute total number of cells in the my.rast raster.\n\nCodemy.rast |&gt;\n  ncell()\n\n[1] 64800\n\n\nThen generate the random values of sea surface temprature equivalent to the number of cell in the my.rast spatRaster object\n\nCodemy.values = rnorm(\n  n = my.rast |&gt; ncell(), \n  mean = 25, \n  sd = 1.8\n  )\n\n\nThen fill the sst values we just generated into the cells of the spatRaster object as highlighed in the code;\n\nCodemy.rast.sst = my.rast\nmy.rast.sst[] = my.values\n\n\nIn a nutshell, the The code my.rast.sst = my.rast; my.rast.sst[] = my.values; my.rast.sst creates a new SpatRaster object named my.rast.sst by assigning the my.rast object to it. Then, it assigns the values stored in the my.values variable to the cell values of the my.rast.sst object using the empty square brackets ([]) notation.\n\nCodemy.rast.sst\n\nclass       : SpatRaster \ndimensions  : 180, 360, 1  (nrow, ncol, nlyr)\nresolution  : 1, 1  (x, y)\nextent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=longlat +datum=WGS84 +no_defs \nsource(s)   : memory\nname        :    lyr.1 \nmin value   : 17.01184 \nmax value   : 32.96594 \n\n\nFinally, the code retrieves and returns the my.rast.sst object. This sequence of operations ensures that the my.rast.sst object has the same spatial properties as my.rast, but with the cell values replaced by the values in my.values."
  },
  {
    "objectID": "ch6.html#reading-sparaster-file",
    "href": "ch6.html#reading-sparaster-file",
    "title": "\n9  Raster processing\n",
    "section": "\n9.6 Reading spaRaster file",
    "text": "9.6 Reading spaRaster file\nWhile creating a SpatRaster object from scratch using the rast() function is useful, in many cases, you will need to import raster data from your working directory or external sources. To accomplish this, you can utilize the rast() function with appropriate arguments to read and import raster data. The function allows you to specify the file path or name of the raster file you want to import.\nBy providing the necessary information, such as the file format, location, and other relevant details, the rast() function will load the raster data into a SpatRaster object. This enables you to access and manipulate the imported raster data within your R environment for further analysis, visualization, or any other required tasks. Importing raster objects using the rast() function provides a convenient way to incorporate existing raster data into your workflow.\n\nCodebathy = rast(\"data/wioregio-7753.asc\")\n\nbathy\n\nclass       : SpatRaster \ndimensions  : 3181, 2641, 1  (nrow, ncol, nlyr)\nresolution  : 0.01666667, 0.01666667  (x, y)\nextent      : 25.99167, 70.00834, -40.00833, 13.00834  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 \nsource      : wioregio-7753.asc \nname        : wioregio-7753 \n\n\n\nCodebathy  |&gt;\n  class()\n\n[1] \"SpatRaster\"\nattr(,\"package\")\n[1] \"terra\"\n\n\n\nCodecrop_extent &lt;- terra::ext(30,65,-30,10)\n\n\n\nCodebath.wio = bathy |&gt;\n  terra::crop(crop_extent)\n\n\n\nCodebath.wio\n\nclass       : SpatRaster \ndimensions  : 2400, 2100, 1  (nrow, ncol, nlyr)\nresolution  : 0.01666667, 0.01666667  (x, y)\nextent      : 29.99167, 64.99167, -30.00833, 9.991677  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 \nsource(s)   : memory\nname        : wioregio-7753 \nmin value   :         -6756 \nmax value   :          5677 \n\n\n\nCodeggplot()+\n  tidyterra::geom_spatraster(data = bath.wio)+\n  tidyterra::scale_fill_hypso_tint_c(\n    palette = \"gmt_globe\",\n    labels = scales::label_number(),\n    breaks = seq(-6000, 6000,3000), \n    # limits = c(-6000, 6500),\n    guide = guide_colorbar(\n      direction = \"horizontal\",\n      title = \"Bathymetry & altitude (meters)\",\n      title.position = \"top\",\n      barwidth = 12, barheight = 0.8\n    ))+\n  coord_sf(expand = FALSE) +\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"top\")\n\n\n\nFIGURE 9.1. Bathymetry and altitude in the WIO region"
  },
  {
    "objectID": "ch6.html#spatraster-manipulation-with-tidyterra",
    "href": "ch6.html#spatraster-manipulation-with-tidyterra",
    "title": "\n9  Raster processing\n",
    "section": "\n9.7 spatRaster manipulation with tidyterra",
    "text": "9.7 spatRaster manipulation with tidyterra\n\n9.7.1 rename\n\nCodebath.depth = bath.wio %&gt;% \n  tidyterra::rename(depth = 1)\n\nbath.depth\n\nclass       : SpatRaster \ndimensions  : 2400, 2100, 1  (nrow, ncol, nlyr)\nresolution  : 0.01666667, 0.01666667  (x, y)\nextent      : 29.99167, 64.99167, -30.00833, 9.991677  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 \nsource(s)   : memory\nname        : depth \nmin value   : -6756 \nmax value   :  5677 \n\n\n\n9.7.2 filter\n\nCodeocean = bath.depth %&gt;% \n  tidyterra::filter(depth &lt;= 0)\n\nocean\n\nclass       : SpatRaster \ndimensions  : 2400, 2100, 1  (nrow, ncol, nlyr)\nresolution  : 0.01666667, 0.01666667  (x, y)\nextent      : 29.99167, 64.99167, -30.00833, 9.991677  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 \nsource(s)   : memory\nname        : depth \nmin value   : -6756 \nmax value   :     0 \n\n\n\n9.7.3 mutate\n\nCodeocean.depth = ocean %&gt;% \n  tidyterra::mutate(bathy = depth * -1)\n\nocean.depth\n\nclass       : SpatRaster \ndimensions  : 2400, 2100, 2  (nrow, ncol, nlyr)\nresolution  : 0.01666667, 0.01666667  (x, y)\nextent      : 29.99167, 64.99167, -30.00833, 9.991677  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 \nsource(s)   : memory\nnames       : depth, bathy \nmin values  : -6756,     0 \nmax values  :     0,  6756 \n\n\n\n9.7.4 select\n\nCodeocean.depth  %&gt;% \n  tidyterra::select(depth)\n\nclass       : SpatRaster \ndimensions  : 2400, 2100, 1  (nrow, ncol, nlyr)\nresolution  : 0.01666667, 0.01666667  (x, y)\nextent      : 29.99167, 64.99167, -30.00833, 9.991677  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 \nsource(s)   : memory\nname        : depth \nmin value   : -6756 \nmax value   :     0 \n\n\n\n9.7.5 pull\n\nCodeocean.depth %&gt;% \n  tidyterra::select(bathy) %&gt;% \n  tidyterra::pull()\n\n    [1]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n   [15]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n   [29]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n   [43]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n   [57]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n   [71]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n   [85]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n   [99]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [113]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [127]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [141]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [155]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [169]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [183]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [197]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [211]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [225]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [239]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [253]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [267]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [281]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [295]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [309]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [323]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [337]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [351]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [365]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [379]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [393]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [407]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [421]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [435]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [449]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [463]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [477]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [491]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [505]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [519]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [533]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [547]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [561]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [575]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [589]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [603]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [617]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [631]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [645]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [659]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [673]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [687]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [701]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [715]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [729]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [743]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [757]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [771]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [785]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [799]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [813]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [827]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [841]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [855]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [869]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [883]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [897]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [911]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [925]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [939]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [953]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [967]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [981]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n  [995]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1009]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1023]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1037]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1051]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1065]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1079]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1093]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1107]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1135]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1149]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1163]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1177]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1191]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1205]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1219]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1233]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [1247]   NA   NA   NA   NA   NA   NA   NA   NA    6   46   49   37   39   44\n [1261]   48   46   34   24   31   41   44   44   42   40   42   49   62   77\n [1275]   89  104  124  145  161  168  157  140  136  140  172  206  233  253\n [1289]  267  281  306  343  406  478  553  623  684  731  754  780  838  909\n [1303]  970 1018 1007  998 1022 1070 1144 1237 1346 1465 1587 1703 1804 1875\n [1317] 1902 1893 1856 1809 1770 1747 1737 1769 1871 2014 2197 2415 2685 2974\n [1331] 3226 3439 3498 3535 3605 3684 3795 3869 3893 3879 3935 3983 4036 4080\n [1345] 4120 4152 4174 4188 4193 4194 4195 4197 4202 4210 4219 4230 4237 4249\n [1359] 4268 4292 4317 4346 4377 4408 4435 4454 4457 4447 4421 4390 4361 4340\n [1373] 4339 4347 4362 4382 4412 4443 4472 4495 4502 4498 4484 4464 4442 4423\n [1387] 4411 4405 4409 4418 4428 4436 4436 4429 4411 4394 4382 4380 4391 4406\n [1401] 4417 4420 4406 4383 4353 4326 4309 4305 4313 4328 4342 4355 4362 4369\n [1415] 4379 4390 4401 4411 4416 4419 4422 4419 4406 4390 4372 4361 4359 4370\n [1429] 4394 4425 4456 4485 4507 4524 4534 4538 4532 4521 4510 4490 4474 4457\n [1443] 4446 4444 4453 4466 4477 4487 4504 4517 4522 4524 4536 4548 4553 4557\n [1457] 4546 4540 4543 4549 4549 4548 4550 4554 4557 4557 4554 4545 4536 4529\n [1471] 4536 4551 4576 4604 4632 4653 4662 4662 4663 4665 4676 4687 4689 4685\n [1485] 4672 4655 4634 4619 4616 4624 4640 4659 4670 4678 4677 4675 4673 4678\n [1499] 4688 4702 4711 4712 4696 4665 4612 4552 4510 4474 4464 4455 4444 4428\n [1513] 4407 4376 4330 4278 4229 4176 4119 4055 3995 3934 3882 3835 3795 3760\n [1527] 3732 3710 3698 3693 3696 3699 3697 3678 3634 3590 3599 3623 3667 3703\n [1541] 3731 3737 3729 3682 3571 3456 3394 3378 3431 3455 3299 3141 3118 3149\n [1555] 3117 3121 3195 3312 3441 3583 3722 3854 3970 4073 4160 4238 4309 4368\n [1569] 4411 4432 4422 4386 4326 4251 4171 4098 4042 4009 4008 4037 4100 4180\n [1583] 4265 4345 4409 4461 4503 4533 4548 4555 4558 4553 4534 4503 4457 4404\n [1597] 4348 4291 4234 4172 4096 4001 3879 3743 3604 3487 3413 3409 3503 3607\n [1611] 3648 3629 3555 3494 3583 3668 3638 3583 3620 3701 3936 4128 4182 4158\n [1625] 4126 4054 3913 3732 3536 3343 3179 3055 2987 2973 3013 3093 3208 3339\n [1639] 3475 3614 3745 3846 3879 3863 3794 3738 3720 3761 3839 3914 3962 3979\n [1653] 4099 4173 4096 3956 3770 3584 3429 3317 3236 3192 3157 3147 3149 3163\n [1667] 3177 3173 3203 3198 3244 3255 3210 3159 3124 3058 2949 2777 2613 2422\n [1681] 2329 2277 2379 2552 2779 3044 3347 3605 3741 3771 3700 3618 3606 3663\n [1695] 3772 3906 3972 4009 3932 3838 3700 3581 3450 3349 3274 3225 3190 3169\n [1709] 3163 3181 3249 3276 3043 2772 2552 2425 2465 2604 2810 3056 3310 3550\n [1723] 3730 3859 3935 3972 3983 3975 3951 3923 3891 3874 3885 3922 3984 4056\n [1737] 4118 4165 4183 4181 4162 4122 4072 4003 3925 3844 3765 3691 3618 3556\n [1751] 3507 3474 3460 3460 3474 3494 3513 3527 3531 3531 3533 3548 3585 3642\n [1765] 3713 3790 3862 3923 3959 3979 3982 3981 3982 3992 4014 4044 4078 4108\n [1779] 4128 4139 4143 4146 4154 4166 4173 4190 4228 4273 4299 4323 4348 4369\n [1793] 4396 4415 4428 4443 4482 4546 4662 4769 4783 4801 4910 5040 5130 5190\n [1807] 5180 5137 5060 4957 4811 4646 4464 4293 4163 4080 4077 4121 4199 4275\n [1821] 4281 4275 4282 4302 4344 4388 4417 4440 4473 4500 4520 4529 4527 4520\n [1835] 4519 4513 4496 4458 4393 4305 4199 4124 4127 4178 4247 4311 4346 4361\n [1849] 4362 4349 4313 4300 4347 4396 4388 4324 4214 4089 3990 3937 3951 4014\n [1863] 4109 4223 4340 4450 4543 4610 4644 4652 4640 4619 4598 4585 4587 4602\n [1877] 4624 4647 4657 4655 4628 4587 4532 4475 4423 4389 4379 4404 4460 4509\n [1891] 4534 4531 4534 4532 4528 4527 4536 4557 4592 4632 4669 4699 4717 4719\n [1905] 4703 4670 4625 4572 4516 4461 4413 4378 4365 4370 4391 4419 4445 4463\n [1919] 4467 4456 4431 4400 4376 4359 4363 4375 4396 4414 4423 4422 4411 4394\n [1933] 4379 4367 4365 4368 4375 4383 4387 4389 4386 4381 4375 4372 4373 4379\n [1947] 4390 4404 4419 4433 4444 4454 4463 4471 4477 4479 4478 4473 4464 4452\n [1961] 4440 4429 4418 4410 4408 4410 4415 4422 4428 4435 4442 4449 4455 4460\n [1975] 4464 4468 4470 4472 4474 4475 4477 4478 4478 4477 4473 4469 4467 4466\n [1989] 4465 4464 4463 4462 4462 4462 4461 4460 4458 4455 4452 4449 4447 4445\n [2003] 4446 4449 4453 4455 4456 4455 4452 4449 4446 4443 4441 4439 4437 4435\n [2017] 4435 4436 4436 4435 4436 4437 4439 4440 4441 4442 4443 4443 4441 4437\n [2031] 4433 4429 4425 4421 4420 4420 4421 4422 4423 4425 4426 4427 4427 4427\n [2045] 4430 4433 4433 4433 4431 4430 4431 4432 4433 4433 4435 4436 4436 4436\n [2059] 4436 4436 4435 4434 4432 4429 4424 4419 4417 4417 4420 4424 4427 4429\n [2073] 4431 4431 4430 4428 4428 4428 4427 4427 4430 4435 4440 4443 4443 4442\n [2087] 4442 4442 4442 4441 4441 4442 4443 4444 4443 4442 4440 4439 4441 4444\n [2101]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2115]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2129]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2143]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2157]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2171]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2185]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2199]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2213]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2227]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2241]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2255]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2269]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2283]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2297]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2311]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2325]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2339]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2353]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2367]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2381]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2395]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2409]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2423]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2437]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2451]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2465]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2479]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2493]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2507]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2521]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2535]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2549]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2563]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2577]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2591]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2605]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2619]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2633]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2647]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2661]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2675]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2689]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2703]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2717]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2731]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2745]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2759]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2773]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2787]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2801]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2815]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2829]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2843]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2857]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2871]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2885]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2899]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2913]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2927]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2941]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2955]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2969]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2983]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2997]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3011]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3025]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3039]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3053]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3067]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3081]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3095]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3109]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3123]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3137]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3165]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3179]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3193]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3207]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3221]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3235]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3249]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3263]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3277]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3291]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3305]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3319]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3333]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3347]   NA   NA   NA   NA   NA   NA   NA   NA    9   40   45   41   42   46\n [3361]   46   42   33   27   33   42   45   44   40   40   46   60   79   98\n [3375]  110  122  138  155  168  172  165  154  154  166  198  235  265  289\n [3389]  304  320  344  384  444  516  592  661  718  757  779  804  850  905\n [3403]  954  988 1002 1015 1054 1115 1198 1299 1414 1535 1655 1767 1861 1926\n [3417] 1953 1944 1912 1878 1870 1881 1912 1984 2118 2278 2427 2598 2818 3053\n [3431] 3257 3412 3509 3583 3669 3763 3854 3918 3941 3948 3974 4011 4051 4090\n [3445] 4127 4157 4176 4188 4192 4194 4195 4198 4204 4211 4218 4226 4233 4245\n [3459] 4263 4286 4311 4338 4366 4395 4420 4437 4442 4435 4416 4392 4370 4357\n [3473] 4356 4366 4384 4409 4443 4478 4505 4522 4526 4522 4511 4496 4478 4462\n [3487] 4448 4437 4433 4433 4435 4437 4435 4427 4414 4402 4395 4396 4405 4416\n [3501] 4421 4417 4401 4380 4358 4344 4340 4346 4359 4373 4384 4390 4393 4396\n [3515] 4402 4411 4419 4426 4430 4431 4428 4419 4402 4382 4362 4350 4348 4359\n [3529] 4383 4414 4446 4475 4499 4516 4528 4536 4541 4541 4533 4516 4488 4463\n [3543] 4454 4458 4471 4487 4502 4518 4538 4553 4559 4560 4562 4562 4556 4548\n [3557] 4543 4544 4555 4566 4573 4574 4570 4566 4566 4567 4565 4559 4552 4549\n [3571] 4556 4573 4596 4621 4643 4659 4666 4668 4672 4679 4692 4704 4709 4707\n [3585] 4696 4680 4658 4639 4629 4629 4638 4652 4663 4672 4676 4678 4682 4691\n [3599] 4707 4724 4738 4742 4730 4702 4657 4605 4557 4518 4493 4477 4467 4455\n [3613] 4437 4408 4369 4330 4298 4265 4219 4161 4093 4024 3963 3911 3867 3830\n [3627] 3800 3778 3767 3766 3775 3785 3787 3771 3736 3707 3717 3750 3792 3825\n [3641] 3838 3834 3812 3747 3627 3507 3458 3462 3497 3484 3374 3245 3180 3161\n [3655] 3155 3179 3249 3356 3481 3618 3756 3887 4005 4109 4199 4279 4350 4410\n [3669] 4451 4469 4455 4413 4348 4270 4189 4118 4066 4040 4045 4080 4145 4227\n [3683] 4311 4387 4448 4494 4530 4551 4555 4547 4536 4519 4490 4448 4395 4335\n [3697] 4274 4214 4156 4094 4018 3920 3791 3640 3485 3345 3253 3256 3386 3531\n [3711] 3576 3541 3473 3440 3498 3571 3591 3595 3643 3754 3937 4109 4205 4234\n [3725] 4224 4171 4069 3929 3770 3611 3470 3361 3291 3267 3286 3343 3433 3546\n [3739] 3669 3792 3898 3971 3996 3982 3940 3903 3896 3931 4000 4063 4078 4063\n [3753] 4059 4049 4038 3983 3870 3733 3615 3527 3468 3435 3416 3414 3422 3436\n [3767] 3451 3467 3493 3509 3508 3481 3429 3368 3312 3255 3188 3106 3002 2879\n [3781] 2745 2661 2679 2785 2951 3157 3381 3572 3686 3717 3678 3621 3594 3616\n [3795] 3683 3766 3826 3847 3811 3737 3636 3527 3419 3331 3272 3240 3222 3207\n [3809] 3191 3181 3182 3116 2920 2665 2451 2338 2370 2506 2701 2943 3224 3491\n [3823] 3698 3838 3921 3962 3977 3974 3958 3935 3907 3890 3895 3926 3981 4047\n [3837] 4106 4145 4154 4137 4098 4042 3967 3887 3808 3737 3674 3621 3571 3529\n [3851] 3495 3471 3460 3459 3468 3480 3492 3499 3498 3494 3494 3507 3541 3596\n [3865] 3666 3744 3817 3878 3920 3946 3958 3965 3974 3989 4012 4039 4067 4090\n [3879] 4102 4105 4103 4102 4107 4114 4122 4138 4168 4203 4232 4256 4280 4304\n [3893] 4326 4344 4356 4374 4413 4482 4583 4667 4693 4717 4794 4892 4970 5012\n [3907] 5007 4970 4909 4824 4711 4577 4433 4298 4192 4134 4138 4186 4255 4310\n [3921] 4317 4302 4293 4299 4323 4351 4374 4396 4424 4451 4472 4487 4495 4501\n [3935] 4509 4512 4499 4460 4387 4278 4149 4059 4070 4144 4237 4316 4359 4376\n [3949] 4376 4351 4300 4283 4353 4435 4450 4384 4244 4083 3954 3893 3917 4000\n [3963] 4110 4227 4339 4438 4519 4576 4605 4609 4595 4572 4550 4538 4542 4563\n [3977] 4599 4637 4666 4677 4663 4626 4568 4498 4425 4359 4319 4336 4426 4526\n [3991] 4559 4555 4551 4547 4542 4538 4540 4553 4580 4614 4649 4679 4697 4701\n [4005] 4687 4657 4615 4564 4510 4457 4411 4378 4364 4369 4388 4414 4439 4456\n [4019] 4459 4446 4421 4392 4368 4355 4361 4378 4400 4420 4430 4431 4423 4408\n [4033] 4393 4380 4374 4374 4378 4383 4385 4385 4382 4377 4372 4369 4371 4378\n [4047] 4389 4403 4418 4431 4442 4451 4460 4467 4474 4478 4477 4472 4463 4452\n [4061] 4440 4429 4419 4412 4411 4413 4419 4426 4432 4439 4446 4453 4458 4463\n [4075] 4467 4471 4473 4475 4477 4479 4480 4481 4480 4478 4474 4470 4468 4467\n [4089] 4466 4465 4464 4463 4462 4462 4462 4460 4459 4456 4455 4453 4452 4451\n [4103] 4452 4454 4458 4460 4460 4458 4454 4451 4448 4445 4442 4439 4435 4432\n [4117] 4433 4434 4434 4435 4436 4438 4438 4438 4438 4438 4437 4436 4433 4430\n [4131] 4427 4424 4421 4419 4419 4420 4422 4423 4425 4427 4429 4430 4430 4430\n [4145] 4432 4433 4433 4432 4431 4431 4432 4433 4434 4436 4437 4439 4439 4439\n [4159] 4439 4439 4438 4437 4435 4431 4427 4422 4420 4419 4421 4424 4427 4430\n [4173] 4432 4432 4431 4430 4429 4429 4428 4429 4432 4436 4440 4443 4443 4443\n [4187] 4442 4442 4443 4443 4443 4444 4445 4446 4445 4443 4441 4440 4443 4445\n [4201]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4215]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4229]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4243]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4257]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4271]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4285]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4299]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4313]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4327]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4341]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4355]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4369]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4383]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4397]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4411]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4425]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4439]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4453]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4467]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4481]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4495]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4509]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4523]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4537]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4551]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4565]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4579]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4593]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4607]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4621]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4635]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4649]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4663]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4677]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4691]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4705]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4719]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4733]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4747]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4761]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4775]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4789]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4803]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4817]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4831]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4845]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4859]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4873]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4887]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4901]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4915]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4929]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4943]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4957]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4971]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4985]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4999]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5013]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5027]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5041]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5055]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5069]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5083]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5097]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5111]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5125]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5139]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5153]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5167]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5181]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5195]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5209]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5223]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5237]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5251]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5265]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5279]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5293]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5307]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5321]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5335]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5349]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5363]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5377]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5391]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5405]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5419]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5433]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5447]   NA   NA   NA   NA   NA   NA   NA   NA   24   37   43   42   46   49\n [5461]   47   41   33   28   35   44   45   43   39   39   50   68   94  118\n [5475]  127  134  146  160  170  177  176  175  182  198  229  266  296  323\n [5489]  340  359  382  421  480  553  628  698  752  788  805  820  857  900\n [5503]  941  972 1017 1054 1113 1182 1272 1376 1495 1615 1734 1841 1934 1999\n [5517] 2035 2031 2003 1967 1990 2032 2088 2181 2345 2534 2635 2755 2938 3128\n [5531] 3277 3389 3525 3639 3758 3864 3942 3997 4012 4025 4026 4049 4072 4104\n [5545] 4135 4161 4176 4185 4190 4193 4196 4200 4206 4210 4210 4211 4216 4228\n [5559] 4247 4271 4295 4320 4345 4370 4393 4410 4419 4418 4407 4392 4380 4373\n [5573] 4375 4387 4406 4434 4470 4506 4527 4540 4542 4539 4532 4523 4511 4497\n [5587] 4482 4467 4454 4446 4442 4440 4436 4428 4417 4407 4403 4405 4411 4416\n [5601] 4412 4402 4382 4364 4351 4350 4360 4379 4397 4413 4419 4421 4419 4419\n [5615] 4422 4428 4434 4438 4440 4439 4430 4416 4393 4369 4349 4337 4337 4349\n [5629] 4374 4406 4438 4468 4490 4507 4518 4527 4538 4551 4550 4545 4511 4477\n [5643] 4473 4478 4491 4509 4527 4548 4572 4591 4594 4590 4583 4572 4553 4535\n [5657] 4536 4546 4566 4586 4599 4602 4592 4579 4578 4579 4576 4575 4569 4569\n [5671] 4580 4599 4620 4640 4657 4668 4671 4672 4675 4684 4698 4713 4719 4719\n [5685] 4710 4694 4671 4648 4630 4622 4624 4634 4645 4656 4663 4671 4679 4692\n [5699] 4711 4733 4750 4759 4753 4735 4702 4664 4620 4580 4545 4515 4503 4489\n [5713] 4467 4439 4401 4371 4358 4346 4308 4258 4182 4108 4045 3993 3949 3913\n [5727] 3883 3861 3852 3852 3868 3884 3892 3887 3863 3843 3866 3901 3940 3963\n [5741] 3955 3931 3905 3850 3728 3601 3593 3593 3608 3559 3457 3323 3230 3170\n [5755] 3179 3221 3292 3391 3511 3644 3779 3909 4025 4128 4219 4299 4373 4433\n [5769] 4475 4492 4475 4430 4360 4279 4199 4130 4085 4066 4078 4118 4189 4275\n [5783] 4362 4439 4497 4534 4565 4572 4558 4531 4506 4475 4435 4384 4322 4256\n [5797] 4192 4131 4075 4016 3949 3860 3737 3584 3425 3268 3159 3125 3302 3492\n [5811] 3509 3470 3417 3392 3443 3517 3563 3616 3686 3807 3952 4105 4208 4267\n [5825] 4286 4263 4201 4108 3992 3873 3760 3669 3603 3572 3573 3608 3669 3752\n [5839] 3850 3947 4027 4082 4091 4076 4038 4004 3994 4021 4091 4181 4195 4173\n [5853] 4070 3949 3997 4007 3930 3813 3732 3676 3644 3636 3636 3651 3674 3708\n [5867] 3745 3793 3826 3854 3793 3718 3642 3571 3510 3471 3436 3426 3374 3332\n [5881] 3149 3023 2978 3022 3121 3259 3414 3549 3634 3664 3639 3592 3551 3533\n [5895] 3555 3586 3626 3633 3623 3571 3509 3426 3353 3290 3257 3243 3239 3234\n [5909] 3211 3163 3122 2991 2806 2560 2367 2254 2300 2439 2616 2849 3170 3475\n [5923] 3694 3833 3914 3948 3963 3962 3955 3942 3920 3905 3911 3936 3988 4046\n [5937] 4097 4125 4111 4070 4004 3931 3828 3740 3661 3605 3564 3537 3515 3498\n [5951] 3483 3473 3468 3468 3473 3479 3483 3483 3474 3463 3457 3464 3494 3544\n [5965] 3614 3692 3764 3827 3873 3905 3926 3942 3960 3980 4005 4031 4054 4070\n [5979] 4074 4070 4061 4052 4053 4057 4062 4075 4100 4131 4164 4196 4227 4255\n [5993] 4279 4297 4309 4326 4363 4419 4507 4580 4599 4612 4671 4740 4795 4821\n [6007] 4820 4787 4746 4680 4597 4496 4390 4292 4214 4175 4185 4229 4286 4331\n [6021] 4333 4317 4305 4302 4313 4331 4347 4364 4388 4412 4432 4449 4466 4483\n [6035] 4503 4515 4512 4480 4412 4304 4160 4035 4068 4144 4236 4318 4349 4363\n [6049] 4365 4353 4286 4248 4360 4481 4500 4445 4271 4076 3921 3848 3903 4021\n [6063] 4151 4266 4366 4442 4504 4550 4569 4571 4556 4532 4509 4491 4490 4509\n [6077] 4556 4610 4652 4677 4672 4644 4589 4519 4440 4350 4258 4233 4360 4538\n [6091] 4560 4560 4562 4562 4554 4546 4541 4546 4566 4596 4627 4656 4674 4679\n [6105] 4667 4642 4603 4556 4505 4456 4411 4379 4367 4372 4391 4416 4441 4457\n [6119] 4459 4448 4426 4398 4378 4366 4375 4393 4416 4435 4444 4445 4439 4427\n [6133] 4412 4397 4388 4383 4383 4384 4384 4383 4380 4375 4372 4370 4373 4380\n [6147] 4392 4406 4421 4433 4443 4451 4459 4466 4473 4477 4475 4470 4461 4451\n [6161] 4440 4429 4420 4414 4414 4418 4424 4431 4438 4444 4450 4456 4461 4465\n [6175] 4469 4472 4475 4477 4479 4480 4481 4481 4480 4478 4473 4469 4467 4466\n [6189] 4466 4465 4464 4462 4462 4462 4462 4461 4460 4458 4458 4458 4458 4458\n [6203] 4459 4460 4463 4466 4464 4461 4457 4453 4450 4448 4444 4440 4436 4432\n [6217] 4434 4435 4435 4435 4436 4438 4437 4436 4435 4434 4433 4431 4428 4425\n [6231] 4424 4422 4420 4418 4419 4420 4422 4424 4427 4429 4431 4433 4433 4433\n [6245] 4433 4433 4432 4431 4431 4432 4433 4434 4436 4438 4440 4441 4441 4441\n [6259] 4440 4440 4440 4439 4436 4433 4429 4425 4422 4421 4422 4424 4428 4431\n [6273] 4433 4433 4432 4431 4430 4429 4428 4429 4432 4437 4440 4443 4443 4443\n [6287] 4443 4443 4444 4445 4445 4445 4446 4447 4445 4443 4440 4440 4443 4447\n [6301]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6315]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6329]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6343]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6357]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6371]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6385]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6399]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6413]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6427]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6441]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6455]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6469]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6483]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6497]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6511]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6525]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6539]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6553]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6567]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6581]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6595]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6609]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6623]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6637]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6651]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6665]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6679]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6693]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6707]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6721]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6735]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6749]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6763]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6777]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6791]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6805]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6819]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6833]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6847]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6861]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6875]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6889]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6903]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6917]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6931]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6945]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6959]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6973]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6987]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7001]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7015]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7029]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7043]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7057]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7071]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7085]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7099]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7113]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7127]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7141]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7155]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7169]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7183]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7197]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7211]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7225]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7239]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7253]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7267]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7281]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7295]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7309]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7323]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7337]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7351]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7365]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7379]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7393]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7407]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7421]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7435]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7449]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7463]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7477]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7491]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7505]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7519]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7533]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7547]   NA   NA   NA   NA   NA   NA   NA   NA   39   45   45   47   50   51\n [7561]   48   41   34   31   35   42   44   42   39   42   53   74  101  125\n [7575]  138  144  152  160  168  176  185  195  207  226  253  286  317  344\n [7589]  366  387  412  451  508  580  656  728  783  818  834  845  867  903\n [7603]  953 1011 1077 1142 1205 1276 1367 1474 1592 1711 1825 1929 2021 2097\n [7617] 2150 2166 2141 2118 2138 2192 2268 2373 2516 2665 2788 2911 3058 3207\n [7631] 3337 3459 3595 3732 3859 3963 4028 4060 4060 4052 4049 4061 4085 4115\n [7645] 4142 4162 4175 4183 4190 4196 4203 4208 4211 4208 4199 4191 4191 4202\n [7659] 4222 4247 4272 4296 4319 4340 4360 4378 4392 4399 4398 4393 4388 4386\n [7673] 4390 4403 4425 4455 4489 4520 4538 4547 4551 4550 4549 4545 4538 4526\n [7687] 4510 4491 4472 4458 4451 4448 4442 4434 4423 4414 4409 4407 4407 4402\n [7701] 4390 4371 4351 4337 4334 4345 4369 4397 4421 4436 4442 4442 4439 4437\n [7715] 4438 4442 4444 4446 4444 4437 4423 4403 4379 4355 4337 4328 4329 4343\n [7729] 4369 4401 4434 4463 4485 4499 4508 4515 4524 4535 4545 4547 4536 4521\n [7743] 4510 4507 4513 4527 4547 4572 4596 4613 4616 4609 4596 4576 4553 4536\n [7757] 4538 4554 4579 4604 4621 4625 4614 4599 4589 4584 4581 4580 4581 4588\n [7771] 4602 4621 4640 4657 4670 4676 4673 4668 4668 4676 4691 4707 4717 4719\n [7785] 4712 4696 4672 4646 4622 4606 4602 4608 4619 4632 4644 4656 4668 4682\n [7799] 4702 4724 4744 4757 4760 4753 4737 4713 4682 4648 4613 4581 4555 4528\n [7813] 4496 4460 4426 4403 4398 4394 4366 4317 4247 4176 4118 4074 4038 4008\n [7827] 3981 3962 3953 3957 3972 3991 4004 4008 4002 4005 4029 4062 4085 4089\n [7841] 4066 4031 3996 3949 3881 3826 3817 3818 3782 3697 3562 3413 3293 3221\n [7855] 3212 3249 3317 3412 3529 3659 3790 3917 4031 4133 4225 4307 4382 4444\n [7869] 4487 4503 4486 4438 4366 4285 4207 4143 4104 4093 4111 4159 4233 4323\n [7883] 4415 4497 4560 4599 4612 4600 4566 4521 4477 4432 4380 4319 4251 4180\n [7897] 4112 4051 3997 3945 3890 3819 3722 3593 3438 3285 3176 3157 3257 3376\n [7911] 3417 3404 3379 3376 3411 3469 3530 3601 3688 3803 3935 4070 4182 4265\n [7925] 4312 4323 4300 4250 4177 4096 4014 3943 3887 3853 3841 3854 3889 3943\n [7939] 4007 4071 4120 4145 4139 4112 4071 4035 4018 4031 4083 4158 4230 4241\n [7953] 4139 4034 4020 4017 3934 3835 3772 3754 3756 3774 3801 3838 3884 3940\n [7967] 4000 4059 4096 4095 4029 3934 3837 3752 3682 3635 3608 3596 3570 3514\n [7981] 3392 3278 3217 3220 3270 3351 3445 3529 3586 3605 3585 3541 3490 3450\n [7995] 3434 3435 3450 3458 3453 3425 3383 3330 3281 3244 3227 3226 3231 3235\n [8009] 3226 3195 3127 2988 2765 2517 2324 2229 2261 2386 2571 2829 3169 3495\n [8023] 3717 3847 3914 3940 3943 3941 3943 3943 3935 3928 3936 3963 4008 4056\n [8037] 4092 4097 4057 3979 3874 3758 3646 3554 3490 3454 3440 3442 3451 3462\n [8051] 3472 3479 3485 3488 3491 3490 3486 3476 3459 3442 3430 3431 3455 3500\n [8065] 3565 3638 3710 3774 3825 3863 3893 3917 3942 3968 3995 4021 4039 4049\n [8079] 4048 4037 4023 4008 3999 3996 3999 4011 4034 4067 4105 4146 4186 4222\n [8093] 4251 4273 4290 4310 4342 4388 4446 4493 4515 4531 4564 4604 4639 4658\n [8107] 4658 4638 4605 4555 4491 4416 4338 4268 4217 4197 4210 4248 4292 4326\n [8121] 4335 4328 4318 4312 4313 4320 4330 4343 4361 4380 4399 4419 4442 4469\n [8135] 4499 4523 4532 4515 4463 4375 4262 4173 4160 4195 4249 4296 4320 4328\n [8149] 4330 4319 4295 4305 4385 4475 4500 4438 4278 4079 3908 3836 3920 4081\n [8163] 4233 4350 4421 4464 4499 4525 4539 4540 4528 4507 4483 4459 4442 4453\n [8177] 4505 4571 4622 4650 4653 4633 4592 4538 4472 4371 4229 4154 4251 4404\n [8191] 4498 4540 4558 4563 4558 4548 4540 4540 4553 4576 4603 4628 4644 4649\n [8205] 4640 4619 4586 4545 4499 4454 4414 4385 4375 4381 4400 4425 4449 4465\n [8219] 4468 4460 4442 4422 4405 4398 4404 4419 4438 4454 4462 4463 4456 4445\n [8233] 4432 4419 4408 4399 4394 4390 4387 4385 4382 4378 4377 4378 4383 4392\n [8247] 4404 4418 4430 4440 4448 4456 4463 4469 4474 4476 4474 4469 4461 4451\n [8261] 4441 4431 4424 4419 4420 4425 4431 4438 4444 4449 4454 4458 4463 4467\n [8275] 4470 4473 4475 4477 4478 4479 4479 4479 4478 4475 4472 4468 4466 4465\n [8289] 4465 4465 4464 4462 4462 4463 4463 4462 4461 4460 4461 4464 4465 4466\n [8303] 4466 4466 4468 4469 4468 4465 4461 4457 4453 4450 4447 4443 4440 4439\n [8317] 4439 4439 4438 4436 4436 4435 4434 4433 4433 4433 4432 4430 4428 4425\n [8331] 4424 4422 4421 4420 4420 4421 4422 4425 4427 4430 4433 4435 4436 4437\n [8345] 4437 4436 4434 4433 4433 4434 4435 4436 4437 4439 4441 4443 4443 4443\n [8359] 4442 4441 4440 4438 4437 4434 4431 4427 4424 4422 4422 4424 4428 4432\n [8373] 4434 4435 4434 4431 4429 4428 4427 4428 4432 4436 4439 4442 4443 4443\n [8387] 4444 4445 4445 4446 4445 4445 4445 4444 4443 4440 4439 4440 4444 4447\n [8401]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8415]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8429]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8443]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8457]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8471]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8485]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8499]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8513]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8527]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8541]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8555]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8569]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8583]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8597]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8611]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8625]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8639]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8653]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8667]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8681]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8695]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8709]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8723]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8737]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8751]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8765]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8779]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8793]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8807]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8821]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8835]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8849]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8863]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8877]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8891]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8905]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8919]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8933]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8947]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8961]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8975]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8989]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9003]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9017]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9031]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9045]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9059]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9073]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9087]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9101]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9115]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9129]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9143]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9157]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9171]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9185]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9199]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9213]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9227]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9241]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9255]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9269]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9283]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9297]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9311]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9325]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9339]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9353]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9367]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9381]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9395]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9409]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9423]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9437]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9451]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9465]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9479]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9493]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9507]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9521]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9535]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9549]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9563]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9577]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9591]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9605]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9619]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9633]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9647]   NA   NA   NA   NA   NA   NA   NA    4   48   45   47   50   52   52\n [9661]   48   43   36   32   36   42   42   40   36   40   52   75  104  131\n [9675]  145  152  157  161  164  171  182  201  211  235  260  295  329  362\n [9689]  387  410  433  468  523  595  674  752  811  850  861  865  877  910\n [9703]  978 1067 1153 1243 1306 1377 1473 1583 1699 1816 1923 2021 2109 2193\n [9717] 2271 2322 2288 2262 2290 2362 2444 2540 2660 2779 2916 3045 3179 3310\n [9731] 3434 3561 3697 3837 3961 4058 4106 4117 4094 4061 4058 4066 4096 4128\n [9745] 4150 4166 4176 4184 4194 4203 4215 4221 4219 4209 4188 4169 4166 4174\n [9759] 4196 4223 4250 4274 4293 4310 4328 4347 4367 4383 4390 4393 4393 4396\n [9773] 4402 4416 4442 4472 4503 4529 4544 4551 4556 4559 4563 4563 4560 4550\n [9787] 4531 4509 4485 4468 4463 4462 4457 4448 4435 4422 4414 4407 4399 4385\n [9801] 4362 4337 4316 4305 4312 4334 4371 4410 4437 4453 4459 4457 4454 4451\n [9815] 4451 4452 4452 4450 4443 4431 4412 4389 4365 4344 4330 4325 4330 4345\n [9829] 4372 4404 4437 4465 4485 4497 4503 4505 4510 4515 4533 4545 4555 4561\n [9843] 4549 4538 4535 4541 4557 4583 4606 4625 4626 4617 4601 4581 4556 4540\n [9857] 4545 4564 4590 4618 4635 4643 4631 4614 4600 4590 4585 4584 4588 4599\n [9871] 4616 4637 4652 4666 4674 4678 4667 4657 4654 4661 4677 4696 4709 4714\n [9885] 4708 4693 4669 4640 4611 4588 4582 4585 4598 4613 4630 4644 4656 4668\n [9899] 4685 4704 4724 4742 4752 4757 4756 4749 4733 4711 4680 4648 4610 4571\n [9913] 4527 4483 4448 4423 4425 4425 4397 4353 4285 4222 4176 4150 4129 4112\n [9927] 4089 4069 4061 4066 4082 4102 4116 4127 4130 4144 4165 4196 4198 4193\n [9941] 4155 4113 4082 4055 4033 4032 4028 4032 3944 3834 3655 3484 3350 3268\n [9955] 3243 3269 3329 3420 3535 3664 3793 3917 4029 4130 4221 4304 4382 4446\n [9969] 4492 4510 4492 4443 4372 4290 4218 4159 4129 4124 4149 4200 4278 4370\n [9983] 4465 4553 4618 4660 4656 4628 4574 4512 4456 4398 4336 4266 4190 4111\n [9997] 4039 3974 3922 3877 3836 3790 3728 3640 3496 3354 3248 3210 3247 3308\n[10011] 3341 3348 3349 3360 3388 3436 3489 3560 3648 3754 3879 4010 4124 4225\n[10025] 4295 4341 4352 4343 4308 4264 4212 4165 4122 4092 4072 4068 4078 4101\n[10039] 4129 4157 4169 4165 4132 4087 4029 3988 3972 3978 4019 4063 4181 4258\n[10053] 4146 4046 3992 3983 3838 3746 3723 3769 3810 3858 3912 3973 4043 4120\n[10067] 4195 4259 4290 4281 4208 4107 4000 3903 3819 3754 3707 3670 3631 3577\n[10081] 3498 3422 3380 3372 3388 3424 3469 3512 3542 3551 3526 3481 3425 3371\n[10095] 3336 3317 3320 3326 3325 3310 3283 3246 3215 3191 3183 3186 3190 3198\n[10109] 3199 3190 3121 3008 2742 2482 2299 2215 2253 2382 2573 2832 3202 3556\n[10123] 3752 3862 3907 3919 3908 3908 3931 3952 3956 3952 3967 3992 4035 4074\n[10137] 4094 4077 4006 3891 3742 3583 3462 3367 3320 3303 3317 3347 3387 3428\n[10151] 3462 3489 3506 3515 3517 3512 3500 3482 3459 3435 3418 3413 3432 3469\n[10165] 3528 3596 3665 3729 3782 3826 3861 3891 3922 3952 3981 4007 4023 4030\n[10179] 4023 4008 3988 3967 3949 3937 3936 3947 3974 4011 4056 4105 4155 4202\n[10193] 4238 4268 4291 4314 4343 4374 4410 4437 4450 4457 4476 4496 4519 4532\n[10207] 4535 4522 4496 4455 4403 4343 4282 4231 4199 4192 4210 4246 4286 4320\n[10221] 4336 4337 4332 4324 4319 4318 4320 4327 4338 4353 4369 4390 4417 4451\n[10235] 4488 4524 4547 4553 4525 4476 4399 4339 4296 4285 4291 4298 4304 4300\n[10249] 4306 4307 4319 4352 4413 4472 4486 4430 4287 4104 3929 3837 3971 4175\n[10263] 4328 4447 4484 4493 4508 4517 4526 4525 4517 4499 4478 4447 4405 4390\n[10277] 4455 4537 4586 4609 4615 4606 4577 4542 4513 4443 4248 4086 4193 4325\n[10291] 4441 4502 4538 4556 4555 4545 4536 4532 4541 4556 4579 4599 4611 4615\n[10305] 4608 4592 4566 4533 4494 4455 4421 4396 4389 4395 4415 4440 4462 4478\n[10319] 4481 4476 4463 4450 4437 4433 4437 4449 4463 4476 4481 4481 4474 4463\n[10333] 4451 4440 4429 4419 4409 4401 4397 4393 4390 4388 4389 4393 4400 4409\n[10347] 4422 4435 4444 4451 4458 4464 4470 4475 4478 4478 4476 4470 4462 4453\n[10361] 4445 4437 4431 4428 4430 4435 4442 4448 4452 4455 4458 4461 4465 4469\n[10375] 4472 4474 4475 4476 4477 4477 4477 4476 4475 4473 4471 4468 4466 4464\n[10389] 4464 4464 4463 4462 4462 4463 4464 4464 4463 4462 4464 4468 4470 4472\n[10403] 4471 4471 4472 4472 4471 4469 4465 4461 4458 4454 4451 4448 4447 4447\n[10417] 4446 4444 4441 4438 4435 4433 4431 4430 4431 4432 4432 4431 4429 4428\n[10431] 4426 4425 4424 4423 4422 4422 4424 4426 4428 4431 4434 4437 4439 4440\n[10445] 4440 4439 4437 4435 4434 4435 4436 4437 4438 4440 4443 4445 4445 4444\n[10459] 4443 4441 4439 4437 4436 4434 4432 4429 4426 4424 4424 4426 4430 4434\n[10473] 4436 4437 4435 4432 4429 4427 4426 4427 4430 4434 4437 4440 4442 4443\n[10487] 4445 4446 4446 4446 4445 4443 4442 4441 4439 4437 4436 4438 4444 4449\n[10501]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10515]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10529]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10543]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10557]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10571]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10585]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10599]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10613]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10627]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10641]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10655]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10669]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10683]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10697]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10711]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10725]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10739]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10753]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10767]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10781]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10795]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10809]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10823]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10837]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10851]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10865]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10879]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10893]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10907]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10921]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10935]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10949]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10963]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10977]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10991]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11005]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11019]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11033]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11047]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11061]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11075]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11089]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11103]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11117]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11131]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11145]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11159]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11173]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11187]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11201]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11215]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11229]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11243]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11257]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11271]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11285]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11299]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11313]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11327]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11341]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11355]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11369]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11383]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11397]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11411]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11425]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11439]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11453]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11467]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11481]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11495]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11509]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11523]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11537]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11551]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11565]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11579]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11593]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11607]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11621]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11635]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11649]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11663]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11677]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11691]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11705]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11719]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11733]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[11747]   NA   NA   NA   NA   NA   NA   NA   14   45   47   47   49   50   50\n[11761]   47   42   40   39   40   41   39   35   29   30   45   72  104  134\n[11775]  153  161  165  164  163  161  163  170  184  209  246  290  336  377\n[11789]  407  429  448  477  528  598  681  764  830  871  880  877  885  922\n[11803] 1002 1107 1212 1309 1393 1479 1583 1697 1810 1918 2019 2109 2185 2268\n[11817] 2363 2425 2405 2382 2428 2518 2608 2704 2810 2926 3054 3182 3307 3428\n[11831] 3548 3674 3806 3936 4049 4130 4166 4161 4127 4090 4077 4085 4112 4141\n[11845] 4160 4173 4182 4192 4205 4219 4232 4237 4227 4206 4179 4156 4149 4157\n[11859] 4179 4208 4236 4258 4275 4288 4303 4322 4345 4368 4383 4391 4395 4400\n[11873] 4413 4433 4459 4487 4514 4535 4549 4558 4565 4571 4576 4579 4576 4565\n[11887] 4543 4517 4495 4481 4480 4482 4479 4469 4454 4438 4424 4410 4391 4367\n[11901] 4336 4306 4286 4281 4297 4330 4374 4418 4449 4466 4472 4471 4467 4463\n[11915] 4461 4459 4457 4451 4440 4423 4401 4378 4357 4342 4334 4334 4344 4362\n[11929] 4388 4418 4448 4474 4491 4501 4505 4507 4510 4517 4531 4546 4560 4570\n[11943] 4573 4570 4558 4550 4558 4577 4599 4617 4621 4614 4600 4581 4563 4553\n[11957] 4557 4573 4597 4621 4637 4643 4637 4624 4611 4600 4593 4590 4593 4603\n[11971] 4621 4640 4652 4660 4664 4662 4651 4640 4639 4647 4665 4684 4699 4706\n[11985] 4703 4690 4666 4636 4606 4582 4573 4576 4590 4610 4629 4644 4654 4661\n[11999] 4668 4679 4694 4712 4729 4745 4758 4765 4765 4754 4730 4697 4654 4608\n[12013] 4559 4514 4478 4454 4445 4434 4406 4361 4304 4251 4223 4214 4218 4218\n[12027] 4200 4177 4167 4172 4190 4209 4219 4223 4226 4231 4243 4253 4252 4238\n[12041] 4211 4179 4153 4137 4134 4139 4133 4100 4006 3869 3697 3528 3389 3298\n[12055] 3261 3275 3330 3419 3532 3660 3788 3911 4021 4121 4214 4299 4379 4445\n[12069] 4492 4509 4492 4446 4378 4304 4237 4187 4163 4165 4195 4248 4324 4413\n[12083] 4506 4589 4651 4683 4676 4639 4581 4514 4448 4382 4310 4232 4147 4060\n[12097] 3980 3909 3854 3812 3782 3758 3730 3673 3561 3435 3331 3274 3267 3286\n[12111] 3306 3320 3330 3343 3365 3399 3443 3503 3581 3676 3788 3909 4027 4137\n[12125] 4228 4298 4343 4368 4370 4360 4340 4318 4293 4271 4250 4234 4222 4214\n[12139] 4206 4194 4168 4126 4063 3986 3906 3857 3861 3902 3947 3996 4043 4051\n[12153] 3987 3898 3810 3719 3606 3542 3601 3711 3809 3891 3971 4055 4145 4237\n[12167] 4320 4383 4411 4396 4330 4234 4125 4018 3921 3834 3758 3686 3617 3557\n[12181] 3517 3491 3476 3470 3468 3469 3476 3485 3493 3493 3470 3429 3374 3318\n[12195] 3275 3250 3244 3247 3248 3240 3220 3193 3166 3143 3128 3118 3110 3105\n[12209] 3098 3076 3010 2881 2662 2439 2285 2228 2278 2418 2630 2912 3248 3560\n[12223] 3764 3866 3883 3867 3860 3878 3924 3967 3980 3982 3997 4028 4066 4097\n[12237] 4100 4061 3967 3824 3646 3464 3324 3226 3180 3175 3207 3262 3330 3398\n[12251] 3456 3501 3530 3545 3549 3542 3526 3502 3475 3448 3428 3421 3434 3465\n[12265] 3515 3575 3638 3698 3751 3795 3834 3868 3901 3933 3963 3988 4005 4010\n[12279] 4002 3982 3956 3928 3902 3884 3880 3892 3922 3965 4017 4074 4132 4187\n[12293] 4234 4275 4309 4338 4362 4382 4398 4407 4409 4409 4415 4426 4440 4452\n[12307] 4457 4449 4425 4388 4338 4283 4229 4187 4164 4165 4190 4230 4274 4313\n[12321] 4339 4351 4350 4340 4328 4318 4311 4311 4315 4324 4338 4359 4387 4424\n[12335] 4467 4510 4548 4571 4573 4555 4518 4476 4433 4398 4370 4348 4332 4321\n[12349] 4320 4328 4352 4391 4440 4477 4478 4424 4307 4155 4017 3966 4067 4239\n[12363] 4392 4495 4535 4541 4541 4539 4538 4533 4524 4511 4492 4452 4387 4357\n[12377] 4416 4502 4548 4564 4569 4565 4555 4546 4534 4475 4337 4237 4284 4382\n[12391] 4437 4466 4505 4539 4547 4539 4532 4529 4533 4542 4555 4568 4575 4576\n[12405] 4572 4562 4545 4521 4492 4462 4435 4417 4412 4419 4436 4457 4475 4487\n[12419] 4491 4489 4481 4472 4464 4462 4465 4474 4484 4493 4496 4495 4488 4479\n[12433] 4469 4458 4449 4440 4430 4420 4413 4408 4406 4405 4408 4414 4422 4432\n[12447] 4444 4454 4461 4466 4471 4475 4480 4483 4484 4484 4480 4475 4468 4461\n[12461] 4454 4448 4444 4442 4445 4451 4456 4460 4462 4462 4463 4465 4469 4472\n[12475] 4475 4476 4476 4475 4475 4475 4475 4475 4474 4473 4471 4469 4466 4463\n[12489] 4462 4461 4461 4461 4462 4463 4463 4464 4464 4465 4466 4468 4471 4472\n[12503] 4473 4474 4475 4477 4477 4475 4472 4467 4463 4459 4456 4454 4453 4453\n[12517] 4451 4449 4445 4440 4436 4432 4430 4429 4429 4430 4431 4432 4431 4431\n[12531] 4430 4429 4428 4427 4426 4425 4426 4427 4429 4432 4435 4438 4440 4442\n[12545] 4442 4441 4439 4437 4436 4435 4435 4436 4438 4440 4444 4446 4447 4446\n[12559] 4444 4442 4439 4436 4434 4432 4431 4429 4428 4427 4428 4431 4435 4438\n[12573] 4439 4439 4437 4434 4430 4428 4426 4426 4428 4432 4435 4438 4440 4442\n[12587] 4445 4447 4447 4446 4444 4442 4440 4438 4436 4434 4435 4438 4445 4451\n[12601]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12615]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12629]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12643]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12657]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12671]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12685]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12699]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12713]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12727]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12741]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12755]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12769]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12783]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12797]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12811]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12825]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12839]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12853]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12867]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12881]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12895]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12909]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12923]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12937]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12951]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12965]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12979]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[12993]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13007]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13021]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13035]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13049]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13063]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13077]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13091]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13105]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13119]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13133]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13147]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13161]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13175]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13189]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13203]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13217]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13231]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13245]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13259]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13273]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13287]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13301]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13315]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13329]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13343]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13357]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13371]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13385]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13399]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13413]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13427]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13441]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13455]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13469]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13483]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13497]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13511]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13525]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13539]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13553]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13567]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13581]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13595]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13609]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13623]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13637]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13651]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13665]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13679]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13693]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13707]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13721]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13735]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13749]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13763]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13777]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13791]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13805]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13819]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13833]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[13847]   NA   NA   NA   NA   NA   NA   NA   17   40   42   44   45   47   48\n[13861]   45   41   44   47   48   45   44   36   25   19   39   69  108  142\n[13875]  163  174  179  176  170  157  145  135  149  176  228  287  350  402\n[13889]  438  457  469  486  534  599  685  771  842  890  893  886  893  930\n[13903] 1023 1140 1254 1362 1462 1564 1688 1812 1920 2016 2108 2191 2249 2317\n[13917] 2432 2530 2503 2476 2558 2670 2752 2847 2952 3074 3195 3319 3438 3554\n[13931] 3669 3787 3909 4025 4123 4192 4214 4201 4159 4116 4103 4109 4132 4159\n[13945] 4173 4183 4193 4204 4220 4237 4251 4254 4235 4205 4173 4147 4141 4149\n[13959] 4174 4204 4232 4254 4267 4275 4287 4303 4331 4359 4379 4391 4397 4403\n[13973] 4423 4448 4473 4499 4522 4542 4557 4567 4578 4585 4590 4590 4585 4572\n[13987] 4546 4520 4503 4496 4504 4512 4509 4497 4479 4458 4438 4416 4389 4357\n[14001] 4320 4286 4270 4269 4295 4334 4385 4431 4461 4477 4483 4482 4478 4474\n[14015] 4472 4469 4465 4455 4441 4420 4398 4375 4360 4351 4353 4358 4374 4391\n[14029] 4417 4444 4472 4493 4508 4514 4517 4516 4519 4525 4535 4548 4555 4565\n[14043] 4584 4597 4581 4559 4559 4566 4584 4603 4609 4606 4596 4583 4573 4568\n[14057] 4572 4584 4601 4619 4631 4637 4634 4628 4621 4614 4608 4603 4601 4604\n[14071] 4621 4638 4645 4646 4648 4645 4634 4624 4629 4640 4661 4680 4696 4703\n[14085] 4702 4690 4667 4638 4608 4584 4577 4581 4601 4623 4645 4659 4664 4661\n[14099] 4656 4652 4658 4673 4694 4720 4744 4765 4778 4779 4762 4731 4688 4639\n[14113] 4590 4546 4510 4483 4467 4447 4419 4374 4329 4283 4275 4278 4307 4327\n[14127] 4303 4276 4268 4273 4294 4311 4313 4302 4296 4278 4277 4267 4264 4251\n[14141] 4236 4215 4194 4182 4177 4170 4151 4098 3998 3857 3700 3542 3406 3309\n[14155] 3267 3274 3325 3412 3526 3653 3781 3903 4011 4109 4202 4288 4370 4438\n[14169] 4485 4504 4488 4445 4384 4317 4260 4219 4205 4214 4247 4300 4372 4454\n[14183] 4540 4615 4669 4693 4681 4642 4585 4520 4454 4383 4304 4215 4120 4022\n[14197] 3930 3850 3790 3748 3726 3718 3723 3708 3616 3507 3410 3339 3315 3313\n[14211] 3318 3325 3333 3340 3355 3374 3404 3446 3507 3584 3681 3789 3904 4018\n[14225] 4120 4211 4281 4335 4367 4389 4397 4401 4395 4387 4368 4346 4315 4281\n[14239] 4240 4190 4125 4047 3948 3840 3718 3646 3671 3763 3817 3870 3837 3772\n[14253] 3719 3641 3545 3433 3376 3329 3492 3650 3774 3876 3979 4082 4190 4293\n[14267] 4380 4446 4473 4464 4406 4319 4215 4104 3998 3894 3789 3684 3585 3509\n[14281] 3502 3515 3526 3526 3514 3487 3460 3440 3436 3442 3426 3395 3346 3293\n[14295] 3253 3225 3218 3218 3220 3213 3193 3164 3132 3097 3066 3036 3004 2972\n[14309] 2939 2896 2819 2713 2536 2373 2275 2255 2332 2489 2716 2995 3298 3576\n[14323] 3766 3868 3856 3810 3816 3846 3917 3983 3989 3991 4011 4050 4091 4120\n[14337] 4111 4056 3947 3793 3600 3396 3247 3128 3079 3074 3120 3194 3285 3377\n[14351] 3455 3516 3556 3579 3586 3580 3562 3537 3509 3481 3461 3452 3463 3488\n[14365] 3531 3581 3636 3689 3737 3779 3817 3851 3883 3914 3944 3970 3988 3994\n[14379] 3983 3961 3929 3894 3861 3838 3832 3845 3878 3927 3986 4051 4115 4177\n[14393] 4236 4289 4334 4369 4390 4400 4400 4394 4383 4375 4375 4381 4395 4409\n[14407] 4417 4413 4391 4353 4301 4243 4189 4146 4128 4130 4162 4208 4261 4311\n[14421] 4349 4371 4374 4361 4341 4319 4303 4294 4291 4295 4305 4324 4351 4388\n[14435] 4433 4483 4531 4574 4601 4615 4609 4589 4559 4521 4478 4435 4405 4381\n[14449] 4372 4376 4398 4428 4470 4496 4491 4444 4351 4239 4136 4097 4180 4318\n[14463] 4443 4536 4576 4584 4583 4577 4568 4557 4546 4532 4516 4483 4388 4320\n[14477] 4391 4485 4513 4517 4528 4531 4535 4534 4547 4533 4435 4374 4413 4502\n[14491] 4462 4429 4477 4529 4538 4530 4526 4524 4524 4528 4532 4537 4539 4539\n[14505] 4539 4535 4528 4515 4497 4476 4459 4446 4444 4449 4463 4478 4489 4497\n[14519] 4500 4500 4495 4490 4486 4485 4488 4493 4499 4505 4506 4505 4499 4492\n[14533] 4483 4474 4467 4461 4452 4443 4435 4429 4427 4427 4431 4438 4447 4457\n[14547] 4467 4475 4479 4481 4484 4487 4489 4491 4492 4491 4487 4482 4477 4471\n[14561] 4467 4463 4460 4458 4462 4467 4470 4472 4471 4469 4469 4470 4473 4476\n[14575] 4478 4478 4477 4475 4475 4474 4474 4474 4474 4473 4472 4471 4467 4463\n[14589] 4460 4458 4458 4459 4460 4462 4463 4464 4466 4467 4468 4468 4470 4471\n[14603] 4474 4476 4479 4481 4482 4482 4479 4474 4469 4464 4461 4459 4458 4457\n[14617] 4455 4452 4447 4442 4436 4432 4429 4428 4428 4429 4431 4432 4433 4434\n[14631] 4434 4433 4432 4431 4430 4429 4429 4429 4430 4432 4435 4438 4441 4443\n[14645] 4443 4442 4440 4438 4436 4435 4435 4435 4438 4441 4445 4448 4449 4449\n[14659] 4446 4442 4438 4435 4432 4430 4429 4429 4429 4430 4433 4437 4440 4442\n[14673] 4442 4441 4440 4437 4434 4430 4427 4426 4427 4430 4433 4436 4439 4441\n[14687] 4444 4447 4447 4446 4444 4442 4440 4437 4434 4433 4435 4439 4447 4454\n[14701]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14715]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14729]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14743]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14757]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14771]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14785]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14799]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14813]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14827]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14841]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14855]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14869]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14883]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14897]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14911]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14925]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14939]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14953]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14967]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14981]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[14995]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15009]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15023]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15037]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15051]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15065]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15079]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15093]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15107]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15135]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15149]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15163]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15177]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15191]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15205]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15219]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15233]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15247]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15261]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15275]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15289]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15303]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15317]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15331]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15345]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15359]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15373]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15387]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15401]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15415]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15429]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15443]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15457]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15471]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15485]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15499]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15513]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15527]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15541]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15555]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15569]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15583]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15597]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15611]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15625]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15639]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15653]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15667]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15681]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15695]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15709]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15723]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15737]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15751]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15765]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15779]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15793]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15807]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15821]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15835]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15849]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15863]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15877]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15891]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15905]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15919]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15933]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[15947]   NA   NA   NA   NA   NA   NA   NA   13   37   43   43   42   44   45\n[15961]   43   43   48   55   60   63   59   49   33   27   44   77  117  153\n[15975]  178  194  202  202  192  172  145  125  132  165  228  305  382  444\n[15989]  482  499  505  518  555  615  694  777  846  889  898  897  912  958\n[16003] 1046 1160 1279 1398 1513 1639 1781 1918 2024 2107 2178 2245 2312 2389\n[16017] 2483 2561 2604 2639 2703 2782 2863 2956 3072 3202 3329 3451 3567 3679\n[16031] 3789 3897 4004 4102 4183 4234 4248 4229 4189 4150 4133 4137 4154 4175\n[16045] 4188 4198 4208 4221 4237 4253 4263 4261 4239 4206 4173 4150 4145 4157\n[16059] 4183 4215 4242 4261 4270 4274 4283 4299 4326 4355 4378 4393 4403 4413\n[16073] 4432 4457 4481 4505 4529 4551 4569 4584 4594 4600 4602 4597 4584 4565\n[16087] 4541 4522 4518 4525 4538 4547 4544 4531 4510 4484 4457 4427 4393 4356\n[16101] 4319 4288 4276 4284 4315 4359 4407 4449 4475 4489 4492 4490 4488 4488\n[16115] 4488 4487 4482 4470 4451 4428 4405 4386 4378 4380 4391 4406 4420 4436\n[16129] 4458 4483 4506 4525 4535 4537 4535 4532 4531 4534 4539 4544 4547 4557\n[16143] 4581 4603 4605 4593 4574 4561 4569 4583 4594 4597 4595 4590 4587 4587\n[16157] 4592 4599 4608 4615 4621 4625 4627 4629 4632 4633 4632 4627 4620 4616\n[16171] 4623 4632 4636 4636 4633 4628 4623 4623 4632 4649 4671 4692 4706 4711\n[16185] 4708 4696 4676 4650 4622 4602 4596 4606 4629 4656 4678 4690 4687 4672\n[16199] 4651 4633 4625 4630 4651 4681 4716 4749 4773 4783 4775 4750 4710 4663\n[16213] 4616 4574 4541 4515 4496 4476 4450 4418 4385 4358 4353 4366 4393 4408\n[16227] 4390 4366 4366 4379 4391 4397 4393 4375 4344 4309 4281 4262 4256 4248\n[16241] 4233 4212 4194 4180 4167 4148 4115 4052 3955 3827 3683 3538 3408 3313\n[16255] 3267 3271 3321 3408 3520 3646 3773 3892 3999 4096 4188 4274 4355 4422\n[16269] 4468 4485 4472 4434 4382 4327 4282 4255 4252 4270 4307 4359 4424 4496\n[16283] 4570 4633 4678 4693 4677 4638 4590 4535 4474 4401 4313 4211 4104 3994\n[16297] 3889 3798 3730 3687 3673 3682 3700 3697 3644 3565 3486 3423 3388 3374\n[16311] 3369 3369 3370 3370 3371 3375 3386 3408 3446 3502 3577 3667 3770 3879\n[16325] 3986 4086 4174 4247 4305 4351 4386 4412 4427 4432 4422 4398 4357 4302\n[16339] 4232 4148 4049 3933 3800 3650 3496 3396 3406 3485 3579 3629 3583 3496\n[16353] 3421 3352 3284 3247 3281 3363 3476 3596 3709 3820 3938 4060 4182 4294\n[16367] 4386 4452 4488 4487 4446 4373 4280 4176 4067 3952 3829 3700 3582 3503\n[16381] 3497 3525 3549 3553 3526 3480 3413 3371 3374 3393 3400 3384 3350 3308\n[16395] 3273 3249 3240 3237 3233 3221 3195 3157 3111 3059 3005 2947 2887 2822\n[16409] 2754 2675 2589 2489 2394 2316 2282 2309 2411 2582 2810 3074 3345 3586\n[16423] 3760 3846 3842 3807 3808 3842 3898 3947 3961 3969 4000 4049 4104 4136\n[16437] 4120 4055 3943 3791 3609 3416 3235 3096 3021 3011 3061 3149 3257 3365\n[16451] 3460 3534 3586 3616 3628 3625 3610 3587 3560 3536 3519 3513 3521 3543\n[16465] 3578 3619 3663 3707 3747 3783 3815 3844 3873 3901 3930 3955 3973 3979\n[16479] 3969 3944 3907 3865 3827 3801 3794 3809 3845 3898 3962 4031 4101 4171\n[16493] 4240 4304 4359 4399 4419 4420 4405 4384 4364 4350 4347 4356 4374 4394\n[16507] 4408 4408 4389 4349 4295 4232 4173 4126 4104 4108 4139 4190 4251 4312\n[16521] 4364 4397 4404 4389 4359 4325 4296 4275 4265 4263 4270 4286 4311 4345\n[16535] 4389 4442 4498 4555 4606 4647 4673 4681 4671 4644 4603 4556 4513 4477\n[16549] 4456 4450 4462 4485 4514 4531 4522 4482 4412 4332 4265 4246 4297 4391\n[16563] 4488 4565 4609 4625 4627 4619 4607 4593 4579 4561 4534 4486 4411 4362\n[16577] 4383 4434 4468 4488 4508 4522 4531 4537 4545 4534 4492 4463 4477 4497\n[16591] 4470 4446 4472 4512 4527 4525 4519 4514 4510 4508 4506 4506 4508 4511\n[16605] 4516 4519 4520 4517 4510 4500 4492 4487 4486 4488 4494 4500 4505 4508\n[16619] 4509 4509 4508 4506 4505 4505 4505 4506 4508 4510 4510 4509 4505 4500\n[16633] 4493 4488 4483 4478 4474 4467 4460 4453 4451 4452 4457 4463 4471 4479\n[16647] 4487 4492 4494 4494 4495 4496 4497 4497 4498 4498 4495 4491 4487 4484\n[16661] 4481 4479 4477 4475 4476 4478 4480 4480 4478 4476 4475 4476 4477 4479\n[16675] 4480 4480 4478 4477 4476 4476 4475 4474 4473 4474 4473 4472 4468 4463\n[16689] 4459 4457 4457 4458 4459 4461 4463 4465 4467 4469 4469 4469 4470 4471\n[16703] 4474 4477 4481 4484 4486 4486 4484 4480 4474 4469 4465 4462 4460 4459\n[16717] 4456 4452 4447 4442 4437 4432 4429 4427 4427 4428 4431 4433 4435 4436\n[16731] 4437 4437 4436 4435 4434 4433 4431 4431 4431 4432 4434 4438 4441 4443\n[16745] 4444 4443 4441 4439 4437 4435 4435 4436 4439 4443 4447 4450 4451 4450\n[16759] 4447 4442 4438 4433 4430 4428 4427 4428 4429 4432 4436 4440 4442 4443\n[16773] 4444 4445 4444 4442 4439 4436 4432 4429 4429 4430 4433 4436 4438 4441\n[16787] 4444 4446 4447 4447 4445 4443 4440 4437 4435 4435 4437 4442 4448 4454\n[16801]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16815]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16829]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16843]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16857]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16871]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16885]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16899]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16913]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16927]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16941]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16955]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16969]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16983]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[16997]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17011]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17025]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17039]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17053]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17067]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17081]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17095]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17109]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17123]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17137]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17165]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17179]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17193]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17207]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17221]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17235]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17249]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17263]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17277]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17291]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17305]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17319]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17333]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17347]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17361]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17375]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17389]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17403]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17417]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17431]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17445]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17459]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17473]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17487]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17501]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17515]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17529]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17543]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17557]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17571]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17585]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17599]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17613]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17627]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17641]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17655]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17669]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17683]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17697]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17711]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17725]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17739]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17753]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17767]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17781]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17795]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17809]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17823]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17837]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17851]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17865]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17879]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17893]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17907]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17921]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17935]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17949]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17963]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17977]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[17991]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18005]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18019]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18033]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18047]   NA   NA   NA   NA   NA   NA   NA    8   34   43   43   39   40   42\n[18061]   40   41   48   59   67   77   73   67   48   38   57   91  131  169\n[18075]  195  213  226  231  222  199  161  130  135  171  248  338  428  500\n[18089]  538  554  556  560  593  642  713  786  851  895  909  913  939  988\n[18103] 1072 1178 1289 1413 1531 1676 1848 2011 2109 2178 2235 2297 2385 2474\n[18117] 2566 2636 2742 2820 2870 2909 2975 3056 3185 3326 3456 3579 3694 3801\n[18131] 3903 3998 4088 4167 4229 4266 4268 4248 4208 4173 4159 4163 4177 4195\n[18145] 4207 4216 4227 4238 4252 4264 4268 4262 4237 4205 4175 4156 4157 4173\n[18159] 4203 4236 4261 4277 4281 4282 4289 4304 4332 4360 4382 4399 4410 4421\n[18173] 4439 4461 4483 4507 4534 4560 4583 4601 4611 4614 4610 4599 4577 4554\n[18187] 4534 4524 4538 4559 4577 4588 4584 4568 4543 4511 4478 4442 4405 4368\n[18201] 4333 4307 4303 4316 4352 4396 4438 4472 4491 4500 4500 4496 4498 4501\n[18215] 4506 4508 4503 4490 4469 4444 4422 4406 4405 4413 4432 4455 4465 4480\n[18229] 4500 4524 4544 4560 4564 4562 4554 4547 4542 4541 4543 4545 4543 4546\n[18243] 4576 4606 4623 4626 4598 4566 4571 4576 4586 4593 4595 4598 4604 4610\n[18257] 4616 4619 4619 4616 4614 4614 4621 4631 4646 4658 4664 4660 4646 4631\n[18271] 4629 4630 4632 4630 4626 4620 4623 4630 4648 4669 4694 4715 4726 4728\n[18285] 4722 4708 4689 4667 4642 4624 4624 4639 4666 4697 4717 4727 4716 4691\n[18299] 4655 4620 4598 4592 4610 4641 4683 4724 4756 4775 4774 4756 4722 4680\n[18313] 4637 4598 4569 4546 4528 4512 4492 4474 4451 4440 4437 4450 4476 4491\n[18327] 4469 4440 4453 4470 4463 4452 4436 4403 4324 4259 4223 4213 4219 4213\n[18341] 4195 4168 4151 4131 4112 4084 4045 3983 3896 3785 3656 3523 3401 3308\n[18355] 3266 3271 3322 3408 3520 3644 3766 3882 3984 4077 4165 4249 4328 4393\n[18369] 4435 4453 4441 4410 4367 4326 4297 4286 4298 4327 4368 4418 4476 4536\n[18383] 4597 4647 4683 4694 4675 4636 4607 4564 4512 4435 4333 4211 4090 3967\n[18397] 3847 3745 3667 3622 3620 3643 3675 3691 3665 3613 3559 3509 3479 3460\n[18411] 3451 3444 3438 3428 3418 3405 3399 3397 3413 3442 3494 3561 3648 3743\n[18425] 3847 3949 4046 4132 4207 4270 4325 4369 4402 4421 4421 4399 4352 4283\n[18439] 4193 4082 3954 3807 3647 3472 3286 3140 3147 3195 3307 3368 3301 3202\n[18453] 3125 3073 3040 3073 3212 3404 3452 3515 3604 3715 3845 3982 4120 4250\n[18467] 4358 4431 4483 4491 4467 4409 4333 4238 4137 4021 3893 3756 3626 3526\n[18481] 3523 3547 3560 3552 3485 3428 3332 3292 3334 3385 3412 3406 3388 3356\n[18495] 3330 3307 3298 3291 3279 3257 3217 3163 3097 3023 2945 2861 2776 2682\n[18509] 2589 2484 2404 2314 2296 2286 2314 2381 2509 2687 2909 3151 3395 3609\n[18523] 3765 3849 3849 3816 3819 3839 3871 3903 3908 3920 3977 4039 4112 4147\n[18537] 4121 4053 3952 3813 3634 3444 3227 3067 2978 2968 3025 3125 3244 3366\n[18551] 3471 3557 3618 3657 3675 3677 3667 3649 3628 3609 3598 3595 3604 3624\n[18565] 3652 3686 3720 3752 3782 3809 3832 3853 3875 3898 3924 3948 3966 3973\n[18579] 3962 3936 3895 3848 3806 3776 3769 3784 3823 3878 3944 4017 4089 4163\n[18593] 4240 4314 4376 4421 4437 4432 4402 4368 4340 4324 4323 4337 4364 4396\n[18607] 4420 4429 4414 4375 4316 4246 4179 4125 4098 4096 4127 4178 4246 4317\n[18621] 4381 4424 4432 4415 4376 4329 4289 4257 4239 4233 4237 4250 4270 4300\n[18635] 4342 4394 4456 4524 4595 4660 4714 4751 4765 4758 4727 4685 4635 4589\n[18649] 4554 4534 4534 4546 4564 4575 4564 4535 4482 4428 4384 4371 4405 4466\n[18663] 4536 4598 4637 4656 4660 4656 4644 4631 4616 4593 4559 4507 4441 4389\n[18677] 4372 4386 4418 4453 4497 4528 4539 4538 4542 4535 4517 4495 4499 4492\n[18691] 4475 4458 4482 4514 4523 4520 4514 4505 4497 4489 4483 4479 4482 4488\n[18705] 4498 4508 4518 4524 4528 4528 4528 4528 4527 4527 4525 4523 4522 4520\n[18719] 4521 4520 4522 4522 4523 4522 4520 4516 4513 4511 4511 4511 4509 4506\n[18733] 4504 4501 4498 4495 4494 4491 4482 4475 4474 4477 4480 4485 4491 4497\n[18747] 4501 4505 4505 4504 4503 4503 4502 4502 4503 4503 4501 4499 4496 4494\n[18761] 4492 4492 4489 4488 4486 4485 4485 4484 4483 4481 4481 4481 4481 4481\n[18775] 4481 4481 4480 4479 4478 4478 4476 4474 4474 4474 4474 4473 4469 4464\n[18789] 4460 4457 4457 4458 4460 4462 4465 4468 4470 4471 4471 4471 4471 4472\n[18803] 4474 4478 4482 4486 4488 4489 4487 4483 4477 4472 4467 4464 4461 4459\n[18817] 4456 4452 4447 4441 4436 4432 4428 4426 4426 4428 4431 4434 4436 4438\n[18831] 4439 4440 4440 4439 4437 4435 4433 4432 4431 4431 4433 4437 4440 4443\n[18845] 4444 4444 4442 4440 4438 4436 4436 4438 4441 4445 4449 4452 4453 4452\n[18859] 4448 4443 4437 4432 4429 4427 4426 4427 4430 4434 4439 4443 4444 4444\n[18873] 4447 4450 4450 4449 4447 4443 4438 4434 4433 4433 4435 4437 4439 4441\n[18887] 4443 4445 4447 4448 4446 4444 4441 4439 4438 4438 4441 4445 4450 4455\n[18901]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18915]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18929]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18943]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18957]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18971]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18985]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[18999]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19013]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19027]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19041]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19055]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19069]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19083]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19097]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19111]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19125]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19139]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19153]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19167]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19181]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19195]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19209]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19223]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19237]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19251]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19265]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19279]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19293]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19307]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19321]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19335]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19349]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19363]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19377]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19391]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19405]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19419]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19433]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19447]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19461]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19475]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19489]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19503]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19517]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19531]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19545]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19559]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19573]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19587]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19601]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19615]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19629]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19643]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19657]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19671]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19685]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19699]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19713]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19727]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19741]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19755]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19769]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19783]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19797]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19811]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19825]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19839]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19853]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19867]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19881]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19895]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19909]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19923]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19937]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19951]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19965]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19979]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[19993]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20007]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20021]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20035]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20049]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20063]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20077]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20091]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20105]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20119]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20133]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[20147]   NA   NA   NA   NA   NA   NA   NA    5   30   43   43   38   35   34\n[20161]   33   36   43   52   61   69   74   73   64   62   79  111  147  182\n[20175]  208  228  242  250  245  225  186  155  160  205  286  384  478  552\n[20189]  595  613  617  624  648  689  742  802  861  906  931  948  978 1028\n[20203] 1104 1192 1284 1385 1514 1678 1876 2055 2158 2221 2285 2367 2480 2602\n[20217] 2718 2828 2939 3022 3062 3083 3122 3194 3312 3448 3579 3701 3813 3916\n[20231] 4008 4091 4162 4220 4261 4280 4274 4248 4212 4184 4176 4184 4199 4216\n[20245] 4228 4238 4248 4258 4266 4268 4263 4249 4225 4199 4177 4167 4176 4198\n[20259] 4230 4261 4283 4294 4296 4297 4305 4322 4347 4371 4389 4403 4415 4427\n[20273] 4441 4459 4480 4506 4536 4567 4594 4614 4624 4624 4613 4592 4563 4539\n[20287] 4531 4541 4567 4596 4619 4629 4624 4605 4574 4538 4499 4460 4422 4389\n[20301] 4361 4346 4348 4368 4401 4438 4470 4494 4506 4509 4507 4505 4508 4515\n[20315] 4522 4526 4523 4510 4488 4465 4445 4435 4434 4444 4459 4478 4493 4510\n[20329] 4532 4556 4576 4587 4587 4578 4566 4554 4547 4545 4547 4549 4550 4557\n[20343] 4576 4601 4622 4631 4624 4610 4599 4592 4592 4594 4599 4608 4622 4637\n[20357] 4646 4646 4638 4626 4616 4613 4623 4642 4667 4688 4698 4694 4676 4656\n[20371] 4641 4634 4633 4632 4629 4628 4634 4649 4671 4698 4724 4744 4753 4752\n[20385] 4741 4725 4704 4683 4662 4651 4655 4674 4702 4732 4751 4756 4742 4711\n[20399] 4667 4621 4587 4571 4581 4610 4653 4698 4734 4756 4761 4750 4724 4689\n[20413] 4653 4620 4594 4574 4558 4544 4531 4519 4508 4505 4511 4527 4547 4557\n[20427] 4545 4528 4525 4519 4493 4458 4418 4340 4188 4074 4067 4117 4130 4122\n[20441] 4104 4087 4064 4043 4019 3992 3955 3903 3830 3736 3623 3505 3394 3312\n[20455] 3274 3282 3333 3419 3527 3646 3761 3868 3963 4049 4132 4210 4282 4342\n[20469] 4381 4396 4388 4365 4334 4309 4300 4308 4336 4377 4425 4475 4525 4574\n[20483] 4619 4657 4684 4692 4680 4659 4643 4617 4568 4480 4353 4208 4066 3931\n[20497] 3800 3685 3597 3557 3569 3614 3663 3693 3691 3666 3633 3601 3578 3561\n[20511] 3551 3542 3531 3515 3495 3470 3446 3426 3418 3424 3449 3493 3556 3635\n[20525] 3726 3821 3918 4010 4094 4168 4234 4290 4335 4364 4372 4354 4306 4231\n[20539] 4129 4003 3856 3690 3508 3318 3133 3007 2986 3024 3068 3073 3017 2932\n[20553] 2860 2816 2816 2892 3053 3223 3303 3360 3443 3562 3695 3848 4008 4167\n[20567] 4309 4417 4477 4495 4480 4440 4383 4308 4219 4112 3989 3857 3731 3637\n[20581] 3598 3585 3565 3503 3384 3269 3233 3264 3351 3434 3469 3469 3458 3440\n[20595] 3419 3398 3383 3367 3343 3305 3246 3171 3084 2988 2890 2788 2685 2582\n[20609] 2484 2396 2332 2294 2289 2316 2379 2481 2624 2805 3014 3236 3454 3644\n[20623] 3785 3864 3879 3861 3843 3834 3833 3836 3846 3882 3963 4054 4116 4134\n[20637] 4100 4039 3967 3844 3637 3392 3166 3005 2931 2938 3007 3116 3244 3374\n[20651] 3489 3583 3653 3700 3726 3735 3732 3721 3709 3698 3694 3697 3708 3726\n[20665] 3750 3776 3802 3826 3845 3861 3873 3883 3895 3911 3932 3954 3972 3978\n[20679] 3967 3939 3896 3847 3802 3771 3762 3777 3814 3868 3933 4004 4076 4153\n[20693] 4233 4311 4377 4422 4434 4419 4382 4339 4305 4289 4293 4317 4356 4402\n[20707] 4443 4466 4460 4424 4361 4284 4210 4149 4113 4105 4128 4178 4248 4325\n[20721] 4394 4439 4449 4429 4385 4332 4281 4242 4218 4208 4209 4218 4236 4262\n[20735] 4300 4349 4413 4488 4572 4657 4735 4797 4835 4847 4832 4798 4749 4698\n[20749] 4653 4621 4607 4606 4611 4614 4605 4583 4548 4511 4485 4479 4499 4538\n[20763] 4584 4627 4656 4672 4677 4676 4671 4664 4653 4631 4593 4536 4466 4397\n[20777] 4343 4327 4351 4410 4480 4535 4549 4543 4541 4540 4535 4526 4519 4508\n[20791] 4496 4491 4501 4516 4523 4522 4515 4505 4493 4479 4467 4459 4459 4467\n[20805] 4482 4501 4519 4534 4547 4555 4560 4561 4561 4558 4552 4546 4540 4536\n[20819] 4535 4536 4538 4540 4540 4538 4532 4525 4518 4514 4513 4514 4515 4516\n[20833] 4517 4517 4516 4514 4512 4508 4500 4494 4493 4496 4498 4501 4503 4506\n[20847] 4508 4509 4509 4509 4508 4507 4506 4506 4506 4505 4504 4502 4501 4499\n[20861] 4497 4495 4493 4491 4488 4486 4484 4484 4484 4484 4484 4484 4484 4483\n[20875] 4483 4482 4481 4480 4480 4479 4477 4476 4475 4475 4475 4474 4470 4466\n[20889] 4462 4459 4459 4461 4464 4467 4470 4473 4474 4474 4473 4472 4472 4473\n[20903] 4475 4478 4481 4485 4487 4488 4486 4483 4478 4473 4468 4464 4461 4459\n[20917] 4456 4451 4447 4441 4436 4431 4427 4425 4425 4427 4431 4435 4438 4440\n[20931] 4442 4443 4442 4441 4438 4436 4433 4431 4430 4430 4432 4435 4439 4442\n[20945] 4445 4445 4444 4442 4439 4438 4438 4440 4443 4447 4451 4454 4455 4454\n[20959] 4450 4444 4438 4433 4429 4427 4426 4428 4432 4436 4441 4444 4446 4448\n[20973] 4452 4455 4456 4456 4454 4450 4446 4442 4439 4438 4438 4439 4441 4442\n[20987] 4444 4446 4448 4449 4448 4445 4443 4441 4441 4442 4445 4449 4454 4458\n[21001]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21015]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21029]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21043]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21057]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21071]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21085]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21099]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21113]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21127]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21141]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21155]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21169]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21183]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21197]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21211]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21225]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21239]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21253]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21267]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21281]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21295]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21309]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21323]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21337]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21351]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21365]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21379]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21393]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21407]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21421]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21435]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21449]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21463]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21477]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21491]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21505]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21519]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21533]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21547]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21561]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21575]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21589]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21603]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21617]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21631]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21645]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21659]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21673]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21687]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21701]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21715]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21729]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21743]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21757]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21771]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21785]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21799]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21813]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21827]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21841]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21855]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21869]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21883]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21897]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21911]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21925]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21939]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21953]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21967]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21981]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[21995]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22009]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22023]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22037]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22051]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22065]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22079]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22093]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22107]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22135]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22149]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22163]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22177]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22191]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22205]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22219]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22233]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[22247]   NA   NA   NA   NA   NA   NA    8    9   34   46   45   37   31   26\n[22261]   25   28   36   44   52   57   70   79   78   82  102  133  164  194\n[22275]  216  234  245  253  254  247  208  181  194  244  329  431  522  599\n[22289]  642  667  675  685  707  740  777  822  879  931  960  988 1025 1076\n[22303] 1153 1226 1294 1362 1490 1648 1869 2077 2171 2237 2325 2433 2580 2743\n[22317] 2889 3035 3151 3237 3263 3268 3297 3348 3457 3578 3701 3816 3924 4020\n[22331] 4102 4170 4222 4260 4283 4288 4271 4241 4209 4185 4188 4203 4221 4238\n[22345] 4250 4260 4270 4276 4273 4264 4247 4228 4206 4187 4176 4177 4196 4226\n[22359] 4260 4290 4307 4314 4312 4313 4326 4345 4367 4387 4397 4406 4417 4429\n[22373] 4438 4451 4473 4501 4534 4569 4599 4622 4632 4629 4611 4584 4551 4526\n[22387] 4536 4562 4598 4635 4658 4668 4659 4637 4601 4560 4518 4478 4443 4415\n[22401] 4396 4390 4400 4423 4451 4481 4502 4515 4517 4514 4510 4509 4514 4524\n[22415] 4533 4540 4538 4528 4504 4481 4463 4456 4450 4458 4466 4485 4503 4526\n[22429] 4554 4581 4600 4608 4601 4586 4568 4554 4547 4546 4552 4559 4563 4569\n[22443] 4579 4594 4610 4625 4634 4645 4627 4615 4608 4604 4607 4617 4641 4666\n[22457] 4679 4679 4664 4644 4627 4620 4634 4658 4691 4719 4730 4726 4701 4673\n[22471] 4650 4637 4632 4634 4633 4638 4649 4668 4694 4725 4752 4772 4779 4775\n[22485] 4761 4741 4719 4698 4680 4673 4681 4703 4731 4760 4776 4779 4763 4732\n[22499] 4682 4630 4589 4565 4571 4594 4636 4679 4715 4737 4746 4739 4720 4693\n[22513] 4664 4637 4614 4596 4581 4570 4560 4555 4551 4554 4564 4583 4599 4614\n[22527] 4604 4590 4571 4543 4482 4405 4329 4214 3928 3732 3783 3940 3943 3940\n[22541] 3928 3937 3913 3902 3882 3868 3843 3811 3756 3685 3591 3491 3395 3323\n[22555] 3296 3308 3361 3443 3546 3656 3759 3854 3936 4010 4083 4151 4215 4268\n[22569] 4301 4315 4310 4296 4280 4273 4285 4315 4359 4414 4469 4521 4564 4600\n[22583] 4629 4653 4673 4684 4678 4673 4681 4670 4626 4519 4347 4167 4012 3888\n[22597] 3751 3625 3516 3474 3519 3606 3679 3720 3727 3715 3700 3684 3669 3657\n[22611] 3648 3639 3627 3610 3586 3554 3519 3483 3459 3442 3446 3464 3507 3562\n[22625] 3637 3719 3811 3900 3986 4062 4131 4189 4240 4274 4287 4273 4227 4151\n[22639] 4047 3916 3765 3590 3395 3204 3021 2905 2883 2913 2888 2843 2790 2717\n[22653] 2660 2619 2621 2681 2826 2984 3062 3126 3213 3348 3480 3662 3849 4046\n[22667] 4228 4382 4450 4484 4484 4462 4430 4378 4309 4217 4108 3989 3871 3772\n[22681] 3705 3652 3598 3500 3328 3151 3198 3286 3416 3524 3544 3539 3540 3539\n[22695] 3520 3498 3478 3455 3419 3363 3278 3174 3060 2943 2832 2722 2614 2513\n[22709] 2423 2359 2321 2328 2332 2382 2471 2596 2750 2927 3123 3324 3518 3690\n[22723] 3816 3897 3914 3899 3861 3823 3791 3774 3783 3827 3934 4052 4094 4104\n[22737] 4060 4001 3984 3891 3623 3304 3072 2921 2882 2921 3004 3120 3254 3390\n[22751] 3511 3613 3690 3745 3780 3798 3805 3802 3799 3797 3802 3812 3828 3846\n[22765] 3869 3889 3910 3925 3936 3939 3940 3937 3940 3945 3962 3980 3997 4002\n[22779] 3990 3961 3916 3864 3818 3784 3774 3786 3821 3871 3931 3998 4067 4140\n[22793] 4220 4297 4362 4406 4409 4387 4341 4292 4256 4241 4252 4287 4340 4402\n[22807] 4463 4507 4511 4483 4419 4337 4257 4187 4144 4127 4141 4183 4253 4331\n[22821] 4398 4444 4451 4430 4383 4327 4272 4228 4203 4191 4189 4195 4211 4234\n[22835] 4265 4309 4372 4450 4544 4643 4740 4823 4880 4911 4909 4885 4839 4787\n[22849] 4735 4694 4667 4654 4649 4648 4640 4627 4604 4581 4566 4563 4577 4600\n[22863] 4626 4652 4666 4675 4678 4680 4684 4687 4686 4671 4632 4572 4486 4392\n[22877] 4292 4237 4239 4320 4425 4530 4543 4528 4531 4541 4545 4545 4540 4531\n[22891] 4521 4516 4518 4524 4527 4527 4522 4512 4497 4477 4457 4441 4435 4440\n[22905] 4457 4483 4508 4534 4555 4571 4581 4584 4585 4580 4573 4563 4554 4548\n[22919] 4546 4548 4550 4554 4553 4550 4541 4532 4522 4516 4515 4518 4522 4527\n[22933] 4531 4534 4534 4532 4528 4521 4510 4502 4502 4507 4508 4509 4510 4510\n[22947] 4511 4510 4510 4510 4510 4509 4509 4508 4507 4506 4505 4503 4502 4500\n[22961] 4497 4493 4490 4487 4483 4480 4478 4479 4479 4482 4482 4484 4485 4486\n[22975] 4485 4484 4483 4482 4481 4480 4478 4477 4476 4475 4476 4476 4472 4468\n[22989] 4465 4463 4463 4465 4468 4472 4475 4478 4479 4478 4476 4474 4474 4474\n[23003] 4475 4477 4480 4483 4485 4485 4484 4481 4477 4472 4468 4464 4462 4459\n[23017] 4456 4452 4447 4442 4436 4431 4428 4426 4426 4428 4432 4437 4440 4442\n[23031] 4444 4445 4444 4442 4438 4435 4432 4430 4429 4429 4432 4435 4439 4443\n[23045] 4446 4447 4446 4444 4442 4441 4441 4443 4446 4450 4454 4457 4458 4456\n[23059] 4452 4446 4441 4436 4432 4429 4428 4429 4433 4439 4443 4446 4450 4453\n[23073] 4456 4459 4461 4461 4459 4457 4453 4450 4446 4444 4443 4443 4443 4444\n[23087] 4446 4448 4450 4451 4450 4447 4445 4444 4445 4447 4450 4454 4458 4461\n[23101]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23115]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23129]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23143]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23157]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23171]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23185]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23199]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23213]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23227]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23241]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23255]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23269]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23283]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23297]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23311]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23325]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23339]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23353]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23367]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23381]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23395]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23409]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23423]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23437]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23451]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23465]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23479]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23493]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23507]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23521]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23535]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23549]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23563]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23577]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23591]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23605]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23619]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23633]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23647]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23661]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23675]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23689]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23703]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23717]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23731]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23745]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23759]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23773]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23787]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23801]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23815]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23829]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23843]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23857]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23871]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23885]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23899]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23913]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23927]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23941]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23955]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23969]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23983]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[23997]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24011]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24025]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24039]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24053]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24067]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24081]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24095]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24109]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24123]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24137]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24165]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24179]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24193]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24207]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24221]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24235]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24249]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24263]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24277]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24291]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24305]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24319]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24333]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[24347]   NA   NA   NA   NA   NA   NA    3   28   45   50   46   38   28   21\n[24361]   18   22   31   43   53   63   72   81   89  101  123  150  177  201\n[24375]  217  227  232  235  237  232  216  210  232  284  364  458  546  619\n[24389]  667  697  717  735  758  784  811  849  904  956  991 1025 1080 1149\n[24403] 1223 1289 1339 1399 1499 1644 1832 2013 2142 2246 2363 2502 2666 2846\n[24417] 3025 3191 3323 3412 3442 3457 3488 3543 3620 3713 3817 3923 4021 4108\n[24431] 4178 4232 4269 4290 4296 4288 4265 4235 4209 4195 4202 4220 4240 4258\n[24445] 4271 4282 4289 4288 4272 4248 4222 4198 4180 4170 4172 4187 4216 4252\n[24459] 4288 4315 4329 4332 4330 4333 4348 4368 4384 4396 4403 4409 4416 4422\n[24473] 4429 4440 4461 4490 4526 4564 4597 4621 4631 4626 4604 4574 4547 4535\n[24487] 4551 4585 4627 4666 4692 4699 4687 4659 4620 4576 4532 4493 4462 4441\n[24501] 4431 4433 4447 4470 4495 4517 4529 4531 4524 4514 4507 4507 4514 4526\n[24515] 4538 4545 4544 4533 4511 4486 4466 4453 4443 4442 4452 4472 4501 4534\n[24529] 4569 4598 4615 4617 4604 4584 4562 4547 4542 4546 4556 4567 4574 4579\n[24543] 4582 4586 4595 4605 4616 4624 4628 4630 4630 4627 4623 4630 4658 4691\n[24557] 4711 4712 4695 4671 4650 4641 4654 4681 4715 4742 4752 4741 4711 4676\n[24571] 4649 4631 4622 4622 4630 4643 4658 4679 4707 4739 4767 4788 4795 4790\n[24585] 4775 4753 4730 4708 4693 4689 4699 4721 4749 4775 4790 4791 4775 4743\n[24599] 4697 4648 4607 4582 4583 4604 4637 4673 4704 4725 4733 4729 4714 4694\n[24613] 4670 4648 4627 4609 4595 4586 4579 4577 4580 4587 4597 4610 4626 4636\n[24627] 4633 4617 4585 4529 4442 4321 4159 3911 3572 3335 3383 3541 3613 3633\n[24641] 3652 3674 3686 3694 3700 3706 3707 3698 3673 3628 3562 3486 3412 3359\n[24655] 3342 3361 3412 3488 3578 3672 3760 3837 3901 3959 4016 4071 4122 4164\n[24669] 4189 4201 4201 4200 4203 4218 4253 4303 4365 4431 4491 4544 4583 4608\n[24683] 4619 4626 4637 4649 4656 4671 4698 4708 4649 4517 4287 4065 3922 3820\n[24697] 3703 3567 3434 3382 3479 3628 3725 3768 3772 3760 3754 3748 3739 3728\n[24711] 3720 3714 3706 3693 3671 3641 3602 3561 3526 3498 3485 3486 3505 3540\n[24725] 3594 3660 3739 3820 3898 3969 4032 4085 4130 4160 4173 4161 4119 4049\n[24739] 3951 3830 3687 3515 3312 3107 2944 2838 2802 2793 2766 2723 2674 2616\n[24753] 2557 2506 2483 2504 2582 2681 2775 2854 2928 3033 3209 3424 3656 3885\n[24767] 4099 4273 4383 4443 4472 4478 4470 4444 4396 4324 4232 4126 4018 3919\n[24781] 3835 3758 3676 3562 3415 3304 3316 3401 3504 3582 3602 3603 3616 3628\n[24795] 3617 3594 3571 3543 3497 3420 3304 3163 3018 2882 2763 2658 2558 2466\n[24809] 2387 2331 2310 2327 2377 2462 2580 2723 2883 3055 3234 3414 3585 3734\n[24823] 3847 3916 3934 3913 3863 3804 3753 3723 3729 3778 3870 3966 4019 4029\n[24837] 4008 3988 3982 3882 3585 3236 2985 2857 2850 2914 3014 3134 3270 3408\n[24851] 3534 3642 3727 3791 3837 3866 3882 3890 3897 3906 3920 3938 3959 3981\n[24865] 4003 4023 4039 4049 4051 4046 4035 4022 4013 4011 4020 4034 4047 4049\n[24879] 4035 4003 3957 3904 3857 3822 3809 3818 3846 3889 3942 4001 4064 4131\n[24893] 4203 4273 4331 4364 4361 4330 4280 4229 4193 4180 4198 4244 4311 4390\n[24907] 4468 4527 4549 4531 4476 4399 4316 4240 4186 4159 4164 4198 4258 4326\n[24921] 4385 4423 4430 4409 4367 4314 4262 4220 4195 4183 4180 4185 4198 4216\n[24935] 4242 4282 4340 4419 4516 4623 4731 4827 4899 4941 4950 4932 4892 4841\n[24949] 4787 4740 4706 4684 4672 4667 4662 4656 4646 4636 4632 4632 4639 4648\n[24963] 4656 4661 4662 4661 4663 4670 4684 4699 4708 4701 4666 4602 4505 4376\n[24977] 4228 4108 4075 4143 4301 4454 4499 4496 4504 4525 4542 4552 4550 4543\n[24991] 4534 4527 4525 4527 4532 4535 4533 4525 4507 4482 4451 4423 4405 4401\n[25005] 4414 4439 4472 4509 4541 4567 4585 4595 4597 4593 4583 4571 4560 4552\n[25019] 4548 4549 4553 4557 4557 4553 4545 4534 4525 4519 4519 4524 4532 4540\n[25033] 4547 4550 4550 4546 4538 4526 4510 4498 4496 4501 4505 4509 4511 4512\n[25047] 4512 4512 4512 4511 4510 4510 4509 4509 4508 4506 4505 4503 4501 4498\n[25061] 4493 4487 4483 4478 4473 4468 4466 4466 4468 4471 4474 4479 4484 4488\n[25075] 4490 4490 4489 4487 4484 4482 4480 4478 4477 4476 4476 4476 4475 4472\n[25089] 4470 4468 4467 4468 4470 4474 4478 4481 4482 4482 4480 4479 4478 4478\n[25103] 4478 4478 4479 4480 4481 4481 4480 4478 4475 4472 4469 4466 4463 4461\n[25117] 4458 4455 4450 4444 4438 4434 4430 4429 4429 4432 4436 4440 4443 4446\n[25131] 4447 4447 4445 4442 4438 4434 4431 4429 4429 4430 4433 4438 4442 4446\n[25145] 4449 4450 4449 4448 4446 4446 4447 4448 4451 4454 4457 4459 4460 4458\n[25159] 4454 4450 4445 4441 4437 4434 4433 4433 4436 4440 4446 4452 4455 4458\n[25173] 4460 4463 4464 4464 4463 4461 4459 4456 4453 4450 4449 4448 4447 4448\n[25187] 4449 4450 4452 4453 4453 4452 4450 4450 4451 4453 4456 4459 4461 4463\n[25201]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25215]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25229]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25243]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25257]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25271]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25285]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25299]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25313]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25327]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25341]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25355]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25369]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25383]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25397]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25411]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25425]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25439]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25453]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25467]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25481]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25495]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25509]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25523]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25537]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25551]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25565]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25579]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25593]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25607]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25621]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25635]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25649]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25663]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25677]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25691]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25705]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25719]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25733]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25747]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25761]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25775]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25789]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25803]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25817]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25831]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25845]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25859]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25873]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25887]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25901]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25915]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25929]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25943]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25957]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25971]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25985]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[25999]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26013]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26027]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26041]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26055]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26069]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26083]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26097]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26111]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26125]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26139]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26153]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26167]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26181]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26195]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26209]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26223]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26237]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26251]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26265]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26279]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26293]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26307]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26321]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26335]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26349]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26363]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26377]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26391]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26405]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26419]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26433]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[26447]   NA   NA   NA   NA   NA    7   25   46   54   52   47   40   28   17\n[26461]   14   18   30   45   58   72   78   85  100  118  143  167  191  208\n[26475]  215  215  212  208  210  212  217  231  262  314  387  472  551  623\n[26489]  671  710  740  769  795  823  843  874  934  994 1025 1059 1136 1222\n[26503] 1293 1358 1387 1439 1517 1637 1795 1955 2103 2240 2387 2551 2727 2918\n[26517] 3114 3297 3433 3540 3566 3599 3645 3714 3762 3829 3916 4014 4102 4179\n[26531] 4237 4278 4301 4309 4303 4286 4259 4231 4212 4205 4218 4239 4258 4276\n[26545] 4290 4299 4303 4296 4264 4226 4193 4167 4154 4153 4168 4195 4234 4276\n[26559] 4313 4340 4349 4349 4347 4349 4368 4390 4399 4405 4411 4414 4415 4415\n[26573] 4418 4426 4446 4476 4514 4554 4589 4615 4626 4621 4597 4568 4550 4547\n[26587] 4569 4608 4653 4693 4717 4723 4705 4672 4629 4584 4541 4505 4480 4466\n[26601] 4464 4471 4487 4508 4528 4544 4545 4540 4524 4509 4501 4500 4509 4523\n[26615] 4535 4544 4544 4536 4515 4486 4465 4444 4428 4419 4434 4458 4498 4539\n[26629] 4579 4609 4621 4618 4599 4574 4551 4535 4536 4546 4560 4575 4585 4589\n[26643] 4586 4580 4583 4586 4590 4591 4613 4634 4645 4651 4640 4638 4675 4717\n[26657] 4740 4745 4727 4700 4677 4665 4676 4702 4734 4759 4761 4745 4708 4667\n[26671] 4639 4619 4603 4600 4613 4638 4657 4680 4710 4740 4766 4789 4796 4796\n[26685] 4781 4760 4737 4716 4703 4700 4711 4732 4759 4784 4798 4798 4781 4751\n[26699] 4711 4669 4632 4609 4610 4627 4652 4679 4703 4719 4725 4720 4708 4691\n[26713] 4672 4652 4632 4615 4602 4593 4589 4591 4600 4610 4620 4627 4643 4648\n[26727] 4645 4621 4576 4497 4383 4214 3987 3667 3256 2908 2998 3172 3246 3280\n[26741] 3343 3393 3441 3473 3509 3538 3568 3587 3593 3580 3547 3500 3454 3420\n[26755] 3419 3444 3491 3554 3627 3700 3764 3818 3856 3890 3928 3966 3998 4029\n[26769] 4040 4053 4058 4074 4100 4143 4206 4276 4355 4426 4486 4537 4579 4598\n[26783] 4579 4562 4568 4595 4610 4627 4653 4672 4568 4452 4166 3927 3839 3780\n[26797] 3680 3552 3389 3296 3473 3693 3790 3826 3821 3795 3791 3787 3772 3758\n[26811] 3748 3745 3741 3738 3723 3702 3667 3630 3595 3565 3545 3535 3538 3554\n[26825] 3589 3637 3700 3767 3833 3891 3940 3979 4011 4031 4038 4027 3990 3930\n[26839] 3842 3737 3619 3473 3285 3072 2929 2811 2768 2744 2732 2705 2674 2624\n[26853] 2561 2486 2424 2378 2387 2421 2513 2606 2676 2751 2989 3218 3470 3702\n[26867] 3950 4157 4302 4385 4442 4471 4488 4487 4461 4413 4339 4251 4155 4058\n[26881] 3971 3884 3796 3699 3583 3512 3498 3548 3595 3642 3642 3640 3674 3708\n[26895] 3697 3674 3653 3623 3575 3482 3322 3130 2944 2789 2673 2590 2509 2439\n[26909] 2370 2320 2311 2338 2433 2557 2703 2860 3022 3185 3348 3506 3654 3782\n[26923] 3879 3937 3945 3915 3853 3781 3718 3679 3678 3715 3791 3868 3924 3945\n[26937] 3935 3918 3929 3864 3498 3122 2907 2815 2854 2940 3040 3150 3284 3424\n[26951] 3553 3668 3761 3834 3889 3929 3955 3975 3993 4012 4036 4063 4090 4116\n[26965] 4139 4160 4174 4181 4178 4168 4149 4127 4109 4098 4101 4109 4119 4119\n[26979] 4103 4069 4022 3967 3919 3881 3866 3868 3890 3925 3969 4018 4071 4127\n[26993] 4189 4246 4292 4314 4300 4261 4207 4154 4118 4108 4134 4189 4267 4360\n[27007] 4452 4528 4561 4560 4515 4449 4367 4290 4230 4193 4190 4213 4260 4314\n[27021] 4360 4390 4393 4375 4339 4295 4252 4215 4195 4185 4184 4188 4198 4213\n[27035] 4233 4264 4316 4389 4486 4596 4711 4815 4892 4940 4954 4942 4907 4860\n[27049] 4808 4760 4723 4697 4682 4675 4673 4674 4674 4676 4680 4683 4684 4682\n[27063] 4672 4659 4644 4633 4633 4645 4669 4697 4718 4722 4692 4630 4536 4392\n[27077] 4200 4005 3925 3938 4142 4364 4410 4419 4452 4493 4522 4542 4544 4539\n[27091] 4528 4520 4519 4523 4532 4541 4545 4539 4520 4489 4444 4400 4365 4346\n[27105] 4347 4368 4403 4449 4489 4530 4558 4579 4587 4587 4578 4566 4554 4545\n[27119] 4541 4542 4547 4552 4553 4551 4543 4534 4526 4522 4525 4532 4543 4554\n[27133] 4561 4565 4563 4557 4545 4528 4504 4485 4481 4486 4493 4503 4507 4511\n[27147] 4512 4513 4512 4511 4511 4510 4509 4508 4507 4506 4504 4502 4499 4495\n[27161] 4488 4480 4474 4467 4460 4454 4452 4452 4455 4459 4467 4475 4485 4492\n[27175] 4496 4497 4496 4493 4489 4484 4481 4479 4478 4477 4478 4478 4478 4477\n[27189] 4476 4474 4471 4470 4472 4475 4479 4482 4483 4484 4483 4483 4482 4481\n[27203] 4480 4479 4478 4478 4478 4478 4477 4475 4474 4472 4469 4467 4465 4464\n[27217] 4461 4458 4452 4447 4442 4438 4436 4434 4436 4438 4442 4445 4448 4450\n[27231] 4451 4450 4447 4443 4439 4435 4432 4430 4431 4433 4437 4442 4446 4450\n[27245] 4453 4454 4453 4452 4452 4452 4453 4454 4456 4458 4460 4462 4462 4460\n[27259] 4457 4454 4451 4447 4444 4441 4438 4437 4438 4442 4450 4458 4460 4461\n[27273] 4463 4465 4466 4466 4465 4464 4463 4461 4458 4456 4454 4453 4452 4452\n[27287] 4452 4453 4455 4457 4458 4458 4457 4456 4457 4459 4461 4463 4464 4465\n[27301]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27315]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27329]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27343]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27357]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27371]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27385]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27399]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27413]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27427]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27441]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27455]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27469]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27483]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27497]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27511]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27525]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27539]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27553]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27567]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27581]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27595]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27609]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27623]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27637]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27651]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27665]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27679]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27693]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27707]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27721]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27735]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27749]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27763]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27777]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27791]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27805]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27819]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27833]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27847]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27861]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27875]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27889]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27903]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27917]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27931]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27945]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27959]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27973]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[27987]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28001]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28015]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28029]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28043]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28057]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28071]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28085]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28099]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28113]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28127]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28141]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28155]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28169]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28183]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28197]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28211]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28225]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28239]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28253]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28267]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28281]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28295]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28309]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28323]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28337]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28351]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28365]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28379]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28393]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28407]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28421]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28435]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28449]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28463]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28477]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28491]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28505]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28519]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28533]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[28547]   NA   NA   NA   NA   NA   15   36   57   60   52   46   39   28   18\n[28561]   15   19   30   45   60   73   84   96  114  138  164  189  208  218\n[28575]  215  206  195  188  189  198  217  245  283  334  398  469  539  604\n[28589]  659  706  749  786  816  843  873  913  968 1023 1064 1114 1191 1273\n[28603] 1333 1375 1404 1449 1530 1644 1780 1925 2077 2233 2396 2571 2757 2956\n[28617] 3159 3338 3465 3550 3609 3665 3732 3800 3848 3905 3985 4077 4160 4228\n[28631] 4276 4306 4319 4318 4305 4282 4255 4231 4220 4223 4237 4257 4275 4291\n[28645] 4306 4314 4309 4287 4248 4203 4165 4140 4131 4140 4165 4203 4249 4295\n[28659] 4332 4356 4365 4365 4365 4370 4384 4400 4412 4420 4425 4425 4419 4411\n[28673] 4407 4412 4431 4462 4501 4542 4578 4605 4617 4613 4594 4572 4558 4561\n[28687] 4587 4627 4672 4710 4732 4733 4711 4674 4628 4582 4543 4514 4496 4490\n[28701] 4493 4504 4520 4536 4547 4551 4546 4534 4518 4503 4495 4495 4504 4516\n[28715] 4527 4535 4540 4536 4522 4498 4470 4443 4424 4417 4432 4462 4504 4548\n[28729] 4586 4611 4617 4607 4585 4559 4537 4527 4531 4546 4565 4583 4594 4598\n[28743] 4594 4587 4583 4581 4580 4584 4600 4621 4640 4652 4653 4662 4693 4732\n[28757] 4759 4768 4754 4729 4705 4692 4698 4718 4743 4759 4754 4731 4695 4657\n[28771] 4626 4599 4578 4570 4583 4612 4645 4677 4703 4726 4747 4766 4781 4786\n[28785] 4778 4761 4740 4722 4712 4711 4722 4742 4767 4789 4801 4799 4783 4756\n[28799] 4722 4689 4661 4645 4644 4656 4674 4693 4708 4718 4719 4714 4703 4687\n[28813] 4670 4651 4631 4614 4600 4593 4594 4602 4616 4631 4646 4657 4667 4667\n[28827] 4653 4618 4556 4459 4322 4126 3858 3513 3128 2838 2784 2850 2933 3005\n[28841] 3090 3167 3237 3294 3349 3399 3449 3493 3527 3547 3550 3541 3529 3523\n[28855] 3537 3564 3603 3647 3694 3737 3772 3792 3797 3801 3813 3831 3843 3852\n[28869] 3854 3861 3877 3914 3973 4053 4147 4241 4328 4397 4445 4491 4544 4562\n[28883] 4507 4452 4465 4511 4542 4549 4527 4458 4333 4168 4014 3884 3822 3769\n[28897] 3684 3564 3435 3396 3531 3720 3838 3882 3870 3837 3809 3783 3755 3730\n[28911] 3714 3709 3710 3715 3713 3705 3685 3663 3639 3619 3603 3594 3591 3598\n[28925] 3617 3648 3692 3741 3789 3828 3857 3877 3889 3894 3891 3876 3844 3793\n[28939] 3722 3639 3548 3446 3319 3174 3012 2879 2817 2799 2800 2797 2781 2740\n[28953] 2669 2572 2466 2368 2305 2287 2333 2421 2543 2704 2916 3132 3320 3532\n[28967] 3804 4063 4233 4329 4391 4434 4466 4484 4480 4456 4408 4344 4268 4187\n[28981] 4106 4023 3937 3847 3759 3693 3658 3653 3659 3667 3667 3677 3709 3742\n[28995] 3753 3744 3722 3690 3641 3532 3324 3072 2833 2654 2555 2505 2463 2419\n[29009] 2372 2340 2344 2400 2517 2671 2836 3002 3163 3317 3464 3603 3730 3837\n[29023] 3915 3956 3953 3911 3840 3759 3687 3641 3633 3662 3720 3785 3836 3860\n[29037] 3855 3831 3781 3633 3330 3022 2869 2844 2905 2996 3077 3169 3289 3428\n[29051] 3563 3685 3786 3867 3929 3978 4015 4047 4077 4108 4142 4176 4208 4238\n[29065] 4263 4284 4298 4304 4301 4289 4267 4243 4220 4205 4200 4202 4207 4205\n[29079] 4189 4157 4110 4055 4004 3964 3943 3940 3954 3979 4013 4051 4093 4137\n[29093] 4184 4225 4252 4256 4232 4186 4129 4074 4039 4034 4064 4125 4210 4308\n[29107] 4408 4490 4536 4546 4519 4466 4397 4328 4269 4231 4218 4228 4257 4292\n[29121] 4324 4342 4343 4329 4304 4273 4243 4218 4204 4198 4199 4204 4212 4222\n[29135] 4236 4260 4300 4364 4455 4565 4680 4783 4858 4904 4919 4910 4883 4844\n[29149] 4800 4757 4722 4697 4681 4674 4674 4680 4690 4701 4711 4716 4712 4699\n[29163] 4674 4643 4613 4593 4590 4607 4640 4680 4713 4726 4708 4660 4582 4450\n[29177] 4250 4035 3883 3850 3984 4160 4266 4325 4383 4438 4479 4505 4513 4509\n[29191] 4501 4495 4498 4508 4525 4542 4552 4549 4528 4488 4431 4368 4312 4273\n[29205] 4256 4264 4293 4339 4390 4442 4486 4522 4542 4552 4550 4543 4534 4527\n[29219] 4526 4529 4535 4541 4545 4544 4539 4532 4527 4526 4531 4541 4554 4565\n[29233] 4573 4576 4573 4564 4547 4523 4495 4472 4463 4465 4475 4488 4498 4506\n[29247] 4510 4511 4511 4511 4510 4509 4508 4506 4505 4504 4503 4501 4497 4492\n[29261] 4484 4474 4465 4456 4448 4442 4441 4443 4448 4456 4467 4479 4490 4499\n[29275] 4504 4505 4503 4499 4493 4486 4482 4480 4479 4480 4481 4482 4482 4482\n[29289] 4480 4477 4474 4472 4473 4476 4478 4481 4483 4484 4484 4484 4483 4482\n[29303] 4480 4479 4478 4477 4477 4476 4475 4474 4472 4470 4468 4467 4466 4465\n[29317] 4464 4460 4455 4450 4446 4445 4444 4444 4446 4448 4450 4452 4453 4454\n[29331] 4454 4453 4450 4447 4444 4440 4437 4435 4436 4439 4443 4447 4452 4456\n[29345] 4458 4459 4459 4458 4458 4459 4459 4460 4461 4462 4464 4464 4463 4461\n[29359] 4460 4458 4457 4455 4452 4448 4443 4440 4442 4446 4453 4459 4462 4462\n[29373] 4463 4465 4466 4467 4467 4466 4466 4465 4463 4461 4460 4459 4458 4457\n[29387] 4456 4457 4459 4461 4463 4463 4463 4463 4464 4465 4466 4467 4467 4467\n[29401]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29415]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29429]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29443]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29457]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29471]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29485]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29499]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29513]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29527]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29541]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29555]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29569]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29583]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29597]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29611]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29625]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29639]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29653]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29667]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29681]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29695]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29709]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29723]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29737]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29751]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29765]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29779]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29793]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29807]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29821]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29835]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29849]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29863]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29877]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29891]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29905]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29919]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29933]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29947]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29961]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29975]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[29989]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30003]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30017]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30031]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30045]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30059]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30073]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30087]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30101]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30115]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30129]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30143]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30157]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30171]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30185]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30199]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30213]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30227]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30241]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30255]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30269]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30283]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30297]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30311]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30325]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30339]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30353]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30367]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30381]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30395]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30409]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30423]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30437]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30451]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30465]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30479]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30493]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30507]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30521]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30535]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30549]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30563]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30577]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30591]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30605]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30619]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30633]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[30647]   NA   NA   NA   NA   NA   20   45   69   61   47   43   39   29   21\n[30661]   20   23   34   47   63   77   92  109  131  157  185  210  224  229\n[30675]  219  202  187  176  181  195  224  259  301  348  402  461  523  583\n[30689]  642  698  753  799  831  858  899  947 1000 1055 1098 1153 1233 1315\n[30703] 1360 1386 1415 1453 1548 1662 1785 1920 2069 2229 2399 2577 2767 2964\n[30717] 3174 3358 3477 3545 3635 3696 3769 3836 3875 3933 4021 4119 4198 4260\n[30731] 4298 4318 4324 4318 4302 4278 4251 4230 4228 4239 4256 4276 4292 4305\n[30745] 4322 4329 4314 4281 4235 4184 4146 4121 4118 4133 4167 4212 4263 4311\n[30759] 4347 4370 4377 4378 4381 4387 4397 4409 4424 4436 4441 4439 4425 4409\n[30773] 4397 4396 4416 4449 4489 4531 4568 4595 4608 4607 4592 4576 4566 4571\n[30787] 4600 4641 4685 4722 4739 4735 4709 4668 4620 4574 4541 4519 4510 4510\n[30801] 4518 4530 4545 4557 4560 4554 4543 4527 4513 4500 4494 4494 4503 4513\n[30815] 4521 4526 4535 4538 4529 4510 4478 4448 4430 4425 4443 4475 4516 4558\n[30829] 4590 4608 4606 4591 4566 4541 4525 4519 4529 4548 4570 4591 4603 4607\n[30843] 4603 4596 4589 4585 4581 4583 4589 4602 4622 4643 4653 4672 4706 4743\n[30857] 4772 4785 4774 4752 4728 4713 4714 4726 4742 4751 4736 4709 4675 4641\n[30871] 4609 4581 4552 4536 4550 4580 4623 4666 4688 4705 4722 4736 4758 4772\n[30885] 4770 4758 4742 4728 4721 4721 4734 4752 4775 4794 4803 4800 4784 4759\n[30899] 4732 4706 4686 4676 4675 4684 4695 4707 4713 4715 4711 4704 4694 4681\n[30913] 4665 4647 4628 4609 4595 4589 4595 4609 4629 4650 4669 4684 4688 4681\n[30927] 4654 4606 4526 4412 4259 4053 3778 3463 3121 2850 2728 2692 2756 2824\n[30941] 2926 3016 3099 3168 3237 3298 3362 3421 3479 3529 3572 3605 3638 3663\n[30955] 3704 3728 3756 3765 3778 3782 3788 3772 3723 3684 3672 3686 3680 3671\n[30969] 3659 3659 3681 3736 3829 3945 4067 4181 4270 4337 4367 4397 4475 4520\n[30983] 4415 4308 4353 4427 4462 4456 4397 4268 4161 3972 3976 3918 3883 3815\n[30997] 3730 3634 3536 3506 3620 3776 3870 3915 3890 3842 3788 3738 3684 3642\n[31011] 3612 3602 3603 3618 3626 3637 3634 3636 3631 3633 3633 3638 3639 3646\n[31025] 3655 3673 3701 3732 3758 3777 3782 3778 3768 3754 3739 3720 3693 3655\n[31039] 3602 3537 3460 3405 3347 3301 3131 2983 2934 2931 2949 2966 2966 2934\n[31053] 2858 2742 2601 2452 2333 2255 2254 2322 2485 2706 2882 3078 3157 3318\n[31067] 3652 3995 4164 4245 4302 4349 4388 4424 4438 4441 4418 4385 4335 4279\n[31081] 4216 4149 4073 3996 3916 3844 3788 3743 3714 3693 3688 3697 3730 3765\n[31095] 3790 3794 3769 3723 3675 3567 3296 2987 2700 2493 2432 2434 2429 2413\n[31109] 2385 2370 2392 2471 2615 2797 2975 3146 3304 3448 3582 3702 3812 3899\n[31123] 3960 3984 3965 3911 3831 3741 3663 3609 3597 3615 3664 3719 3762 3782\n[31137] 3767 3710 3615 3434 3171 2908 2859 2894 2965 3056 3098 3166 3283 3428\n[31151] 3566 3696 3799 3886 3951 4007 4053 4098 4140 4183 4225 4266 4303 4336\n[31165] 4363 4386 4401 4409 4407 4398 4378 4355 4332 4314 4304 4300 4300 4297\n[31179] 4282 4255 4210 4156 4105 4059 4035 4024 4030 4045 4070 4097 4129 4158\n[31193] 4190 4212 4220 4206 4170 4117 4054 3998 3966 3962 3997 4061 4147 4244\n[31207] 4344 4430 4481 4501 4486 4450 4398 4344 4294 4258 4238 4234 4247 4265\n[31221] 4282 4292 4289 4278 4265 4250 4235 4224 4218 4218 4222 4229 4238 4247\n[31235] 4252 4263 4285 4335 4419 4527 4640 4740 4804 4839 4848 4843 4826 4802\n[31249] 4770 4737 4708 4685 4671 4665 4668 4677 4693 4710 4724 4731 4724 4702\n[31263] 4663 4617 4572 4540 4536 4556 4598 4648 4693 4720 4710 4674 4623 4533\n[31277] 4344 4130 3927 3804 3885 4016 4136 4223 4308 4375 4423 4452 4460 4459\n[31291] 4452 4451 4461 4481 4508 4535 4552 4553 4529 4482 4410 4329 4250 4187\n[31305] 4149 4139 4156 4197 4250 4313 4369 4424 4457 4484 4493 4498 4497 4498\n[31319] 4503 4511 4521 4530 4536 4538 4536 4532 4530 4531 4539 4550 4564 4576\n[31333] 4583 4584 4579 4567 4546 4519 4487 4460 4449 4448 4460 4475 4491 4502\n[31347] 4508 4509 4510 4510 4509 4508 4506 4504 4504 4503 4502 4500 4496 4490\n[31361] 4481 4470 4459 4448 4439 4433 4434 4439 4448 4459 4473 4487 4498 4507\n[31375] 4511 4512 4509 4504 4495 4487 4481 4479 4479 4482 4484 4486 4487 4487\n[31389] 4484 4480 4476 4474 4474 4476 4478 4480 4482 4484 4485 4484 4483 4482\n[31403] 4481 4480 4479 4478 4477 4476 4474 4472 4469 4467 4466 4466 4466 4466\n[31417] 4465 4463 4457 4452 4451 4452 4452 4453 4455 4458 4458 4459 4459 4458\n[31431] 4457 4456 4455 4453 4450 4447 4444 4443 4444 4447 4450 4453 4458 4462\n[31445] 4464 4464 4464 4464 4464 4464 4464 4465 4465 4466 4467 4467 4465 4463\n[31459] 4462 4462 4461 4461 4457 4454 4447 4443 4446 4451 4457 4461 4462 4462\n[31473] 4463 4464 4466 4467 4468 4468 4469 4469 4468 4466 4465 4464 4462 4461\n[31487] 4460 4461 4463 4465 4467 4468 4468 4469 4469 4470 4470 4470 4470 4469\n[31501]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31515]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31529]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31543]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31557]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31571]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31585]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31599]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31613]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31627]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31641]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31655]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31669]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31683]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31697]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31711]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31725]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31739]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31753]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31767]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31781]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31795]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31809]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31823]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31837]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31851]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31865]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31879]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31893]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31907]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31921]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31935]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31949]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31963]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31977]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[31991]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32005]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32019]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32033]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32047]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32061]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32075]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32089]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32103]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32117]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32131]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32145]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32159]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32173]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32187]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32201]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32215]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32229]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32243]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32257]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32271]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32285]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32299]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32313]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32327]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32341]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32355]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32369]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32383]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32397]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32411]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32425]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32439]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32453]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32467]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32481]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32495]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32509]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32523]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32537]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32551]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32565]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32579]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32593]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32607]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32621]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32635]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32649]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32663]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32677]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32691]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32705]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32719]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32733]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[32747]   NA   NA   NA   NA   NA    7   45   58   55   45   40   35   30   26\n[32761]   28   34   43   55   70   86  105  126  150  176  200  220  232  235\n[32775]  225  208  192  183  189  209  242  282  322  363  408  458  514  574\n[32789]  638  702  764  815  850  882  925  975 1024 1071 1117 1176 1254 1330\n[32803] 1382 1417 1450 1499 1583 1688 1804 1933 2077 2236 2406 2585 2773 2969\n[32817] 3173 3361 3514 3628 3710 3758 3786 3810 3858 3932 4032 4134 4215 4271\n[32831] 4303 4317 4319 4311 4293 4270 4246 4231 4234 4250 4272 4294 4311 4326\n[32845] 4339 4341 4322 4283 4232 4180 4140 4118 4118 4139 4176 4224 4275 4321\n[32859] 4356 4378 4387 4389 4393 4399 4409 4422 4440 4453 4457 4449 4430 4406\n[32873] 4388 4385 4404 4438 4480 4523 4561 4588 4601 4601 4589 4576 4570 4580\n[32887] 4609 4650 4692 4724 4737 4729 4699 4656 4609 4567 4539 4524 4521 4527\n[32901] 4537 4551 4565 4574 4573 4563 4548 4530 4516 4507 4504 4506 4513 4519\n[32915] 4525 4530 4536 4538 4529 4511 4484 4458 4443 4444 4462 4494 4531 4566\n[32929] 4590 4598 4590 4571 4548 4527 4517 4518 4531 4553 4578 4599 4610 4613\n[32943] 4608 4601 4595 4590 4586 4583 4582 4586 4596 4613 4638 4670 4708 4746\n[32957] 4774 4788 4783 4765 4745 4729 4724 4726 4730 4726 4708 4681 4653 4623\n[32971] 4592 4562 4533 4517 4525 4553 4595 4637 4667 4687 4703 4720 4741 4757\n[32985] 4760 4755 4745 4736 4733 4737 4749 4767 4786 4800 4806 4800 4784 4763\n[32999] 4739 4719 4704 4697 4696 4701 4706 4710 4708 4703 4695 4687 4679 4670\n[33013] 4659 4643 4623 4603 4589 4585 4594 4614 4638 4663 4684 4697 4696 4681\n[33027] 4644 4582 4489 4361 4190 3977 3718 3437 3159 2937 2799 2743 2747 2793\n[33041] 2872 2959 3043 3117 3188 3252 3316 3379 3448 3523 3605 3692 3778 3856\n[33055] 3921 3953 3948 3915 3875 3840 3812 3753 3637 3535 3518 3536 3536 3514\n[33069] 3490 3476 3499 3563 3678 3818 3956 4077 4162 4220 4256 4299 4362 4385\n[33083] 4319 4250 4270 4332 4374 4376 4333 4273 4237 4206 4172 4112 4014 3906\n[33097] 3809 3727 3666 3656 3717 3806 3867 3886 3855 3794 3717 3637 3558 3491\n[33111] 3444 3420 3417 3431 3451 3475 3497 3522 3549 3580 3610 3639 3659 3675\n[33125] 3686 3698 3713 3726 3732 3729 3711 3684 3652 3621 3593 3570 3549 3526\n[33139] 3494 3438 3357 3297 3303 3304 3226 3137 3101 3112 3146 3180 3193 3170\n[33153] 3094 2971 2807 2627 2462 2338 2287 2323 2454 2624 2771 2879 2947 3116\n[33167] 3485 3869 4058 4128 4166 4204 4245 4286 4320 4345 4355 4354 4339 4315\n[33181] 4279 4235 4179 4116 4046 3973 3901 3833 3775 3734 3716 3721 3748 3783\n[33195] 3812 3820 3795 3741 3653 3491 3218 2890 2581 2374 2338 2380 2410 2413\n[33209] 2398 2397 2441 2545 2716 2915 3109 3285 3441 3578 3700 3808 3901 3972\n[33223] 4014 4020 3987 3920 3830 3735 3653 3597 3577 3588 3623 3666 3699 3708\n[33237] 3681 3609 3485 3308 3099 2934 2889 2926 2979 3036 3080 3148 3269 3417\n[33251] 3562 3691 3797 3882 3950 4009 4064 4118 4172 4226 4276 4323 4365 4401\n[33265] 4430 4453 4470 4482 4485 4481 4469 4452 4432 4414 4400 4391 4386 4380\n[33279] 4367 4344 4307 4261 4212 4167 4135 4116 4112 4119 4135 4155 4176 4195\n[33293] 4209 4212 4199 4168 4119 4058 3994 3939 3908 3908 3943 4006 4088 4179\n[33307] 4271 4348 4398 4422 4419 4398 4368 4333 4298 4267 4242 4228 4226 4233\n[33321] 4240 4241 4236 4228 4227 4229 4230 4230 4234 4241 4249 4261 4276 4284\n[33335] 4279 4269 4270 4302 4380 4485 4595 4683 4730 4745 4745 4742 4743 4741\n[33349] 4728 4707 4685 4667 4655 4651 4655 4667 4684 4704 4720 4728 4718 4689\n[33363] 4639 4580 4523 4483 4475 4497 4545 4604 4659 4693 4696 4675 4633 4556\n[33377] 4425 4248 4043 3901 3894 3970 4069 4163 4248 4314 4359 4384 4391 4389\n[33391] 4386 4391 4410 4442 4481 4517 4541 4544 4519 4465 4382 4284 4185 4099\n[33405] 4038 4007 4008 4035 4083 4145 4212 4276 4331 4375 4405 4428 4444 4459\n[33419] 4475 4493 4508 4521 4531 4536 4537 4536 4536 4540 4548 4560 4574 4585\n[33433] 4590 4589 4582 4567 4544 4515 4484 4459 4447 4447 4458 4474 4491 4503\n[33447] 4510 4511 4511 4510 4509 4508 4506 4504 4503 4503 4502 4500 4496 4489\n[33461] 4479 4467 4455 4443 4434 4429 4432 4441 4454 4468 4483 4496 4507 4514\n[33475] 4517 4517 4512 4504 4494 4485 4478 4476 4478 4482 4486 4489 4491 4491\n[33489] 4488 4484 4479 4476 4476 4476 4478 4480 4483 4485 4486 4485 4484 4484\n[33503] 4484 4483 4483 4482 4480 4477 4473 4469 4465 4462 4462 4463 4464 4466\n[33517] 4466 4465 4461 4458 4457 4457 4457 4457 4459 4462 4463 4463 4463 4462\n[33531] 4462 4461 4460 4459 4457 4455 4453 4452 4454 4456 4459 4462 4465 4468\n[33545] 4469 4469 4468 4467 4466 4466 4466 4467 4467 4468 4468 4468 4468 4467\n[33559] 4466 4464 4462 4460 4458 4454 4451 4449 4451 4455 4459 4463 4464 4464\n[33573] 4464 4465 4466 4468 4469 4471 4472 4472 4472 4470 4469 4467 4466 4464\n[33587] 4463 4463 4464 4466 4469 4471 4472 4472 4472 4472 4471 4471 4470 4469\n[33601]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33615]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33629]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33643]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33657]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33671]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33685]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33699]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33713]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33727]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33741]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33755]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33769]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33783]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33797]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33811]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33825]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33839]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33853]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33867]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33881]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33895]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33909]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33923]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33937]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33951]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33965]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33979]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[33993]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34007]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34021]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34035]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34049]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34063]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34077]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34091]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34105]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34119]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34133]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34147]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34161]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34175]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34189]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34203]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34217]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34231]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34245]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34259]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34273]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34287]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34301]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34315]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34329]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34343]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34357]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34371]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34385]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34399]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34413]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34427]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34441]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34455]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34469]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34483]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34497]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34511]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34525]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34539]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34553]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34567]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34581]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34595]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34609]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34623]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34637]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34651]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34665]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34679]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34693]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34707]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34721]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34735]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34749]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34763]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34777]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34791]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34805]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34819]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34833]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[34847]   NA   NA   NA   NA   NA   17   38   44   46   41   38   34   31   31\n[34861]   35   44   52   64   80   99  120  143  169  193  212  226  237  240\n[34875]  233  220  204  196  206  231  268  311  349  385  424  466  521  582\n[34889]  653  720  787  840  873  903  950 1000 1042 1084 1127 1182 1264 1346\n[34903] 1407 1456 1496 1549 1625 1722 1829 1953 2095 2251 2419 2595 2777 2966\n[34917] 3168 3367 3565 3727 3805 3833 3816 3786 3845 3921 4034 4141 4220 4272\n[34931] 4298 4305 4304 4295 4278 4259 4240 4230 4240 4260 4287 4313 4330 4343\n[34945] 4356 4358 4336 4295 4241 4186 4147 4126 4130 4153 4191 4238 4287 4331\n[34959] 4364 4386 4395 4398 4403 4410 4422 4436 4456 4471 4471 4458 4430 4401\n[34973] 4378 4372 4393 4430 4474 4519 4558 4586 4598 4597 4585 4573 4570 4581\n[34987] 4612 4653 4692 4721 4730 4719 4686 4642 4599 4561 4539 4529 4531 4540\n[35001] 4552 4566 4579 4587 4585 4576 4560 4542 4532 4525 4526 4529 4533 4536\n[35015] 4538 4538 4539 4537 4524 4506 4483 4464 4455 4461 4481 4512 4545 4573\n[35029] 4586 4587 4573 4552 4531 4516 4514 4522 4539 4561 4587 4609 4617 4617\n[35043] 4611 4604 4599 4596 4592 4587 4581 4576 4579 4587 4620 4658 4698 4738\n[35057] 4766 4784 4784 4772 4755 4737 4728 4722 4715 4702 4682 4656 4634 4609\n[35071] 4582 4553 4527 4510 4516 4536 4575 4614 4647 4672 4691 4708 4729 4746\n[35085] 4753 4752 4748 4744 4745 4752 4765 4781 4796 4807 4808 4801 4785 4765\n[35099] 4745 4728 4717 4710 4708 4709 4709 4706 4693 4681 4666 4659 4655 4655\n[35113] 4650 4639 4619 4598 4584 4580 4594 4617 4645 4672 4690 4699 4693 4670\n[35127] 4625 4553 4446 4305 4114 3902 3659 3421 3184 3006 2891 2858 2818 2835\n[35141] 2896 2978 3061 3129 3198 3253 3305 3359 3428 3519 3635 3769 3910 4038\n[35155] 4136 4175 4132 4046 3954 3874 3829 3762 3576 3399 3413 3449 3451 3415\n[35169] 3383 3343 3362 3408 3529 3671 3802 3925 4000 4063 4109 4159 4227 4266\n[35183] 4224 4177 4202 4253 4291 4312 4299 4313 4370 4479 4382 4307 4137 4001\n[35197] 3903 3840 3794 3780 3799 3830 3843 3826 3776 3697 3600 3495 3389 3296\n[35211] 3228 3186 3173 3184 3207 3244 3284 3337 3395 3465 3530 3596 3641 3678\n[35225] 3697 3710 3716 3717 3706 3684 3645 3598 3547 3500 3465 3440 3427 3419\n[35239] 3418 3388 3301 3202 3271 3322 3307 3275 3274 3304 3349 3399 3420 3409\n[35253] 3337 3219 3046 2851 2658 2497 2405 2385 2461 2564 2665 2725 2764 2878\n[35267] 3311 3766 3901 3951 3983 4014 4050 4094 4139 4185 4222 4255 4274 4286\n[35281] 4282 4269 4237 4195 4137 4071 3994 3915 3841 3783 3751 3743 3762 3792\n[35295] 3817 3824 3790 3718 3597 3407 3131 2812 2504 2278 2293 2373 2406 2417\n[35309] 2403 2413 2492 2622 2824 3035 3233 3411 3565 3697 3812 3909 3991 4049\n[35323] 4075 4066 4018 3939 3840 3738 3654 3593 3569 3571 3594 3623 3643 3641\n[35337] 3603 3524 3396 3242 3064 2943 2888 2922 2944 2999 3052 3126 3270 3425\n[35351] 3567 3689 3788 3868 3933 3991 4050 4112 4174 4238 4292 4342 4387 4427\n[35365] 4458 4484 4503 4519 4528 4534 4531 4524 4510 4494 4477 4463 4452 4444\n[35379] 4432 4415 4385 4349 4303 4260 4222 4196 4184 4184 4193 4207 4221 4231\n[35393] 4230 4217 4187 4142 4084 4018 3954 3900 3874 3874 3910 3967 4041 4120\n[35407] 4198 4262 4303 4324 4325 4319 4312 4301 4284 4259 4226 4201 4188 4190\n[35421] 4197 4198 4184 4173 4189 4214 4229 4237 4250 4265 4277 4295 4323 4338\n[35435] 4316 4285 4269 4278 4351 4443 4546 4624 4643 4632 4619 4617 4646 4674\n[35449] 4680 4668 4654 4641 4632 4631 4636 4648 4664 4683 4700 4709 4698 4667\n[35463] 4606 4535 4466 4417 4409 4432 4487 4555 4617 4661 4669 4654 4618 4557\n[35477] 4474 4362 4159 4003 3962 4000 4062 4139 4210 4267 4301 4317 4318 4312\n[35491] 4310 4319 4349 4392 4442 4488 4517 4524 4498 4442 4350 4240 4126 4020\n[35505] 3941 3888 3870 3880 3918 3973 4042 4115 4186 4250 4303 4347 4384 4416\n[35519] 4448 4477 4500 4517 4530 4538 4542 4543 4545 4550 4559 4570 4582 4592\n[35533] 4595 4592 4582 4566 4543 4515 4487 4464 4455 4457 4469 4485 4501 4512\n[35547] 4517 4516 4512 4509 4507 4507 4505 4504 4503 4503 4502 4501 4497 4490\n[35561] 4479 4467 4455 4443 4434 4430 4437 4449 4465 4481 4495 4506 4515 4520\n[35575] 4522 4520 4513 4503 4492 4481 4474 4472 4475 4481 4486 4491 4495 4496\n[35589] 4493 4488 4483 4479 4477 4477 4478 4481 4486 4489 4489 4488 4487 4486\n[35603] 4487 4488 4489 4488 4486 4481 4475 4468 4463 4459 4459 4460 4463 4466\n[35617] 4468 4468 4466 4463 4462 4461 4459 4458 4460 4463 4465 4465 4466 4466\n[35631] 4466 4466 4465 4464 4463 4462 4460 4460 4462 4465 4467 4469 4472 4474\n[35645] 4474 4473 4470 4468 4467 4467 4468 4468 4469 4469 4469 4469 4470 4470\n[35659] 4468 4465 4461 4457 4455 4454 4454 4454 4456 4459 4462 4465 4466 4466\n[35673] 4467 4467 4468 4469 4472 4474 4475 4475 4475 4474 4472 4470 4469 4467\n[35687] 4466 4465 4465 4466 4469 4472 4473 4473 4473 4472 4471 4471 4471 4470\n[35701]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35715]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35729]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35743]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35757]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35771]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35785]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35799]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35813]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35827]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35841]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35855]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35869]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35883]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35897]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35911]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35925]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35939]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35953]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35967]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35981]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[35995]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36009]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36023]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36037]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36051]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36065]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36079]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36093]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36107]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36135]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36149]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36163]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36177]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36191]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36205]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36219]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36233]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36247]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36261]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36275]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36289]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36303]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36317]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36331]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36345]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36359]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36373]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36387]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36401]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36415]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36429]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36443]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36457]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36471]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36485]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36499]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36513]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36527]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36541]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36555]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36569]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36583]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36597]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36611]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36625]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36639]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36653]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36667]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36681]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36695]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36709]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36723]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36737]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36751]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36765]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36779]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36793]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36807]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36821]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36835]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36849]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36863]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36877]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36891]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36905]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36919]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36933]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[36947]   NA   NA   NA   NA   NA   17   33   40   41   40   38   36   34   34\n[36961]   38   46   56   70   89  112  137  163  186  205  219  230  239  244\n[36975]  241  232  219  213  225  254  296  341  382  418  455  497  551  617\n[36989]  692  763  820  864  899  933  972 1014 1056 1096 1139 1195 1273 1358\n[37003] 1430 1489 1539 1594 1662 1749 1853 1975 2116 2273 2438 2609 2784 2969\n[37017] 3169 3382 3602 3782 3877 3902 3880 3859 3882 3946 4043 4142 4218 4265\n[37031] 4285 4286 4278 4266 4252 4241 4234 4235 4249 4273 4302 4329 4346 4358\n[37045] 4371 4372 4352 4313 4259 4206 4168 4150 4155 4177 4213 4256 4300 4341\n[37059] 4372 4393 4404 4409 4414 4422 4435 4453 4472 4483 4478 4458 4426 4391\n[37073] 4367 4362 4384 4424 4472 4519 4559 4587 4598 4594 4581 4568 4566 4580\n[37087] 4610 4649 4685 4711 4717 4704 4673 4633 4594 4562 4544 4537 4540 4550\n[37101] 4563 4576 4587 4594 4594 4589 4578 4567 4560 4558 4559 4562 4563 4562\n[37115] 4557 4551 4542 4530 4512 4492 4473 4462 4461 4473 4496 4524 4552 4573\n[37129] 4579 4573 4556 4536 4520 4514 4520 4535 4555 4577 4600 4617 4623 4619\n[37143] 4613 4606 4603 4601 4599 4595 4587 4581 4580 4589 4612 4642 4677 4713\n[37157] 4745 4770 4778 4775 4762 4746 4732 4718 4702 4683 4665 4646 4627 4605\n[37171] 4582 4559 4539 4527 4529 4544 4572 4604 4636 4664 4686 4705 4722 4737\n[37185] 4747 4753 4753 4752 4756 4764 4777 4791 4803 4810 4808 4800 4784 4766\n[37199] 4750 4735 4725 4718 4714 4710 4703 4691 4669 4645 4625 4616 4621 4632\n[37213] 4638 4633 4616 4595 4582 4581 4596 4621 4649 4674 4689 4692 4681 4652\n[37227] 4602 4521 4403 4238 4029 3801 3586 3375 3164 2999 2917 2890 2869 2887\n[37241] 2957 3052 3133 3200 3255 3297 3324 3356 3415 3510 3645 3811 3990 4160\n[37255] 4278 4321 4247 4121 3989 3886 3815 3726 3573 3441 3419 3442 3444 3413\n[37269] 3362 3313 3296 3321 3393 3493 3597 3697 3783 3861 3936 4012 4084 4130\n[37283] 4134 4129 4147 4180 4211 4233 4248 4285 4356 4415 4381 4296 4182 4075\n[37297] 3998 3945 3904 3875 3854 3832 3797 3742 3663 3562 3445 3318 3192 3078\n[37311] 2987 2926 2896 2894 2915 2956 3013 3088 3181 3286 3395 3497 3579 3640\n[37325] 3677 3698 3703 3695 3673 3636 3583 3521 3458 3403 3365 3344 3343 3357\n[37339] 3381 3386 3351 3319 3332 3361 3383 3400 3426 3468 3521 3574 3604 3597\n[37353] 3539 3431 3272 3085 2888 2714 2590 2529 2536 2578 2630 2669 2716 2851\n[37367] 3159 3478 3666 3745 3778 3797 3823 3861 3911 3970 4029 4086 4137 4181\n[37381] 4213 4231 4232 4216 4181 4130 4063 3986 3908 3840 3793 3771 3772 3786\n[37395] 3799 3793 3753 3667 3526 3323 3063 2777 2516 2346 2320 2363 2394 2403\n[37409] 2393 2429 2557 2743 2943 3142 3333 3511 3665 3798 3910 4002 4075 4123\n[37423] 4137 4114 4054 3965 3860 3755 3667 3605 3572 3564 3572 3585 3591 3577\n[37437] 3531 3447 3323 3175 3017 2888 2816 2809 2865 2953 3052 3168 3314 3463\n[37451] 3592 3697 3783 3852 3908 3960 4018 4082 4151 4214 4269 4317 4363 4408\n[37465] 4444 4474 4496 4516 4533 4548 4558 4561 4555 4542 4523 4504 4488 4475\n[37479] 4464 4449 4426 4395 4356 4315 4277 4248 4230 4224 4227 4238 4247 4252\n[37493] 4243 4220 4180 4127 4065 4001 3941 3895 3873 3876 3906 3954 4014 4077\n[37507] 4135 4179 4205 4214 4216 4222 4239 4255 4255 4233 4190 4146 4126 4130\n[37521] 4153 4162 4134 4115 4152 4205 4232 4246 4265 4286 4307 4335 4375 4393\n[37535] 4361 4315 4297 4308 4347 4411 4490 4546 4543 4511 4486 4493 4547 4605\n[37549] 4629 4627 4616 4606 4604 4606 4612 4622 4635 4650 4666 4675 4666 4632\n[37563] 4566 4484 4405 4353 4342 4372 4431 4504 4571 4617 4633 4621 4591 4541\n[37577] 4470 4366 4225 4103 4048 4054 4092 4146 4199 4238 4258 4261 4252 4240\n[37591] 4236 4249 4283 4334 4392 4445 4480 4489 4465 4407 4317 4204 4085 3971\n[37605] 3876 3807 3769 3761 3783 3827 3892 3967 4048 4127 4202 4269 4329 4381\n[37619] 4428 4467 4498 4520 4535 4545 4550 4553 4556 4561 4569 4579 4589 4596\n[37633] 4598 4593 4582 4566 4544 4519 4495 4478 4473 4479 4492 4508 4521 4528\n[37647] 4528 4523 4515 4507 4504 4503 4504 4504 4505 4504 4503 4501 4497 4491\n[37661] 4481 4470 4458 4447 4439 4438 4446 4461 4478 4494 4506 4515 4521 4524\n[37675] 4524 4521 4513 4502 4490 4479 4472 4470 4473 4480 4486 4493 4497 4499\n[37689] 4497 4493 4487 4483 4480 4479 4481 4485 4490 4494 4494 4492 4491 4490\n[37703] 4491 4492 4494 4494 4492 4488 4481 4473 4467 4462 4461 4462 4465 4469\n[37717] 4472 4473 4472 4469 4466 4463 4461 4459 4461 4463 4466 4468 4469 4470\n[37731] 4470 4469 4468 4467 4466 4466 4465 4465 4467 4469 4471 4473 4475 4476\n[37745] 4476 4475 4472 4469 4469 4469 4469 4470 4471 4472 4472 4472 4472 4471\n[37759] 4469 4465 4460 4456 4455 4455 4457 4459 4461 4463 4465 4467 4469 4469\n[37773] 4470 4471 4472 4472 4474 4475 4476 4477 4477 4477 4475 4473 4471 4470\n[37787] 4468 4466 4466 4466 4469 4471 4473 4473 4472 4471 4471 4472 4472 4473\n[37801]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37815]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37829]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37843]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37857]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37871]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37885]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37899]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37913]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37927]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37941]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37955]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37969]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37983]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[37997]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38011]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38025]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38039]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38053]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38067]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38081]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38095]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38109]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38123]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38137]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38165]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38179]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38193]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38207]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38221]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38235]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38249]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38263]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38277]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38291]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38305]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38319]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38333]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38347]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38361]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38375]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38389]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38403]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38417]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38431]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38445]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38459]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38473]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38487]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38501]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38515]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38529]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38543]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38557]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38571]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38585]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38599]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38613]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38627]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38641]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38655]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38669]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38683]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38697]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38711]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38725]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38739]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38753]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38767]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38781]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38795]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38809]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38823]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38837]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38851]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38865]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38879]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38893]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38907]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38921]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38935]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38949]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38963]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38977]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[38991]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39005]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39019]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39033]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39047]   NA   NA   NA   NA   NA   11   31   39   40   39   39   39   37   37\n[39061]   40   46   57   74   97  124  152  180  200  215  225  232  242  249\n[39075]  250  245  232  227  243  276  324  376  421  462  500  542  599  665\n[39089]  742  815  855  887  922  959  993 1030 1075 1117 1159 1209 1291 1380\n[39103] 1458 1525 1577 1629 1691 1771 1871 1994 2138 2296 2460 2627 2792 2967\n[39117] 3161 3375 3610 3811 3909 3945 3933 3925 3928 3971 4053 4144 4212 4255\n[39131] 4267 4259 4243 4227 4217 4216 4221 4237 4258 4286 4318 4346 4359 4368\n[39145] 4384 4390 4372 4336 4284 4233 4199 4182 4187 4207 4238 4276 4316 4353\n[39159] 4382 4402 4413 4418 4422 4430 4446 4465 4482 4491 4480 4456 4417 4380\n[39173] 4355 4351 4378 4423 4474 4524 4563 4590 4597 4593 4575 4560 4559 4573\n[39187] 4603 4639 4672 4696 4701 4690 4662 4627 4595 4568 4553 4547 4550 4559\n[39201] 4570 4582 4592 4599 4603 4603 4599 4596 4594 4595 4598 4600 4597 4590\n[39215] 4577 4562 4543 4522 4496 4472 4456 4452 4459 4477 4502 4530 4554 4570\n[39229] 4570 4560 4543 4526 4517 4517 4533 4555 4576 4597 4616 4628 4627 4620\n[39243] 4612 4607 4607 4608 4609 4608 4600 4593 4594 4602 4614 4630 4654 4681\n[39257] 4715 4747 4763 4770 4764 4751 4740 4719 4694 4670 4656 4647 4631 4613\n[39271] 4595 4577 4564 4555 4555 4563 4582 4606 4635 4663 4685 4704 4717 4730\n[39285] 4743 4754 4756 4758 4763 4771 4782 4794 4803 4808 4804 4796 4782 4766\n[39299] 4752 4740 4730 4722 4715 4707 4697 4679 4652 4616 4589 4572 4587 4610\n[39313] 4624 4627 4609 4590 4580 4582 4600 4626 4654 4675 4685 4681 4664 4630\n[39327] 4577 4495 4377 4202 3977 3718 3524 3332 3117 2943 2896 2896 2881 2911\n[39341] 3007 3135 3208 3275 3318 3353 3351 3358 3405 3489 3622 3792 3973 4164\n[39355] 4275 4346 4232 4098 3953 3844 3782 3721 3606 3508 3489 3501 3484 3451\n[39369] 3375 3309 3254 3240 3255 3304 3371 3451 3548 3648 3756 3860 3952 4021\n[39383] 4056 4075 4096 4120 4142 4163 4180 4204 4258 4279 4290 4235 4204 4143\n[39397] 4098 4048 3996 3938 3878 3808 3724 3630 3518 3397 3262 3123 2983 2853\n[39411] 2746 2664 2618 2600 2614 2654 2722 2816 2939 3080 3229 3372 3488 3578\n[39425] 3634 3665 3673 3664 3636 3592 3530 3461 3395 3338 3307 3294 3307 3335\n[39439] 3380 3428 3434 3458 3432 3434 3467 3506 3544 3589 3643 3696 3724 3725\n[39453] 3677 3590 3453 3291 3108 2936 2797 2701 2661 2654 2675 2713 2766 2868\n[39467] 3104 3302 3492 3563 3593 3585 3595 3617 3665 3727 3797 3872 3946 4018\n[39481] 4080 4134 4167 4185 4179 4156 4107 4045 3971 3899 3841 3798 3778 3769\n[39495] 3761 3739 3688 3596 3453 3261 3027 2784 2574 2433 2377 2382 2379 2385\n[39509] 2362 2408 2606 2852 3034 3208 3391 3574 3732 3871 3984 4076 4145 4187\n[39523] 4192 4161 4091 3995 3883 3774 3685 3618 3578 3559 3553 3551 3544 3521\n[39537] 3469 3386 3270 3131 2980 2836 2759 2719 2824 2952 3092 3236 3389 3534\n[39551] 3642 3724 3793 3844 3884 3923 3983 4044 4117 4170 4206 4239 4287 4346\n[39565] 4390 4428 4454 4477 4502 4528 4549 4565 4566 4557 4536 4512 4490 4472\n[39579] 4458 4445 4423 4398 4360 4324 4284 4256 4232 4225 4224 4235 4242 4248\n[39593] 4235 4212 4169 4117 4059 4002 3952 3914 3901 3905 3929 3963 4006 4050\n[39607] 4088 4113 4120 4113 4107 4113 4156 4200 4216 4199 4140 4075 4051 4055\n[39621] 4099 4135 4080 4040 4113 4206 4234 4249 4281 4313 4340 4370 4428 4463\n[39635] 4414 4351 4341 4350 4349 4369 4421 4465 4429 4381 4352 4360 4445 4539\n[39649] 4568 4575 4572 4567 4573 4580 4586 4591 4599 4609 4623 4633 4630 4600\n[39663] 4527 4432 4339 4277 4272 4314 4382 4461 4534 4583 4599 4586 4560 4512\n[39677] 4445 4352 4259 4173 4133 4128 4149 4183 4215 4236 4239 4226 4204 4182\n[39691] 4174 4183 4220 4273 4335 4393 4430 4442 4422 4370 4287 4182 4069 3954\n[39705] 3856 3773 3722 3694 3701 3729 3786 3856 3942 4031 4124 4210 4289 4358\n[39719] 4419 4467 4503 4528 4545 4555 4560 4563 4566 4571 4578 4586 4594 4599\n[39733] 4598 4592 4581 4566 4547 4526 4507 4494 4495 4504 4519 4535 4544 4548\n[39747] 4542 4532 4518 4506 4502 4502 4505 4507 4509 4508 4506 4502 4498 4493\n[39761] 4485 4475 4464 4455 4448 4448 4459 4476 4493 4508 4517 4522 4525 4526\n[39775] 4524 4520 4512 4502 4491 4480 4473 4469 4473 4480 4487 4494 4500 4503\n[39789] 4501 4497 4491 4486 4482 4481 4484 4489 4495 4499 4499 4497 4494 4493\n[39803] 4494 4496 4498 4499 4497 4494 4487 4480 4472 4467 4464 4465 4468 4473\n[39817] 4475 4477 4475 4473 4469 4465 4462 4460 4461 4463 4466 4469 4471 4472\n[39831] 4472 4471 4470 4468 4467 4467 4467 4467 4468 4470 4472 4474 4475 4476\n[39845] 4476 4476 4473 4470 4469 4470 4470 4471 4471 4473 4473 4473 4472 4471\n[39859] 4468 4465 4460 4456 4455 4456 4458 4462 4463 4465 4467 4470 4471 4472\n[39873] 4473 4475 4475 4475 4475 4476 4477 4478 4479 4479 4478 4476 4474 4472\n[39887] 4470 4468 4467 4467 4469 4471 4472 4472 4472 4471 4471 4472 4474 4476\n[39901]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39915]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39929]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39943]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39957]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39971]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39985]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[39999]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40013]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40027]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40041]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40055]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40069]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40083]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40097]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40111]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40125]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40139]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40153]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40167]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40181]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40195]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40209]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40223]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40237]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40251]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40265]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40279]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40293]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40307]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40321]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40335]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40349]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40363]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40377]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40391]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40405]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40419]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40433]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40447]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40461]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40475]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40489]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40503]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40517]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40531]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40545]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40559]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40573]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40587]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40601]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40615]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40629]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40643]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40657]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40671]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40685]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40699]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40713]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40727]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40741]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40755]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40769]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40783]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40797]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40811]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40825]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40839]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40853]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40867]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40881]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40895]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40909]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40923]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40937]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40951]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40965]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40979]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[40993]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41007]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41021]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41035]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41049]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41063]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41077]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41091]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41105]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41119]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41133]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[41147]   NA   NA   NA   NA   16   40   39   37   37   37   39   40   41   41\n[41161]   43   48   59   78  104  134  163  189  207  220  229  238  247  255\n[41175]  257  253  243  241  259  297  351  410  465  513  557  604  661  725\n[41189]  789  845  880  907  939  976 1014 1056 1104 1151 1193 1246 1324 1412\n[41203] 1493 1560 1611 1657 1711 1784 1883 2008 2155 2315 2479 2640 2795 2958\n[41217] 3140 3348 3575 3769 3875 3920 3928 3932 3946 3986 4055 4133 4198 4238\n[41231] 4244 4228 4203 4181 4172 4179 4200 4230 4265 4301 4333 4357 4371 4382\n[41245] 4397 4404 4389 4357 4312 4267 4235 4220 4223 4239 4266 4299 4335 4368\n[41259] 4395 4413 4421 4424 4427 4435 4450 4468 4483 4488 4475 4446 4407 4370\n[41273] 4348 4350 4381 4429 4482 4532 4568 4589 4594 4586 4568 4553 4552 4565\n[41287] 4591 4623 4652 4674 4681 4673 4653 4627 4601 4581 4567 4561 4561 4567\n[41301] 4575 4585 4595 4604 4611 4616 4619 4622 4626 4631 4635 4636 4629 4615\n[41315] 4593 4568 4540 4510 4478 4450 4437 4437 4451 4474 4502 4529 4550 4562\n[41329] 4560 4550 4536 4525 4523 4532 4553 4578 4601 4619 4631 4635 4629 4619\n[41343] 4611 4609 4612 4618 4622 4621 4615 4609 4610 4616 4623 4631 4640 4654\n[41357] 4680 4710 4734 4751 4760 4761 4750 4728 4694 4664 4655 4653 4646 4635\n[41371] 4621 4606 4595 4587 4583 4587 4599 4618 4642 4667 4687 4703 4714 4724\n[41385] 4738 4750 4757 4761 4765 4771 4779 4788 4795 4798 4795 4787 4777 4765\n[41399] 4753 4743 4733 4723 4714 4705 4694 4678 4653 4619 4580 4555 4566 4590\n[41413] 4606 4608 4596 4583 4578 4586 4606 4633 4658 4676 4680 4670 4646 4608\n[41427] 4556 4482 4376 4216 3989 3735 3493 3272 3074 2930 2867 2850 2856 2903\n[41441] 3014 3144 3237 3302 3345 3368 3367 3370 3400 3464 3564 3692 3834 3969\n[41455] 4065 4097 4041 3944 3848 3775 3734 3699 3647 3600 3576 3560 3522 3459\n[41469] 3368 3273 3188 3131 3104 3112 3156 3231 3336 3460 3595 3727 3843 3933\n[41483] 3991 4027 4051 4068 4083 4098 4115 4140 4177 4211 4247 4264 4270 4253\n[41497] 4212 4148 4069 3972 3865 3745 3616 3481 3343 3204 3063 2920 2780 2647\n[41511] 2530 2435 2371 2338 2341 2378 2453 2564 2711 2882 3064 3237 3384 3498\n[41525] 3574 3617 3632 3624 3595 3549 3489 3423 3363 3319 3301 3305 3331 3368\n[41539] 3411 3448 3477 3499 3512 3531 3561 3594 3628 3664 3704 3742 3764 3763\n[41553] 3727 3658 3553 3423 3274 3127 2994 2887 2815 2776 2768 2800 2877 3014\n[41567] 3199 3373 3472 3495 3471 3426 3401 3399 3429 3481 3551 3632 3720 3810\n[41581] 3898 3979 4049 4103 4135 4145 4128 4088 4029 3961 3893 3831 3783 3744\n[41595] 3708 3664 3603 3511 3380 3213 3019 2822 2649 2519 2437 2388 2348 2320\n[41609] 2318 2402 2614 2863 3045 3208 3389 3581 3755 3905 4028 4124 4193 4231\n[41623] 4232 4194 4120 4019 3906 3795 3702 3631 3583 3553 3535 3520 3502 3470\n[41637] 3416 3337 3233 3113 2986 2876 2815 2813 2896 3026 3177 3333 3486 3618\n[41651] 3716 3783 3824 3849 3868 3898 3954 4022 4081 4113 4103 4105 4157 4236\n[41665] 4301 4348 4381 4410 4442 4477 4509 4532 4540 4533 4511 4483 4455 4431\n[41679] 4412 4394 4372 4345 4309 4271 4234 4203 4180 4171 4174 4185 4196 4203\n[41693] 4197 4180 4148 4107 4062 4018 3982 3961 3956 3964 3977 3994 4017 4041\n[41707] 4061 4069 4060 4037 4015 4019 4072 4134 4162 4146 4084 4017 3985 3990\n[41721] 4024 4045 4022 4014 4078 4166 4221 4258 4299 4342 4383 4426 4474 4496\n[41735] 4469 4424 4392 4368 4341 4325 4330 4329 4295 4254 4236 4261 4340 4429\n[41749] 4483 4511 4525 4535 4545 4554 4558 4559 4561 4567 4580 4592 4596 4569\n[41763] 4493 4385 4270 4198 4204 4265 4349 4436 4512 4562 4579 4566 4534 4485\n[41777] 4419 4351 4290 4244 4218 4211 4222 4240 4256 4260 4248 4221 4186 4153\n[41791] 4134 4137 4167 4216 4275 4330 4368 4382 4370 4330 4264 4179 4084 3984\n[41805] 3889 3806 3744 3704 3692 3705 3747 3809 3891 3985 4085 4183 4275 4356\n[41819] 4425 4478 4516 4541 4557 4566 4571 4573 4575 4578 4583 4590 4595 4598\n[41833] 4597 4590 4580 4566 4549 4533 4519 4513 4517 4529 4544 4557 4564 4564\n[41847] 4555 4541 4526 4513 4507 4506 4510 4514 4516 4515 4511 4505 4501 4497\n[41861] 4491 4483 4474 4466 4461 4464 4475 4491 4506 4518 4524 4527 4527 4526\n[41875] 4523 4518 4511 4503 4493 4484 4478 4475 4477 4483 4490 4497 4503 4506\n[41889] 4504 4500 4494 4488 4485 4484 4487 4492 4497 4501 4502 4500 4498 4496\n[41903] 4496 4497 4499 4499 4498 4496 4491 4485 4478 4472 4469 4468 4470 4473\n[41917] 4475 4476 4475 4473 4470 4467 4464 4462 4462 4464 4466 4469 4470 4471\n[41931] 4471 4471 4470 4469 4468 4467 4467 4467 4467 4468 4469 4471 4472 4473\n[41945] 4474 4475 4474 4472 4469 4468 4467 4468 4468 4470 4470 4470 4470 4469\n[41959] 4467 4464 4460 4457 4455 4456 4458 4461 4464 4466 4469 4471 4472 4473\n[41973] 4474 4475 4475 4475 4475 4476 4478 4479 4479 4480 4479 4478 4476 4474\n[41987] 4472 4470 4469 4469 4470 4471 4472 4472 4472 4472 4472 4473 4476 4477\n[42001]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42015]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42029]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42043]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42057]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42071]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42085]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42099]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42113]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42127]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42141]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42155]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42169]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42183]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42197]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42211]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42225]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42239]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42253]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42267]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42281]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42295]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42309]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42323]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42337]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42351]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42365]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42379]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42393]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42407]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42421]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42435]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42449]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42463]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42477]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42491]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42505]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42519]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42533]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42547]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42561]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42575]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42589]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42603]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42617]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42631]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42645]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42659]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42673]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42687]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42701]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42715]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42729]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42743]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42757]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42771]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42785]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42799]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42813]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42827]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42841]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42855]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42869]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42883]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42897]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42911]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42925]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42939]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42953]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42967]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42981]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[42995]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43009]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43023]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43037]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43051]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43065]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43079]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43093]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43107]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43135]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43149]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43163]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43177]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43191]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43205]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43219]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43233]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[43247]   NA   NA   NA   NA   20   37   39   35   35   36   38   41   45   48\n[43261]   50   54   67   85  115  146  174  196  212  223  233  242  252  261\n[43275]  263  260  250  249  272  315  378  448  511  569  619  668  723  780\n[43289]  829  871  899  923  954  991 1035 1084 1138 1195 1237 1290 1373 1463\n[43303] 1544 1608 1650 1686 1731 1795 1893 2018 2168 2331 2493 2651 2793 2938\n[43317] 3100 3283 3495 3689 3779 3835 3867 3896 3930 3975 4040 4112 4175 4217\n[43331] 4218 4196 4163 4135 4131 4145 4182 4228 4278 4320 4351 4371 4383 4392\n[43345] 4409 4418 4404 4377 4338 4300 4273 4259 4260 4273 4296 4325 4357 4386\n[43359] 4411 4427 4429 4427 4429 4435 4449 4466 4479 4483 4469 4441 4402 4366\n[43373] 4350 4355 4392 4444 4499 4547 4579 4594 4595 4583 4563 4546 4544 4554\n[43387] 4576 4604 4630 4651 4660 4658 4645 4628 4611 4596 4584 4576 4573 4575\n[43401] 4581 4589 4599 4610 4620 4629 4637 4644 4652 4660 4666 4667 4656 4636\n[43415] 4605 4571 4538 4503 4464 4431 4419 4422 4440 4467 4496 4524 4543 4553\n[43429] 4552 4545 4537 4532 4539 4554 4580 4607 4628 4642 4647 4644 4631 4617\n[43443] 4610 4611 4620 4631 4638 4639 4633 4626 4627 4631 4636 4639 4633 4631\n[43457] 4650 4675 4701 4724 4744 4758 4748 4734 4698 4667 4671 4674 4672 4663\n[43471] 4650 4635 4622 4612 4605 4605 4613 4630 4651 4674 4693 4706 4714 4721\n[43485] 4735 4748 4756 4761 4764 4766 4771 4777 4782 4784 4781 4776 4769 4761\n[43499] 4752 4743 4732 4722 4713 4704 4696 4685 4671 4645 4598 4555 4567 4585\n[43513] 4594 4591 4582 4572 4574 4587 4611 4639 4662 4676 4676 4661 4631 4588\n[43527] 4536 4470 4381 4252 4018 3763 3481 3233 3047 2918 2850 2822 2833 2875\n[43541] 3004 3138 3231 3297 3341 3366 3366 3368 3383 3422 3477 3549 3637 3706\n[43555] 3776 3786 3784 3737 3709 3682 3680 3683 3675 3665 3642 3610 3542 3452\n[43569] 3335 3212 3098 3008 2950 2934 2968 3046 3165 3309 3471 3628 3767 3876\n[43583] 3948 3991 4016 4028 4038 4047 4062 4085 4123 4175 4241 4311 4350 4364\n[43597] 4321 4233 4117 3969 3812 3645 3473 3306 3148 3000 2861 2727 2596 2469\n[43611] 2352 2249 2175 2128 2124 2156 2240 2361 2532 2723 2932 3128 3297 3427\n[43625] 3516 3567 3588 3583 3558 3517 3463 3408 3364 3338 3344 3369 3417 3459\n[43639] 3494 3505 3533 3541 3592 3631 3651 3667 3679 3693 3710 3726 3730 3722\n[43653] 3689 3637 3559 3469 3360 3252 3140 3043 2961 2906 2869 2886 2956 3117\n[43667] 3291 3497 3512 3484 3410 3314 3259 3219 3225 3256 3314 3389 3480 3581\n[43681] 3688 3796 3900 3993 4065 4114 4133 4123 4083 4022 3945 3862 3783 3708\n[43695] 3640 3572 3500 3414 3305 3177 3027 2874 2735 2608 2513 2425 2349 2289\n[43709] 2287 2358 2570 2827 2967 3125 3324 3547 3739 3908 4041 4144 4216 4255\n[43723] 4253 4216 4138 4036 3921 3810 3714 3638 3584 3546 3518 3494 3467 3429\n[43737] 3374 3302 3213 3118 3028 2963 2943 2975 3046 3159 3303 3455 3603 3726\n[43751] 3811 3860 3871 3866 3858 3867 3915 3981 4014 4032 3953 3916 3997 4117\n[43765] 4200 4255 4291 4321 4361 4405 4446 4476 4487 4480 4456 4423 4389 4358\n[43779] 4332 4309 4282 4253 4215 4176 4138 4106 4085 4077 4086 4104 4122 4136\n[43793] 4136 4131 4115 4094 4067 4040 4021 4014 4022 4036 4040 4040 4046 4047\n[43807] 4051 4045 4020 3986 3946 3930 3994 4068 4094 4086 4020 3951 3920 3917\n[43821] 3944 3968 3960 3966 4039 4132 4197 4254 4312 4370 4423 4473 4516 4535\n[43835] 4521 4484 4435 4382 4323 4269 4238 4206 4168 4134 4130 4162 4238 4326\n[43849] 4393 4441 4476 4501 4518 4529 4529 4527 4525 4527 4542 4555 4568 4548\n[43863] 4463 4346 4206 4114 4148 4237 4338 4428 4505 4553 4569 4553 4507 4450\n[43877] 4384 4344 4319 4310 4303 4298 4305 4312 4316 4309 4285 4246 4198 4151\n[43891] 4120 4109 4129 4167 4218 4267 4300 4316 4311 4288 4248 4192 4125 4049\n[43905] 3971 3893 3830 3779 3754 3749 3777 3824 3900 3988 4090 4191 4288 4373\n[43919] 4444 4498 4533 4555 4569 4576 4578 4579 4579 4580 4584 4589 4593 4595\n[43933] 4593 4587 4576 4564 4551 4539 4530 4527 4534 4548 4562 4574 4578 4576\n[43947] 4566 4551 4535 4522 4516 4515 4519 4524 4527 4526 4520 4511 4508 4503\n[43961] 4498 4492 4484 4478 4476 4479 4490 4505 4516 4525 4528 4528 4526 4524\n[43975] 4520 4516 4510 4504 4497 4490 4484 4482 4483 4487 4493 4499 4505 4508\n[43989] 4506 4501 4495 4490 4487 4487 4489 4493 4498 4502 4503 4502 4500 4497\n[44003] 4498 4498 4498 4498 4497 4496 4494 4490 4484 4477 4473 4471 4472 4473\n[44017] 4474 4474 4473 4471 4470 4468 4464 4462 4461 4462 4463 4466 4467 4468\n[44031] 4469 4470 4470 4469 4467 4465 4463 4463 4462 4463 4464 4466 4468 4470\n[44045] 4473 4474 4474 4473 4470 4466 4465 4464 4465 4466 4467 4467 4468 4467\n[44059] 4465 4462 4459 4457 4456 4456 4458 4460 4464 4467 4470 4472 4473 4473\n[44073] 4474 4474 4474 4474 4476 4477 4478 4479 4480 4480 4480 4479 4478 4476\n[44087] 4475 4473 4472 4471 4471 4472 4472 4473 4473 4473 4473 4474 4477 4479\n[44101]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44115]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44129]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44143]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44157]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44171]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44185]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44199]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44213]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44227]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44241]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44255]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44269]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44283]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44297]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44311]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44325]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44339]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44353]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44367]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44381]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44395]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44409]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44423]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44437]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44451]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44465]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44479]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44493]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44507]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44521]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44535]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44549]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44563]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44577]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44591]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44605]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44619]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44633]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44647]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44661]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44675]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44689]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44703]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44717]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44731]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44745]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44759]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44773]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44787]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44801]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44815]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44829]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44843]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44857]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44871]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44885]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44899]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44913]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44927]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44941]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44955]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44969]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44983]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[44997]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45011]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45025]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45039]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45053]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45067]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45081]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45095]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45109]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45123]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45137]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45165]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45179]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45193]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45207]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45221]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45235]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45249]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45263]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45277]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45291]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45305]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45319]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45333]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[45347]   NA   NA   NA   NA   19   33   36   36   36   37   39   44   51   58\n[45361]   63   70   84  105  134  164  187  205  217  227  235  245  254  262\n[45375]  264  261  254  257  285  337  407  484  556  621  677  728  776  820\n[45389]  856  888  917  944  972 1008 1058 1114 1170 1226 1284 1354 1441 1532\n[45403] 1611 1669 1704 1728 1762 1819 1909 2030 2179 2340 2500 2649 2781 2910\n[45417] 3049 3204 3374 3523 3622 3693 3764 3832 3889 3944 4005 4072 4136 4179\n[45431] 4186 4165 4132 4106 4105 4130 4179 4240 4301 4348 4376 4390 4397 4405\n[45445] 4417 4423 4413 4390 4361 4332 4309 4297 4296 4306 4326 4352 4381 4407\n[45459] 4426 4436 4436 4432 4430 4434 4446 4462 4475 4478 4467 4442 4408 4378\n[45473] 4366 4377 4416 4469 4525 4571 4599 4609 4604 4587 4564 4546 4539 4545\n[45487] 4563 4586 4609 4628 4639 4643 4639 4631 4621 4611 4601 4592 4586 4584\n[45501] 4588 4596 4606 4619 4633 4644 4653 4661 4670 4678 4685 4685 4674 4650\n[45515] 4617 4578 4540 4500 4459 4425 4411 4415 4434 4461 4490 4515 4533 4543\n[45529] 4546 4545 4545 4550 4565 4587 4613 4638 4655 4664 4662 4651 4634 4619\n[45543] 4614 4619 4632 4646 4656 4659 4654 4647 4644 4644 4645 4642 4632 4626\n[45557] 4635 4653 4675 4697 4715 4723 4716 4707 4707 4712 4713 4710 4704 4692\n[45571] 4674 4654 4635 4620 4611 4610 4617 4633 4655 4679 4700 4715 4723 4729\n[45585] 4739 4749 4757 4760 4761 4760 4761 4763 4766 4768 4767 4764 4760 4755\n[45599] 4748 4740 4730 4721 4713 4706 4701 4697 4692 4676 4641 4607 4595 4594\n[45613] 4590 4581 4571 4564 4570 4587 4612 4639 4660 4672 4671 4656 4624 4578\n[45627] 4521 4452 4366 4229 4013 3750 3475 3230 3047 2926 2858 2835 2848 2904\n[45641] 3005 3117 3208 3274 3318 3341 3346 3344 3344 3355 3376 3410 3453 3494\n[45655] 3533 3555 3571 3576 3586 3602 3627 3656 3677 3684 3664 3615 3531 3417\n[45669] 3280 3135 2996 2881 2810 2789 2827 2916 3052 3218 3400 3577 3730 3849\n[45683] 3929 3976 3998 4006 4011 4016 4029 4052 4093 4155 4236 4326 4400 4434\n[45697] 4402 4299 4128 3923 3710 3503 3301 3112 2944 2798 2671 2556 2445 2334\n[45711] 2225 2125 2045 1994 1985 2022 2112 2250 2434 2643 2864 3071 3248 3383\n[45725] 3476 3530 3552 3550 3530 3497 3457 3420 3398 3400 3432 3488 3558 3617\n[45739] 3645 3652 3658 3668 3696 3721 3726 3717 3702 3686 3670 3652 3630 3601\n[45753] 3563 3518 3464 3407 3343 3276 3203 3131 3061 2996 2939 2914 2942 3050\n[45767] 3234 3416 3490 3476 3391 3280 3178 3106 3075 3077 3109 3166 3249 3354\n[45781] 3477 3611 3747 3874 3987 4074 4131 4151 4133 4079 3995 3891 3778 3665\n[45795] 3560 3465 3380 3299 3218 3133 3038 2938 2835 2729 2624 2516 2413 2334\n[45809] 2311 2357 2478 2639 2799 2984 3218 3465 3689 3878 4026 4136 4212 4252\n[45823] 4252 4215 4140 4041 3928 3817 3720 3641 3581 3537 3504 3474 3441 3399\n[45837] 3344 3277 3204 3136 3088 3072 3095 3151 3227 3329 3460 3604 3740 3849\n[45851] 3918 3942 3926 3889 3853 3838 3856 3882 3882 3843 3765 3737 3843 3995\n[45865] 4102 4163 4196 4226 4273 4325 4371 4402 4411 4401 4374 4337 4297 4259\n[45879] 4225 4195 4164 4130 4092 4052 4013 3981 3961 3959 3977 4004 4033 4053\n[45893] 4063 4067 4072 4074 4069 4062 4059 4064 4081 4099 4105 4101 4089 4072\n[45907] 4053 4026 3990 3947 3908 3896 3930 3977 4000 3990 3944 3892 3860 3853\n[45921] 3866 3884 3900 3932 3998 4082 4163 4239 4313 4384 4451 4508 4551 4570\n[45935] 4560 4522 4461 4386 4304 4227 4165 4112 4068 4040 4042 4077 4146 4230\n[45949] 4309 4376 4428 4466 4489 4500 4500 4497 4497 4503 4519 4535 4543 4515\n[45963] 4428 4299 4164 4086 4125 4233 4347 4444 4504 4541 4562 4547 4474 4388\n[45977] 4333 4318 4344 4376 4390 4390 4392 4393 4390 4375 4345 4298 4241 4183\n[45991] 4137 4112 4114 4136 4172 4208 4232 4245 4248 4244 4234 4217 4187 4144\n[46005] 4090 4028 3968 3916 3880 3863 3873 3908 3969 4047 4140 4235 4327 4408\n[46019] 4472 4519 4549 4567 4577 4581 4581 4580 4578 4578 4580 4584 4587 4588\n[46033] 4585 4579 4570 4559 4549 4541 4536 4537 4545 4557 4571 4581 4586 4583\n[46047] 4574 4560 4546 4534 4528 4528 4531 4536 4539 4538 4532 4525 4519 4513\n[46061] 4507 4501 4496 4492 4490 4494 4502 4513 4521 4527 4527 4525 4522 4519\n[46075] 4516 4512 4509 4504 4500 4495 4491 4489 4490 4493 4497 4501 4505 4507\n[46089] 4506 4502 4497 4492 4489 4488 4489 4492 4496 4501 4502 4502 4501 4499\n[46103] 4499 4499 4498 4497 4497 4497 4497 4495 4489 4483 4478 4475 4474 4474\n[46117] 4474 4473 4472 4470 4468 4465 4461 4457 4455 4456 4457 4460 4462 4465\n[46131] 4467 4469 4469 4467 4463 4460 4457 4455 4454 4456 4458 4461 4465 4469\n[46145] 4473 4475 4475 4474 4471 4467 4465 4464 4465 4466 4467 4467 4468 4466\n[46159] 4463 4459 4457 4457 4458 4460 4461 4463 4466 4469 4471 4473 4474 4473\n[46173] 4473 4474 4474 4475 4477 4478 4479 4480 4481 4481 4482 4481 4480 4479\n[46187] 4478 4477 4476 4474 4474 4474 4474 4474 4474 4474 4475 4476 4480 4482\n[46201]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46215]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46229]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46243]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46257]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46271]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46285]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46299]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46313]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46327]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46341]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46355]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46369]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46383]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46397]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46411]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46425]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46439]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46453]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46467]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46481]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46495]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46509]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46523]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46537]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46551]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46565]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46579]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46593]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46607]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46621]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46635]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46649]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46663]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46677]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46691]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46705]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46719]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46733]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46747]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46761]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46775]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46789]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46803]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46817]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46831]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46845]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46859]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46873]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46887]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46901]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46915]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46929]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46943]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46957]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46971]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46985]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[46999]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47013]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47027]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47041]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47055]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47069]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47083]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47097]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47111]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47125]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47139]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47153]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47167]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47181]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47195]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47209]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47223]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47237]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47251]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47265]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47279]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47293]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47307]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47321]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47335]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47349]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47363]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47377]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47391]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47405]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47419]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47433]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[47447]   NA   NA   NA   12   35   28   31   35   37   39   40   45   56   70\n[47461]   80   91  107  128  156  184  201  214  223  230  237  245  255  263\n[47475]  266  265  259  264  301  360  437  521  599  670  729  778  818  851\n[47489]  876  900  932  968  993 1028 1083 1147 1204 1264 1340 1423 1521 1616\n[47503] 1696 1752 1778 1790 1815 1857 1938 2048 2192 2348 2501 2644 2764 2876\n[47517] 2993 3114 3249 3367 3464 3541 3654 3757 3832 3893 3950 4008 4078 4135\n[47531] 4149 4139 4113 4091 4100 4132 4196 4267 4335 4385 4404 4408 4410 4414\n[47545] 4422 4427 4418 4402 4381 4360 4343 4332 4330 4337 4355 4379 4405 4429\n[47559] 4441 4446 4443 4437 4432 4433 4444 4459 4474 4482 4475 4456 4429 4403\n[47573] 4396 4408 4449 4502 4556 4601 4625 4631 4620 4598 4572 4549 4540 4541\n[47587] 4555 4574 4594 4611 4623 4631 4634 4634 4631 4625 4617 4608 4600 4595\n[47601] 4598 4606 4619 4634 4650 4663 4669 4673 4678 4684 4690 4691 4683 4661\n[47615] 4632 4589 4551 4507 4463 4427 4415 4418 4437 4461 4487 4510 4526 4537\n[47629] 4544 4551 4560 4574 4597 4624 4650 4671 4683 4685 4677 4662 4641 4624\n[47643] 4624 4633 4651 4668 4680 4683 4678 4669 4663 4657 4653 4648 4636 4627\n[47657] 4632 4643 4660 4674 4686 4688 4680 4674 4714 4757 4753 4745 4734 4716\n[47671] 4683 4650 4620 4606 4596 4600 4608 4626 4651 4680 4706 4728 4737 4741\n[47685] 4749 4756 4760 4761 4758 4755 4752 4751 4754 4756 4756 4753 4752 4749\n[47699] 4744 4737 4728 4719 4713 4709 4705 4704 4708 4708 4681 4655 4628 4611\n[47713] 4592 4577 4563 4557 4565 4584 4610 4636 4652 4663 4662 4653 4623 4577\n[47727] 4517 4438 4355 4222 4014 3754 3501 3260 3082 2957 2886 2869 2881 2938\n[47741] 3018 3109 3189 3251 3296 3318 3322 3312 3297 3282 3278 3282 3301 3325\n[47755] 3353 3382 3414 3446 3486 3527 3574 3619 3655 3670 3650 3593 3496 3367\n[47769] 3214 3053 2898 2771 2703 2689 2743 2848 3005 3189 3388 3576 3736 3858\n[47783] 3937 3980 3998 4001 4002 4004 4015 4038 4080 4141 4225 4318 4412 4463\n[47797] 4427 4308 4065 3801 3551 3331 3113 2917 2752 2614 2509 2419 2333 2245\n[47811] 2150 2059 1982 1933 1930 1973 2078 2227 2426 2644 2871 3078 3252 3381\n[47825] 3468 3515 3535 3532 3518 3495 3470 3454 3457 3485 3547 3631 3727 3806\n[47839] 3825 3823 3809 3805 3806 3805 3783 3747 3704 3652 3598 3540 3481 3422\n[47853] 3365 3317 3276 3248 3221 3202 3173 3144 3100 3050 2981 2921 2890 2919\n[47867] 3118 3311 3431 3454 3357 3240 3112 3027 2971 2944 2946 2976 3049 3152\n[47881] 3292 3448 3614 3773 3922 4044 4134 4181 4181 4134 4041 3914 3766 3611\n[47895] 3466 3340 3240 3165 3113 3075 3037 2994 2936 2861 2764 2652 2532 2431\n[47909] 2380 2375 2405 2479 2653 2854 3127 3390 3631 3835 3992 4109 4188 4230\n[47923] 4234 4202 4132 4037 3928 3818 3722 3640 3578 3530 3495 3462 3425 3380\n[47937] 3324 3263 3201 3157 3146 3172 3240 3324 3407 3503 3630 3765 3890 3984\n[47951] 4031 4032 3987 3919 3856 3806 3794 3781 3752 3688 3612 3569 3734 3920\n[47965] 4022 4078 4105 4130 4190 4251 4296 4320 4322 4306 4274 4233 4190 4147\n[47979] 4109 4071 4037 3999 3959 3917 3876 3843 3824 3827 3863 3906 3954 3983\n[47993] 4001 4006 4028 4049 4061 4075 4085 4101 4129 4153 4160 4153 4127 4093\n[48007] 4052 4009 3963 3920 3882 3865 3877 3897 3908 3896 3864 3825 3799 3789\n[48021] 3797 3817 3845 3888 3955 4036 4124 4213 4301 4384 4461 4526 4571 4593\n[48035] 4579 4538 4467 4379 4282 4189 4111 4048 3998 3970 3974 4007 4075 4157\n[48049] 4244 4322 4388 4435 4463 4475 4476 4472 4477 4487 4504 4519 4524 4494\n[48063] 4405 4280 4157 4075 4135 4249 4352 4450 4486 4511 4550 4553 4449 4331\n[48077] 4299 4305 4383 4454 4475 4472 4472 4470 4464 4449 4416 4369 4307 4240\n[48091] 4181 4137 4122 4125 4145 4166 4172 4174 4180 4192 4220 4247 4257 4253\n[48105] 4224 4183 4132 4083 4042 4016 4014 4034 4079 4142 4220 4303 4382 4452\n[48119] 4503 4540 4562 4575 4580 4581 4578 4575 4572 4571 4572 4575 4577 4578\n[48133] 4575 4570 4562 4553 4545 4540 4538 4540 4548 4559 4571 4582 4587 4586\n[48147] 4578 4567 4554 4544 4539 4538 4540 4545 4547 4548 4542 4536 4528 4522\n[48161] 4515 4509 4505 4503 4502 4504 4510 4516 4522 4525 4523 4519 4516 4513\n[48175] 4511 4509 4507 4505 4503 4500 4497 4495 4496 4498 4500 4502 4504 4506\n[48189] 4505 4502 4498 4494 4490 4488 4488 4490 4495 4499 4500 4500 4499 4499\n[48203] 4498 4498 4497 4496 4498 4500 4503 4502 4497 4489 4484 4480 4478 4476\n[48217] 4475 4473 4472 4469 4466 4461 4456 4451 4449 4448 4450 4453 4457 4462\n[48231] 4466 4468 4468 4465 4461 4455 4451 4448 4449 4450 4454 4459 4465 4470\n[48245] 4474 4476 4476 4475 4472 4469 4467 4466 4467 4469 4469 4469 4469 4468\n[48259] 4463 4457 4456 4457 4459 4463 4464 4467 4469 4471 4473 4475 4475 4474\n[48273] 4474 4474 4475 4476 4478 4480 4481 4481 4483 4484 4484 4484 4484 4483\n[48287] 4482 4481 4479 4477 4476 4476 4476 4476 4476 4476 4476 4478 4483 4487\n[48301]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48315]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48329]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48343]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48357]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48371]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48385]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48399]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48413]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48427]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48441]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48455]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48469]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48483]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48497]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48511]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48525]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48539]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48553]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48567]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48581]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48595]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48609]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48623]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48637]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48651]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48665]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48679]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48693]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48707]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48721]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48735]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48749]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48763]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48777]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48791]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48805]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48819]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48833]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48847]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48861]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48875]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48889]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48903]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48917]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48931]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48945]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48959]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48973]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[48987]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49001]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49015]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49029]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49043]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49057]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49071]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49085]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49099]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49113]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49127]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49141]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49155]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49169]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49183]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49197]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49211]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49225]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49239]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49253]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49267]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49281]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49295]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49309]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49323]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49337]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49351]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49365]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49379]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49393]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49407]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49421]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49435]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49449]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49463]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49477]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49491]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49505]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49519]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49533]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[49547]   NA   NA   NA   19   32   26   26   31   37   40   41   46   60   78\n[49561]   96  114  134  156  178  197  212  222  228  233  238  245  255  265\n[49575]  269  270  271  286  326  390  470  556  638  710  769  815  849  874\n[49589]  893  914  946  982 1022 1063 1114 1174 1245 1324 1410 1504 1608 1709\n[49603] 1792 1849 1875 1885 1898 1927 1990 2085 2212 2355 2498 2630 2742 2844\n[49617] 2943 3047 3158 3263 3360 3455 3568 3678 3768 3833 3878 3928 3997 4067\n[49631] 4106 4117 4111 4106 4123 4165 4233 4308 4374 4417 4428 4424 4422 4422\n[49645] 4426 4427 4423 4413 4401 4387 4374 4365 4362 4367 4383 4404 4426 4444\n[49659] 4455 4458 4454 4446 4439 4438 4448 4464 4483 4496 4497 4485 4465 4445\n[49673] 4440 4454 4489 4537 4587 4628 4651 4655 4641 4615 4586 4562 4549 4547\n[49687] 4556 4571 4588 4603 4616 4625 4632 4636 4637 4635 4630 4622 4614 4609\n[49701] 4611 4622 4639 4658 4674 4683 4684 4681 4678 4676 4678 4680 4680 4672\n[49715] 4651 4616 4570 4520 4475 4444 4432 4437 4453 4474 4494 4511 4525 4536\n[49729] 4547 4561 4580 4605 4634 4663 4687 4703 4709 4706 4693 4675 4655 4643\n[49743] 4645 4658 4678 4696 4707 4710 4706 4696 4685 4673 4662 4651 4642 4637\n[49757] 4638 4645 4655 4664 4667 4666 4665 4677 4715 4754 4767 4763 4752 4723\n[49771] 4666 4609 4573 4560 4561 4571 4585 4607 4637 4672 4707 4736 4754 4763\n[49785] 4767 4768 4766 4763 4758 4752 4750 4749 4750 4751 4750 4749 4748 4746\n[49799] 4742 4735 4727 4719 4713 4708 4705 4706 4709 4708 4694 4671 4644 4617\n[49813] 4593 4573 4558 4554 4562 4580 4603 4624 4637 4643 4649 4646 4627 4589\n[49827] 4533 4460 4372 4244 4059 3830 3589 3356 3164 3018 2929 2894 2910 2964\n[49841] 3037 3115 3189 3250 3292 3311 3309 3289 3259 3226 3200 3186 3188 3202\n[49855] 3227 3262 3303 3353 3408 3465 3523 3575 3614 3629 3608 3546 3444 3307\n[49869] 3145 2976 2823 2707 2650 2656 2729 2857 3031 3230 3435 3624 3780 3896\n[49883] 3968 4004 4017 4015 4011 4011 4020 4042 4080 4136 4212 4299 4385 4423\n[49897] 4362 4189 3896 3585 3334 3127 2927 2743 2591 2472 2389 2324 2265 2201\n[49911] 2127 2051 1986 1949 1958 2019 2139 2307 2514 2737 2958 3155 3314 3428\n[49925] 3499 3535 3545 3539 3526 3512 3504 3509 3535 3590 3675 3780 3888 3967\n[49939] 3981 3963 3937 3915 3893 3864 3821 3762 3690 3605 3510 3406 3299 3198\n[49953] 3111 3046 3007 2995 3002 3023 3046 3065 3067 3047 2997 2933 2886 2908\n[49967] 3062 3241 3360 3372 3261 3119 3026 2965 2906 2855 2829 2840 2899 3005\n[49981] 3156 3334 3526 3715 3891 4039 4150 4215 4227 4181 4077 3926 3742 3546\n[49995] 3358 3197 3079 3009 2984 2990 3009 3026 3022 2988 2916 2813 2692 2576\n[50009] 2490 2434 2417 2468 2638 2863 3110 3353 3586 3790 3952 4071 4151 4195\n[50023] 4203 4176 4115 4028 3925 3819 3723 3642 3578 3529 3491 3457 3417 3369\n[50037] 3311 3251 3198 3172 3189 3252 3348 3462 3560 3668 3795 3926 4039 4115\n[50051] 4141 4117 4050 3962 3874 3802 3755 3716 3672 3618 3575 3589 3706 3851\n[50065] 3950 4004 4032 4065 4128 4193 4228 4236 4224 4199 4161 4118 4076 4036\n[50079] 3998 3959 3919 3877 3832 3786 3743 3708 3690 3704 3757 3830 3898 3947\n[50093] 3970 3980 3993 4012 4038 4068 4096 4127 4159 4184 4189 4175 4140 4092\n[50107] 4036 3981 3930 3887 3855 3838 3835 3837 3833 3816 3788 3757 3736 3728\n[50121] 3737 3760 3797 3848 3914 3993 4083 4179 4276 4369 4453 4522 4568 4586\n[50135] 4571 4525 4451 4358 4257 4159 4075 4008 3959 3933 3937 3971 4034 4115\n[50149] 4202 4285 4357 4411 4444 4459 4462 4461 4467 4480 4496 4508 4504 4470\n[50163] 4394 4296 4206 4157 4183 4249 4320 4384 4433 4480 4520 4517 4439 4352\n[50177] 4330 4368 4449 4522 4546 4543 4537 4532 4526 4514 4486 4444 4385 4317\n[50191] 4248 4189 4153 4140 4144 4145 4129 4109 4106 4136 4199 4273 4327 4353\n[50205] 4351 4330 4293 4253 4213 4184 4172 4181 4210 4257 4317 4381 4441 4492\n[50219] 4529 4554 4568 4576 4577 4575 4570 4566 4562 4560 4561 4563 4565 4565\n[50233] 4563 4559 4553 4546 4540 4537 4536 4538 4544 4554 4566 4576 4583 4584\n[50247] 4578 4569 4558 4550 4544 4541 4541 4543 4545 4545 4542 4538 4531 4524\n[50261] 4518 4514 4510 4509 4509 4511 4513 4515 4518 4520 4517 4513 4510 4508\n[50275] 4508 4507 4507 4506 4506 4505 4503 4501 4501 4501 4501 4502 4503 4503\n[50289] 4503 4501 4498 4494 4491 4489 4489 4491 4494 4497 4497 4495 4494 4493\n[50303] 4492 4493 4495 4498 4503 4507 4510 4510 4505 4498 4492 4488 4484 4481\n[50317] 4478 4476 4473 4470 4465 4459 4453 4447 4444 4442 4444 4448 4453 4459\n[50331] 4464 4468 4468 4465 4461 4456 4452 4450 4450 4452 4456 4462 4467 4472\n[50345] 4474 4476 4476 4475 4473 4472 4470 4470 4471 4472 4472 4472 4471 4469\n[50359] 4465 4460 4457 4457 4459 4462 4465 4468 4470 4473 4475 4476 4476 4475\n[50373] 4475 4475 4475 4476 4478 4480 4482 4483 4485 4488 4489 4489 4488 4486\n[50387] 4484 4482 4480 4479 4478 4479 4480 4479 4479 4478 4478 4481 4487 4491\n[50401]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50415]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50429]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50443]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50457]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50471]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50485]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50499]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50513]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50527]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50541]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50555]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50569]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50583]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50597]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50611]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50625]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50639]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50653]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50667]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50681]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50695]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50709]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50723]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50737]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50751]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50765]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50779]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50793]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50807]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50821]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50835]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50849]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50863]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50877]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50891]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50905]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50919]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50933]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50947]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50961]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50975]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[50989]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51003]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51017]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51031]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51045]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51059]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51073]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51087]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51101]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51115]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51129]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51143]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51157]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51171]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51185]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51199]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51213]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51227]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51241]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51255]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51269]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51283]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51297]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51311]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51325]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51339]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51353]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51367]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51381]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51395]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51409]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51423]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51437]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51451]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51465]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51479]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51493]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51507]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51521]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51535]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51549]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51563]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51577]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51591]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51605]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51619]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51633]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[51647]   NA   NA   NA   13   34   18   21   29   37   43   42   45   64   87\n[51661]  108  131  154  179  195  209  221  229  233  236  238  244  256  268\n[51675]  274  281  288  310  357  424  505  591  672  743  797  840  869  892\n[51689]  908  930  973 1015 1071 1113 1156 1205 1291 1390 1482 1582 1694 1803\n[51703] 1891 1957 1988 1999 2006 2018 2062 2133 2241 2366 2494 2616 2719 2813\n[51717] 2904 2996 3105 3211 3316 3409 3517 3612 3703 3770 3787 3817 3897 3996\n[51731] 4060 4102 4119 4132 4163 4211 4280 4353 4411 4449 4448 4434 4430 4429\n[51745] 4430 4430 4430 4427 4422 4414 4405 4396 4392 4395 4409 4427 4445 4460\n[51759] 4470 4473 4469 4461 4452 4449 4459 4477 4501 4521 4529 4526 4510 4494\n[51773] 4490 4500 4530 4571 4616 4655 4676 4679 4662 4634 4604 4578 4565 4561\n[51787] 4569 4581 4595 4608 4619 4627 4634 4639 4642 4643 4640 4635 4628 4624\n[51801] 4629 4642 4666 4689 4702 4706 4699 4685 4669 4655 4647 4646 4653 4660\n[51815] 4653 4632 4581 4527 4485 4460 4455 4464 4480 4497 4511 4522 4532 4542\n[51829] 4556 4575 4603 4636 4670 4701 4722 4733 4734 4727 4712 4693 4677 4668\n[51843] 4675 4691 4710 4727 4735 4737 4731 4721 4705 4688 4672 4657 4651 4648\n[51857] 4648 4652 4656 4661 4660 4659 4664 4681 4716 4748 4765 4763 4752 4718\n[51871] 4623 4539 4507 4507 4522 4540 4557 4580 4615 4658 4702 4742 4768 4784\n[51885] 4786 4781 4776 4768 4761 4754 4754 4754 4754 4752 4751 4749 4749 4748\n[51899] 4745 4738 4730 4720 4711 4703 4697 4694 4695 4692 4682 4664 4640 4614\n[51913] 4590 4570 4557 4553 4561 4578 4601 4620 4629 4631 4646 4650 4641 4613\n[51927] 4564 4497 4415 4303 4144 3950 3727 3498 3295 3119 3003 2937 2952 3002\n[51941] 3069 3142 3214 3275 3316 3331 3321 3288 3242 3190 3147 3116 3107 3115\n[51955] 3138 3176 3223 3281 3344 3410 3471 3525 3564 3577 3552 3489 3385 3248\n[51969] 3083 2917 2780 2684 2655 2685 2785 2933 3124 3330 3534 3715 3857 3958\n[51983] 4016 4042 4047 4041 4034 4031 4038 4056 4087 4132 4189 4252 4315 4329\n[51997] 4215 4010 3655 3311 3108 2950 2775 2603 2472 2371 2314 2275 2242 2204\n[52011] 2151 2095 2048 2028 2058 2138 2279 2462 2676 2898 3108 3289 3426 3518\n[52025] 3568 3585 3584 3571 3559 3551 3556 3578 3624 3697 3798 3911 4017 4098\n[52039] 4088 4055 4020 3986 3944 3897 3834 3756 3661 3546 3411 3262 3105 2954\n[52053] 2830 2738 2692 2685 2717 2776 2846 2918 2973 3006 2999 2970 2943 2937\n[52067] 3078 3217 3298 3293 3145 2972 2950 2934 2869 2793 2748 2745 2801 2911\n[52081] 3080 3278 3495 3705 3900 4062 4185 4256 4270 4221 4101 3925 3705 3467\n[52095] 3234 3034 2899 2828 2825 2873 2946 3025 3077 3096 3060 2984 2870 2745\n[52109] 2643 2562 2536 2561 2746 2963 3160 3354 3568 3764 3918 4033 4111 4153\n[52123] 4165 4146 4094 4017 3922 3821 3728 3645 3582 3531 3493 3457 3415 3365\n[52137] 3304 3244 3193 3173 3200 3283 3387 3542 3651 3788 3931 4068 4169 4231\n[52151] 4235 4193 4108 4003 3901 3809 3746 3693 3650 3619 3604 3637 3719 3826\n[52165] 3900 3951 3982 4013 4091 4157 4169 4153 4126 4090 4043 4001 3969 3938\n[52179] 3904 3861 3818 3771 3722 3674 3636 3598 3569 3576 3645 3756 3851 3929\n[52193] 3958 3964 3965 3974 4007 4048 4088 4129 4163 4189 4187 4168 4122 4066\n[52207] 4001 3941 3890 3851 3824 3807 3799 3791 3773 3749 3718 3689 3673 3670\n[52221] 3683 3712 3754 3809 3874 3951 4040 4138 4239 4338 4425 4496 4539 4555\n[52235] 4535 4489 4414 4325 4227 4133 4054 3990 3944 3920 3925 3957 4018 4096\n[52249] 4180 4263 4336 4393 4429 4448 4454 4455 4463 4474 4488 4494 4481 4447\n[52263] 4382 4315 4265 4244 4258 4273 4285 4298 4352 4423 4479 4500 4445 4385\n[52277] 4391 4442 4515 4587 4592 4582 4575 4572 4569 4563 4544 4513 4466 4404\n[52291] 4332 4256 4197 4165 4172 4168 4116 4050 4016 4056 4171 4309 4399 4443\n[52305] 4455 4450 4425 4400 4366 4341 4325 4325 4341 4372 4411 4456 4493 4526\n[52319] 4546 4561 4568 4571 4570 4566 4561 4555 4551 4549 4549 4551 4552 4552\n[52333] 4551 4549 4544 4539 4536 4533 4532 4533 4538 4546 4556 4566 4573 4577\n[52347] 4572 4564 4556 4549 4543 4539 4536 4536 4536 4537 4535 4533 4527 4522\n[52361] 4517 4514 4510 4508 4506 4508 4506 4507 4509 4511 4511 4508 4508 4506\n[52375] 4507 4508 4509 4509 4510 4510 4508 4506 4505 4504 4503 4502 4502 4502\n[52389] 4502 4500 4497 4494 4491 4490 4490 4492 4495 4496 4493 4489 4486 4484\n[52403] 4485 4488 4494 4501 4508 4514 4517 4517 4512 4505 4498 4493 4488 4485\n[52417] 4481 4478 4474 4471 4465 4459 4453 4447 4444 4441 4443 4446 4452 4458\n[52431] 4464 4468 4469 4467 4464 4460 4458 4457 4457 4458 4462 4467 4471 4474\n[52445] 4476 4476 4476 4475 4474 4474 4474 4474 4474 4475 4474 4474 4474 4473\n[52459] 4469 4464 4460 4458 4458 4460 4463 4467 4471 4475 4477 4478 4478 4477\n[52473] 4476 4476 4476 4476 4478 4481 4483 4485 4489 4492 4494 4494 4492 4489\n[52487] 4486 4483 4481 4480 4481 4483 4484 4484 4482 4480 4480 4483 4490 4495\n[52501]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52515]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52529]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52543]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52557]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52571]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52585]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52599]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52613]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52627]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52641]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52655]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52669]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52683]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52697]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52711]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52725]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52739]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52753]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52767]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52781]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52795]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52809]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52823]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52837]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52851]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52865]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52879]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52893]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52907]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52921]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52935]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52949]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52963]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52977]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[52991]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53005]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53019]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53033]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53047]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53061]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53075]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53089]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53103]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53117]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53131]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53145]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53159]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53173]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53187]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53201]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53215]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53229]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53243]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53257]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53271]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53285]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53299]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53313]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53327]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53341]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53355]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53369]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53383]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53397]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53411]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53425]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53439]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53453]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53467]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53481]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53495]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53509]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53523]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53537]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53551]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53565]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53579]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53593]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53607]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53621]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53635]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53649]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53663]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53677]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53691]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53705]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53719]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53733]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[53747]   NA   NA   NA   14   46   26   21   30   39   44   45   51   69   92\n[53761]  114  137  163  189  208  222  231  236  238  239  241  247  258  269\n[53775]  278  290  309  343  396  464  544  625  700  764  815  853  880  901\n[53789]  925  963 1025 1093 1147 1187 1214 1257 1340 1443 1546 1653 1770 1884\n[53803] 1979 2053 2101 2127 2131 2134 2154 2200 2279 2380 2490 2598 2697 2789\n[53817] 2878 2974 3085 3204 3319 3422 3499 3569 3641 3686 3685 3698 3789 3911\n[53831] 4012 4085 4132 4170 4214 4267 4329 4389 4435 4460 4460 4448 4439 4436\n[53845] 4437 4440 4444 4446 4446 4442 4434 4426 4422 4425 4435 4450 4465 4478\n[53859] 4488 4493 4490 4483 4475 4472 4483 4503 4530 4554 4567 4569 4558 4545\n[53873] 4539 4546 4568 4602 4641 4674 4692 4694 4677 4651 4623 4600 4587 4585\n[53887] 4593 4605 4617 4627 4634 4638 4641 4643 4646 4648 4648 4646 4641 4642\n[53901] 4652 4672 4699 4722 4734 4731 4714 4686 4654 4622 4595 4582 4585 4598\n[53915] 4610 4603 4564 4516 4484 4472 4477 4492 4510 4526 4536 4542 4548 4556\n[53929] 4571 4595 4628 4666 4703 4733 4752 4760 4758 4748 4733 4717 4707 4705\n[53943] 4714 4728 4744 4756 4760 4757 4750 4737 4720 4702 4684 4670 4661 4658\n[53957] 4655 4656 4658 4659 4658 4661 4671 4692 4721 4749 4764 4760 4732 4666\n[53971] 4560 4468 4449 4469 4495 4516 4533 4555 4593 4641 4693 4739 4774 4795\n[53985] 4800 4796 4787 4777 4769 4764 4764 4765 4763 4759 4755 4754 4755 4756\n[53999] 4755 4749 4739 4724 4707 4692 4678 4669 4665 4661 4653 4639 4621 4601\n[54013] 4582 4568 4559 4557 4566 4583 4607 4628 4644 4655 4668 4674 4668 4645\n[54027] 4605 4549 4477 4381 4252 4091 3898 3688 3474 3280 3130 3040 3027 3062\n[54041] 3122 3193 3266 3329 3370 3383 3365 3320 3256 3186 3123 3076 3052 3051\n[54055] 3070 3106 3156 3218 3286 3356 3420 3474 3510 3520 3494 3430 3325 3190\n[54069] 3038 2892 2781 2719 2721 2785 2910 3079 3278 3482 3672 3832 3951 4030\n[54083] 4072 4086 4085 4075 4066 4061 4064 4076 4097 4126 4161 4192 4205 4152\n[54097] 3988 3724 3400 3105 2940 2820 2676 2526 2408 2328 2289 2271 2260 2244\n[54111] 2215 2184 2162 2168 2221 2326 2482 2677 2892 3107 3300 3459 3571 3638\n[54125] 3666 3666 3651 3630 3615 3612 3625 3659 3719 3804 3908 4011 4091 4133\n[54139] 4128 4095 4053 4006 3952 3890 3816 3726 3613 3474 3305 3115 2913 2719\n[54153] 2554 2432 2367 2358 2403 2489 2600 2719 2829 2920 2984 3029 3059 3102\n[54167] 3158 3215 3229 3178 3060 2950 2928 2917 2842 2749 2692 2693 2758 2887\n[54181] 3073 3294 3526 3751 3952 4118 4238 4304 4308 4244 4107 3905 3651 3372\n[54195] 3098 2864 2704 2629 2640 2718 2838 2971 3084 3157 3173 3134 3048 2939\n[54209] 2837 2769 2765 2827 2944 3096 3246 3408 3587 3759 3902 4007 4075 4113\n[54223] 4126 4113 4072 4007 3923 3830 3739 3657 3591 3538 3497 3459 3414 3361\n[54237] 3299 3237 3188 3166 3182 3239 3340 3479 3661 3852 4025 4166 4260 4305\n[54251] 4295 4240 4148 4040 3933 3838 3766 3712 3672 3649 3648 3676 3733 3804\n[54265] 3868 3921 3967 4016 4077 4120 4115 4080 4036 3985 3932 3893 3879 3867\n[54279] 3835 3786 3737 3686 3638 3596 3567 3529 3478 3460 3524 3647 3787 3900\n[54293] 3943 3948 3943 3949 3976 4016 4061 4103 4137 4155 4150 4121 4071 4009\n[54307] 3945 3888 3843 3811 3790 3776 3763 3746 3720 3687 3653 3626 3613 3616\n[54321] 3635 3669 3716 3772 3836 3910 3995 4090 4191 4290 4377 4444 4484 4493\n[54335] 4472 4426 4358 4277 4194 4114 4045 3989 3949 3930 3936 3968 4023 4094\n[54349] 4173 4251 4321 4377 4416 4438 4448 4454 4462 4470 4475 4469 4444 4401\n[54363] 4344 4302 4293 4315 4344 4340 4276 4223 4264 4350 4426 4466 4461 4448\n[54377] 4460 4499 4549 4589 4597 4589 4584 4583 4585 4585 4578 4561 4534 4490\n[54391] 4424 4339 4248 4199 4226 4234 4137 4002 3920 3954 4139 4351 4468 4513\n[54405] 4524 4521 4510 4495 4476 4460 4448 4446 4452 4468 4488 4509 4527 4542\n[54419] 4553 4560 4562 4562 4561 4558 4552 4546 4543 4541 4541 4541 4541 4541\n[54433] 4541 4540 4538 4535 4532 4530 4530 4530 4533 4537 4544 4551 4557 4560\n[54447] 4557 4552 4547 4542 4537 4532 4529 4526 4526 4526 4525 4523 4521 4517\n[54461] 4514 4510 4503 4496 4492 4490 4488 4489 4492 4498 4503 4508 4510 4511\n[54475] 4511 4512 4513 4514 4515 4515 4513 4510 4508 4506 4506 4506 4504 4503\n[54489] 4502 4501 4498 4494 4492 4491 4492 4494 4494 4492 4488 4482 4478 4477\n[54503] 4480 4486 4494 4503 4512 4518 4520 4519 4514 4506 4498 4492 4487 4483\n[54517] 4480 4477 4474 4471 4466 4461 4457 4452 4449 4447 4448 4450 4454 4459\n[54531] 4465 4469 4470 4469 4468 4466 4466 4466 4466 4467 4469 4472 4475 4477\n[54545] 4477 4477 4476 4475 4475 4475 4476 4476 4476 4477 4476 4476 4478 4478\n[54559] 4475 4470 4464 4460 4459 4460 4463 4467 4472 4476 4479 4480 4480 4480\n[54573] 4479 4478 4477 4478 4479 4481 4484 4487 4491 4496 4498 4499 4497 4494\n[54587] 4490 4487 4484 4483 4486 4488 4489 4488 4485 4483 4482 4486 4492 4496\n[54601]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54615]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54629]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54643]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54657]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54671]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54685]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54699]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54713]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54727]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54741]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54755]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54769]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54783]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54797]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54811]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54825]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54839]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54853]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54867]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54881]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54895]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54909]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54923]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54937]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54951]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54965]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54979]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[54993]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55007]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55021]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55035]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55049]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55063]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55077]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55091]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55105]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55119]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55133]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55147]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55161]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55175]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55189]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55203]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55217]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55231]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55245]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55259]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55273]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55287]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55301]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55315]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55329]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55343]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55357]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55371]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55385]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55399]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55413]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55427]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55441]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55455]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55469]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55483]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55497]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55511]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55525]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55539]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55553]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55567]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55581]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55595]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55609]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55623]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55637]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55651]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55665]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55679]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55693]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55707]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55721]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55735]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55749]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55763]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55777]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55791]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55805]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55819]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55833]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[55847]   NA   NA   NA   16   46   14   20   36   43   47   47   53   73   99\n[55861]  119  139  168  196  219  235  243  244  244  244  247  253  264  276\n[55875]  288  305  337  380  440  509  585  660  725  781  828  863  889  912\n[55889]  945  995 1077 1167 1208 1250 1262 1300 1390 1498 1602 1710 1834 1956\n[55903] 2056 2138 2203 2248 2251 2249 2250 2270 2324 2400 2490 2586 2678 2769\n[55917] 2857 2956 3072 3202 3320 3438 3478 3521 3582 3628 3599 3581 3703 3850\n[55931] 3972 4072 4144 4203 4258 4314 4369 4418 4451 4467 4465 4455 4445 4440\n[55945] 4443 4452 4460 4467 4471 4469 4461 4452 4447 4448 4456 4469 4481 4495\n[55959] 4508 4518 4518 4513 4507 4506 4519 4539 4567 4592 4607 4611 4600 4587\n[55973] 4578 4580 4596 4625 4657 4687 4701 4702 4686 4663 4638 4618 4610 4613\n[55987] 4625 4639 4650 4657 4659 4656 4652 4649 4650 4652 4655 4657 4656 4660\n[56001] 4679 4705 4735 4759 4767 4758 4730 4688 4636 4580 4522 4482 4469 4482\n[56015] 4516 4539 4510 4474 4461 4470 4489 4516 4539 4558 4567 4571 4575 4580\n[56029] 4595 4618 4655 4695 4731 4760 4777 4784 4780 4770 4756 4744 4741 4744\n[56043] 4755 4768 4779 4784 4781 4773 4762 4747 4729 4711 4692 4679 4669 4665\n[56057] 4660 4658 4660 4662 4662 4665 4678 4699 4726 4751 4760 4750 4709 4632\n[56071] 4517 4409 4423 4462 4491 4510 4522 4536 4576 4626 4682 4735 4774 4800\n[56085] 4806 4804 4796 4786 4779 4774 4775 4778 4773 4767 4762 4760 4763 4767\n[56099] 4769 4764 4749 4726 4697 4669 4643 4627 4617 4615 4608 4601 4590 4579\n[56113] 4572 4568 4566 4567 4578 4596 4625 4653 4677 4694 4707 4712 4704 4684\n[56127] 4652 4606 4549 4472 4370 4240 4076 3891 3674 3467 3292 3170 3134 3150\n[56141] 3198 3265 3342 3410 3456 3468 3444 3385 3304 3212 3127 3059 3018 3005\n[56155] 3015 3049 3098 3162 3234 3309 3375 3428 3463 3470 3443 3379 3275 3148\n[56169] 3013 2893 2817 2792 2833 2931 3084 3268 3469 3664 3831 3964 4053 4106\n[56183] 4128 4130 4122 4110 4099 4092 4091 4096 4105 4115 4124 4117 4087 3984\n[56197] 3783 3492 3224 2954 2863 2776 2635 2487 2387 2325 2304 2306 2314 2321\n[56211] 2316 2312 2318 2351 2431 2555 2726 2926 3136 3340 3511 3647 3731 3776\n[56225] 3783 3767 3739 3711 3694 3692 3710 3749 3815 3899 4000 4088 4132 4138\n[56239] 4129 4093 4044 3983 3917 3844 3763 3666 3542 3389 3194 2972 2735 2503\n[56253] 2304 2149 2066 2045 2099 2202 2346 2505 2665 2815 2944 3062 3123 3210\n[56267] 3196 3202 3163 3095 2996 2914 2907 2912 2797 2692 2650 2675 2764 2912\n[56281] 3123 3364 3607 3837 4036 4194 4300 4350 4335 4252 4090 3864 3575 3261\n[56295] 2948 2680 2500 2414 2434 2535 2693 2876 3041 3174 3240 3253 3202 3123\n[56309] 3032 2980 2994 3082 3119 3222 3330 3476 3641 3791 3912 3994 4046 4074\n[56323] 4088 4082 4051 3999 3925 3839 3751 3667 3598 3541 3498 3458 3411 3359\n[56337] 3297 3237 3191 3166 3180 3213 3317 3426 3671 3893 4080 4219 4302 4335\n[56351] 4312 4253 4160 4057 3956 3868 3802 3755 3717 3697 3692 3707 3746 3796\n[56365] 3851 3909 3964 4022 4071 4099 4073 4019 3968 3908 3846 3802 3819 3826\n[56379] 3785 3717 3671 3625 3581 3541 3535 3516 3434 3368 3426 3545 3715 3872\n[56393] 3915 3922 3920 3924 3947 3982 4022 4060 4089 4101 4089 4055 4000 3936\n[56407] 3878 3827 3792 3768 3754 3743 3728 3706 3671 3632 3594 3566 3557 3565\n[56421] 3590 3630 3679 3736 3798 3868 3947 4036 4135 4232 4316 4379 4411 4416\n[56435] 4393 4350 4290 4224 4160 4099 4045 4001 3969 3954 3961 3990 4039 4102\n[56449] 4171 4242 4305 4360 4397 4424 4439 4449 4457 4461 4456 4439 4396 4342\n[56463] 4267 4232 4257 4330 4400 4426 4288 4152 4203 4299 4385 4448 4478 4496\n[56477] 4513 4536 4560 4576 4576 4568 4566 4568 4573 4581 4582 4581 4574 4555\n[56491] 4501 4426 4304 4219 4296 4350 4187 3983 3863 3855 4125 4421 4521 4550\n[56505] 4561 4558 4556 4551 4544 4539 4531 4532 4532 4539 4543 4548 4551 4552\n[56519] 4555 4556 4555 4553 4552 4551 4546 4542 4540 4538 4538 4538 4538 4536\n[56533] 4536 4535 4534 4532 4530 4529 4529 4529 4529 4529 4532 4534 4536 4537\n[56547] 4534 4531 4528 4527 4524 4523 4522 4520 4521 4519 4520 4517 4516 4513\n[56561] 4511 4505 4493 4480 4471 4464 4459 4459 4464 4475 4488 4503 4509 4514\n[56575] 4514 4515 4516 4518 4519 4519 4516 4512 4509 4508 4508 4509 4506 4504\n[56589] 4503 4502 4498 4495 4493 4493 4494 4495 4493 4489 4482 4476 4472 4472\n[56603] 4477 4485 4495 4505 4512 4517 4518 4517 4510 4502 4494 4488 4483 4479\n[56617] 4477 4475 4474 4471 4468 4465 4462 4460 4458 4457 4456 4456 4458 4462\n[56631] 4467 4471 4473 4473 4473 4473 4474 4475 4474 4475 4475 4477 4479 4480\n[56645] 4480 4479 4478 4476 4476 4477 4477 4477 4478 4478 4478 4478 4481 4483\n[56659] 4480 4475 4469 4463 4461 4462 4464 4468 4473 4478 4481 4483 4484 4483\n[56673] 4482 4480 4479 4479 4479 4481 4484 4488 4493 4498 4501 4503 4502 4499\n[56687] 4495 4491 4488 4487 4490 4494 4495 4493 4489 4485 4485 4487 4493 4497\n[56701]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56715]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56729]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56743]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56757]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56771]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56785]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56799]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56813]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56827]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56841]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56855]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56869]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56883]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56897]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56911]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56925]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56939]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56953]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56967]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56981]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[56995]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57009]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57023]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57037]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57051]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57065]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57079]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57093]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57107]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57135]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57149]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57163]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57177]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57191]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57205]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57219]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57233]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57247]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57261]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57275]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57289]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57303]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57317]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57331]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57345]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57359]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57373]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57387]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57401]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57415]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57429]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57443]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57457]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57471]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57485]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57499]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57513]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57527]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57541]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57555]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57569]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57583]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57597]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57611]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57625]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57639]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57653]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57667]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57681]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57695]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57709]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57723]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57737]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57751]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57765]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57779]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57793]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57807]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57821]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57835]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57849]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57863]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57877]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57891]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57905]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57919]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57933]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[57947]   NA   NA   NA   22   42   19   21   37   44   45   46   54   75  100\n[57961]  125  148  176  204  230  249  256  256  256  256  260  267  277  291\n[57975]  309  335  375  428  491  559  629  693  750  799  842  876  903  932\n[57989]  974 1032 1105 1171 1210 1241 1284 1349 1438 1543 1650 1765 1890 2012\n[58003] 2119 2208 2278 2325 2344 2343 2339 2344 2374 2426 2497 2578 2662 2748\n[58017] 2836 2934 3045 3164 3275 3367 3428 3475 3525 3557 3560 3584 3677 3808\n[58031] 3941 4058 4150 4224 4288 4345 4395 4434 4458 4467 4465 4456 4444 4438\n[58045] 4445 4459 4475 4487 4494 4492 4483 4471 4464 4463 4468 4478 4493 4511\n[58059] 4529 4543 4550 4552 4552 4557 4569 4587 4610 4630 4641 4642 4630 4614\n[58073] 4601 4598 4611 4635 4663 4687 4700 4699 4685 4665 4645 4632 4631 4641\n[58087] 4659 4677 4690 4694 4690 4679 4667 4658 4654 4656 4661 4667 4673 4685\n[58101] 4709 4739 4770 4792 4798 4785 4749 4692 4618 4528 4430 4347 4303 4312\n[58115] 4358 4409 4412 4404 4415 4447 4486 4527 4561 4585 4599 4606 4612 4618\n[58129] 4628 4648 4682 4721 4755 4780 4796 4801 4799 4790 4781 4774 4776 4784\n[58143] 4795 4806 4812 4810 4800 4785 4769 4750 4730 4710 4692 4678 4670 4666\n[58157] 4664 4663 4665 4667 4666 4670 4681 4701 4724 4743 4749 4735 4693 4621\n[58171] 4531 4462 4456 4483 4509 4526 4532 4542 4571 4617 4674 4729 4770 4792\n[58185] 4801 4800 4798 4793 4787 4783 4783 4782 4779 4773 4767 4765 4770 4778\n[58199] 4782 4776 4755 4721 4676 4629 4590 4564 4550 4547 4548 4550 4549 4551\n[58213] 4560 4572 4580 4587 4600 4622 4656 4691 4721 4742 4754 4755 4746 4727\n[58227] 4700 4665 4622 4564 4484 4375 4234 4062 3862 3659 3475 3338 3269 3258\n[58241] 3293 3358 3440 3516 3566 3581 3552 3484 3385 3270 3159 3066 3002 2970\n[58255] 2969 2996 3045 3112 3189 3268 3341 3398 3432 3436 3406 3339 3240 3124\n[58269] 3012 2925 2885 2902 2981 3114 3287 3482 3675 3849 3988 4088 4147 4174\n[58283] 4177 4168 4154 4139 4128 4121 4116 4113 4109 4101 4087 4053 3987 3862\n[58297] 3665 3431 3211 3028 2895 2777 2633 2498 2406 2360 2351 2367 2393 2421\n[58311] 2445 2471 2508 2572 2674 2815 2991 3186 3384 3566 3714 3823 3886 3911\n[58325] 3904 3877 3843 3812 3794 3791 3809 3848 3909 3988 4072 4139 4162 4151\n[58339] 4122 4072 4005 3926 3844 3760 3672 3570 3442 3278 3073 2835 2579 2326\n[58353] 2102 1926 1823 1794 1845 1957 2118 2306 2504 2697 2871 2997 3055 3083\n[58367] 3112 3125 3094 3029 2945 2877 2840 2798 2702 2622 2623 2694 2815 2989\n[58381] 3216 3470 3720 3948 4137 4278 4362 4385 4342 4230 4043 3788 3472 3128\n[58395] 2789 2498 2299 2205 2224 2337 2519 2735 2946 3126 3248 3309 3306 3261\n[58409] 3195 3143 3130 3149 3177 3249 3382 3553 3724 3863 3947 3994 4023 4043\n[58423] 4056 4055 4035 3992 3928 3847 3759 3673 3597 3535 3487 3445 3401 3352\n[58437] 3297 3247 3212 3203 3234 3305 3422 3572 3754 3936 4096 4217 4285 4304\n[58451] 4277 4216 4133 4044 3960 3890 3837 3798 3767 3746 3735 3739 3761 3797\n[58465] 3845 3901 3960 4016 4055 4067 4042 3993 3935 3870 3809 3774 3793 3800\n[58479] 3731 3653 3612 3590 3549 3521 3526 3518 3452 3389 3404 3493 3644 3786\n[58493] 3861 3887 3896 3905 3923 3950 3982 4011 4031 4035 4017 3979 3925 3865\n[58507] 3811 3768 3741 3725 3717 3709 3692 3665 3624 3579 3539 3512 3505 3518\n[58521] 3548 3591 3642 3698 3758 3824 3899 3983 4077 4169 4247 4304 4331 4331\n[58535] 4308 4269 4222 4174 4129 4089 4052 4020 3997 3987 3993 4017 4058 4110\n[58549] 4167 4227 4281 4330 4368 4399 4420 4435 4445 4446 4432 4397 4337 4252\n[58563] 4151 4099 4148 4262 4370 4406 4310 4206 4207 4278 4362 4436 4488 4522\n[58577] 4543 4555 4560 4557 4548 4536 4530 4529 4535 4544 4554 4565 4574 4569\n[58591] 4534 4467 4378 4329 4363 4367 4232 4044 3922 3941 4150 4393 4522 4566\n[58605] 4578 4578 4577 4574 4571 4569 4569 4571 4573 4576 4576 4574 4569 4563\n[58619] 4559 4554 4550 4547 4546 4546 4546 4546 4546 4546 4546 4545 4543 4540\n[58633] 4538 4536 4533 4531 4530 4530 4530 4530 4529 4526 4523 4518 4513 4508\n[58647] 4504 4500 4500 4502 4507 4514 4522 4527 4528 4527 4524 4522 4520 4517\n[58661] 4511 4501 4486 4468 4451 4436 4423 4418 4423 4437 4457 4479 4496 4507\n[58675] 4512 4514 4516 4517 4518 4518 4516 4513 4510 4508 4508 4507 4504 4502\n[58689] 4501 4500 4498 4496 4495 4496 4496 4495 4491 4485 4479 4473 4472 4473\n[58703] 4479 4487 4496 4504 4509 4511 4511 4507 4501 4494 4488 4483 4479 4476\n[58717] 4475 4475 4474 4473 4471 4469 4468 4467 4467 4466 4465 4465 4465 4467\n[58731] 4470 4474 4477 4479 4480 4480 4480 4480 4480 4480 4480 4481 4482 4483\n[58745] 4483 4482 4481 4479 4479 4479 4479 4479 4479 4479 4480 4482 4484 4486\n[58759] 4484 4479 4473 4468 4465 4465 4467 4470 4475 4480 4484 4486 4487 4486\n[58773] 4485 4482 4481 4480 4479 4480 4483 4487 4493 4498 4502 4504 4504 4502\n[58787] 4499 4495 4492 4492 4495 4499 4499 4497 4492 4488 4487 4489 4493 4496\n[58801]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58815]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58829]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58843]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58857]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58871]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58885]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58899]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58913]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58927]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58941]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58955]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58969]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58983]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[58997]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59011]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59025]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59039]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59053]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59067]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59081]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59095]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59109]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59123]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59137]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59165]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59179]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59193]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59207]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59221]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59235]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59249]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59263]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59277]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59291]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59305]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59319]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59333]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59347]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59361]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59375]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59389]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59403]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59417]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59431]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59445]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59459]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59473]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59487]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59501]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59515]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59529]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59543]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59557]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59571]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59585]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59599]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59613]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59627]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59641]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59655]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59669]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59683]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59697]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59711]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59725]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59739]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59753]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59767]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59781]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59795]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59809]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59823]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59837]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59851]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59865]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59879]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59893]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59907]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59921]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59935]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59949]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59963]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59977]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[59991]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60005]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60019]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60033]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60047]   NA   NA   NA   18   38    8   23   43   46   45   48   56   80  108\n[60061]  136  162  188  212  240  262  267  268  269  272  277  285  296  313\n[60075]  337  373  422  481  547  613  675  730  778  818  858  894  923  956\n[60089] 1007 1064 1123 1168 1193 1213 1288 1382 1476 1582 1691 1809 1937 2061\n[60103] 2169 2260 2333 2382 2413 2419 2414 2408 2424 2458 2514 2582 2657 2736\n[60117] 2812 2903 3006 3119 3226 3305 3389 3440 3491 3525 3553 3602 3680 3793\n[60131] 3922 4048 4147 4230 4297 4356 4403 4440 4457 4463 4462 4455 4442 4433\n[60145] 4445 4464 4486 4504 4511 4510 4496 4481 4472 4470 4472 4482 4502 4526\n[60159] 4550 4572 4587 4598 4607 4615 4626 4639 4653 4664 4667 4662 4645 4627\n[60173] 4610 4604 4617 4638 4663 4683 4692 4690 4676 4658 4642 4635 4643 4663\n[60187] 4689 4715 4729 4733 4722 4703 4683 4666 4659 4660 4668 4680 4691 4708\n[60201] 4737 4771 4801 4822 4828 4812 4769 4699 4605 4484 4335 4195 4092 4077\n[60215] 4130 4244 4272 4305 4354 4414 4475 4532 4575 4608 4627 4640 4648 4657\n[60229] 4662 4676 4708 4744 4773 4795 4808 4813 4811 4807 4802 4801 4807 4818\n[60243] 4831 4840 4840 4832 4815 4794 4773 4751 4729 4708 4690 4675 4670 4667\n[60257] 4666 4667 4669 4673 4670 4672 4682 4698 4715 4730 4732 4720 4685 4636\n[60271] 4572 4528 4514 4529 4545 4560 4557 4558 4574 4612 4672 4731 4771 4783\n[60285] 4793 4787 4792 4793 4789 4786 4786 4785 4784 4779 4771 4767 4775 4786\n[60299] 4791 4784 4756 4711 4647 4582 4531 4494 4480 4478 4487 4499 4502 4516\n[60313] 4548 4582 4599 4609 4626 4650 4690 4733 4765 4789 4798 4798 4786 4767\n[60327] 4744 4718 4688 4647 4584 4495 4370 4214 4029 3838 3650 3503 3412 3380\n[60341] 3404 3464 3549 3634 3687 3708 3676 3605 3488 3352 3215 3093 3004 2951\n[60355] 2937 2957 3007 3077 3161 3247 3329 3391 3426 3426 3390 3322 3225 3121\n[60369] 3032 2976 2973 3027 3143 3305 3495 3694 3871 4023 4127 4196 4224 4227\n[60383] 4213 4194 4176 4161 4150 4143 4134 4124 4106 4081 4045 3989 3904 3782\n[60397] 3600 3417 3237 3111 2935 2803 2644 2521 2446 2417 2421 2451 2494 2546\n[60411] 2597 2654 2722 2811 2933 3083 3257 3442 3618 3776 3895 3981 4023 4036\n[60425] 4019 3989 3955 3925 3908 3905 3920 3950 3994 4056 4116 4174 4177 4154\n[60439] 4105 4034 3942 3839 3740 3642 3547 3443 3312 3151 2945 2708 2447 2187\n[60453] 1952 1762 1650 1610 1660 1773 1946 2149 2378 2600 2818 2954 2984 2932\n[60467] 3013 3051 3031 2975 2890 2810 2745 2686 2598 2548 2620 2752 2901 3092\n[60481] 3336 3600 3848 4069 4241 4360 4414 4405 4328 4185 3968 3689 3347 2982\n[60495] 2623 2316 2108 2005 2025 2142 2339 2576 2818 3039 3204 3316 3358 3354\n[60509] 3312 3258 3217 3180 3196 3251 3427 3632 3806 3945 3983 3994 4004 4018\n[60523] 4032 4039 4026 3990 3929 3849 3757 3664 3581 3512 3460 3420 3380 3342\n[60537] 3300 3265 3246 3257 3319 3427 3567 3735 3838 3951 4066 4166 4214 4224\n[60551] 4192 4137 4068 4000 3939 3893 3859 3836 3811 3791 3775 3769 3779 3805\n[60565] 3845 3897 3954 4005 4037 4044 4020 3979 3928 3876 3827 3774 3772 3764\n[60579] 3620 3532 3525 3564 3517 3491 3529 3572 3520 3460 3454 3492 3620 3740\n[60593] 3820 3857 3879 3890 3906 3924 3946 3964 3977 3974 3951 3909 3858 3802\n[60607] 3754 3715 3696 3686 3683 3677 3659 3629 3583 3534 3493 3465 3461 3476\n[60621] 3510 3555 3606 3661 3718 3780 3851 3931 4020 4107 4180 4232 4255 4252\n[60635] 4231 4197 4164 4131 4107 4085 4063 4043 4027 4020 4025 4043 4074 4114\n[60649] 4158 4205 4249 4291 4329 4364 4392 4415 4430 4430 4409 4361 4287 4182\n[60663] 4036 3935 3999 4137 4276 4373 4308 4234 4233 4290 4361 4437 4495 4535\n[60677] 4556 4561 4554 4539 4519 4499 4485 4478 4480 4488 4499 4516 4536 4547\n[60691] 4532 4497 4439 4400 4422 4417 4289 4134 4036 4041 4206 4403 4508 4556\n[60705] 4578 4581 4580 4576 4573 4571 4576 4582 4590 4595 4597 4593 4586 4576\n[60719] 4566 4557 4551 4547 4547 4548 4553 4557 4561 4562 4563 4561 4558 4552\n[60733] 4547 4541 4537 4533 4532 4532 4533 4533 4531 4526 4517 4505 4493 4482\n[60747] 4475 4470 4471 4477 4490 4506 4522 4536 4538 4537 4533 4529 4526 4522\n[60761] 4514 4502 4486 4464 4440 4411 4383 4365 4367 4387 4416 4450 4480 4500\n[60775] 4510 4512 4514 4515 4516 4516 4515 4513 4511 4508 4506 4504 4502 4500\n[60789] 4500 4499 4499 4498 4499 4499 4499 4496 4492 4485 4480 4475 4476 4479\n[60803] 4485 4491 4497 4502 4504 4503 4501 4497 4491 4485 4482 4480 4477 4475\n[60817] 4475 4475 4474 4474 4471 4470 4469 4471 4471 4472 4471 4472 4472 4473\n[60831] 4475 4478 4483 4486 4487 4487 4486 4485 4485 4484 4485 4485 4486 4486\n[60845] 4486 4486 4484 4482 4481 4481 4481 4481 4480 4480 4481 4483 4485 4487\n[60859] 4485 4481 4477 4473 4470 4468 4470 4473 4477 4482 4486 4489 4490 4490\n[60873] 4488 4485 4482 4480 4478 4478 4481 4486 4492 4497 4502 4505 4506 4505\n[60887] 4502 4498 4496 4496 4499 4503 4503 4501 4496 4491 4490 4491 4494 4496\n[60901]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60915]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60929]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60943]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60957]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60971]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60985]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[60999]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61013]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61027]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61041]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61055]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61069]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61083]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61097]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61111]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61125]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61139]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61153]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61167]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61181]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61195]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61209]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61223]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61237]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61251]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61265]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61279]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61293]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61307]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61321]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61335]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61349]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61363]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61377]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61391]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61405]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61419]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61433]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61447]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61461]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61475]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61489]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61503]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61517]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61531]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61545]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61559]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61573]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61587]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61601]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61615]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61629]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61643]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61657]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61671]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61685]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61699]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61713]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61727]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61741]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61755]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61769]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61783]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61797]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61811]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61825]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61839]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61853]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61867]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61881]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61895]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61909]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61923]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61937]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61951]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61965]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61979]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[61993]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62007]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62021]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62035]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62049]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62063]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62077]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62091]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62105]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62119]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62133]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[62147]   NA   NA   NA    3   42   28   30   42   49   52   58   70   94  124\n[62161]  155  182  205  225  247  265  274  279  284  289  296  305  316  337\n[62175]  370  417  475  540  606  668  724  771  810  843  875  909  947  991\n[62189] 1043 1097 1145 1178 1196 1225 1295 1390 1494 1606 1725 1850 1977 2098\n[62203] 2206 2297 2370 2426 2461 2476 2468 2461 2469 2498 2545 2604 2670 2734\n[62217] 2792 2864 2967 3089 3214 3322 3403 3458 3496 3526 3561 3612 3690 3793\n[62231] 3913 4033 4134 4218 4287 4345 4394 4430 4448 4455 4455 4450 4441 4437\n[62245] 4448 4468 4492 4511 4518 4513 4498 4481 4471 4468 4473 4487 4511 4540\n[62259] 4572 4603 4630 4652 4668 4679 4686 4690 4691 4688 4679 4665 4645 4624\n[62273] 4611 4608 4620 4640 4660 4675 4680 4673 4658 4640 4628 4629 4645 4674\n[62287] 4710 4742 4761 4763 4748 4723 4696 4675 4665 4667 4677 4691 4707 4730\n[62301] 4761 4796 4827 4848 4854 4837 4790 4711 4598 4446 4257 4051 3869 3779\n[62315] 3845 3981 4104 4205 4296 4381 4460 4528 4582 4621 4648 4664 4675 4682\n[62329] 4689 4703 4729 4759 4784 4801 4812 4817 4817 4816 4817 4822 4832 4844\n[62343] 4856 4863 4860 4847 4826 4800 4775 4751 4730 4710 4694 4682 4675 4671\n[62357] 4670 4670 4672 4672 4672 4675 4683 4693 4704 4711 4713 4704 4681 4647\n[62371] 4608 4580 4568 4574 4586 4594 4591 4585 4589 4616 4677 4741 4776 4788\n[62385] 4783 4776 4774 4778 4779 4782 4785 4787 4789 4787 4779 4772 4776 4785\n[62399] 4792 4783 4747 4689 4615 4539 4479 4438 4422 4424 4437 4450 4459 4482\n[62413] 4536 4592 4619 4631 4649 4677 4718 4761 4797 4822 4833 4831 4819 4802\n[62427] 4781 4761 4739 4709 4662 4589 4481 4339 4166 3980 3799 3650 3552 3512\n[62441] 3525 3580 3660 3742 3801 3824 3798 3724 3604 3455 3294 3145 3029 2955\n[62455] 2927 2941 2992 3069 3163 3259 3348 3414 3448 3443 3401 3327 3235 3142\n[62469] 3073 3044 3073 3161 3305 3486 3683 3872 4032 4155 4232 4270 4274 4257\n[62483] 4232 4207 4187 4173 4164 4156 4145 4127 4098 4056 3999 3924 3824 3695\n[62497] 3533 3359 3188 3034 2887 2757 2641 2552 2502 2489 2507 2550 2611 2685\n[62511] 2765 2852 2950 3064 3197 3349 3512 3675 3824 3949 4042 4102 4131 4135\n[62525] 4119 4094 4068 4046 4033 4031 4041 4055 4071 4094 4133 4164 4172 4144\n[62539] 4076 3978 3858 3732 3611 3498 3393 3283 3155 2999 2807 2584 2338 2089\n[62553] 1860 1676 1560 1520 1563 1676 1848 2063 2309 2570 2825 2998 3042 3016\n[62567] 3016 3010 2974 2910 2827 2736 2648 2573 2534 2556 2664 2826 3012 3225\n[62581] 3473 3731 3973 4180 4333 4424 4448 4404 4291 4112 3866 3558 3199 2821\n[62595] 2459 2155 1945 1845 1862 1980 2176 2418 2674 2914 3114 3262 3350 3388\n[62609] 3383 3352 3309 3273 3276 3341 3506 3698 3857 3959 3995 3995 3994 4000\n[62623] 4021 4034 4026 3989 3925 3838 3738 3636 3543 3468 3413 3376 3347 3324\n[62637] 3303 3289 3290 3322 3400 3515 3646 3769 3841 3905 3982 4054 4090 4093\n[62651] 4064 4018 3968 3924 3892 3873 3862 3855 3842 3825 3808 3798 3800 3818\n[62665] 3853 3899 3951 3996 4022 4025 4004 3969 3934 3912 3903 3858 3728 3561\n[62679] 3421 3356 3397 3460 3467 3474 3538 3604 3616 3595 3584 3605 3674 3756\n[62693] 3820 3859 3881 3892 3901 3910 3922 3931 3935 3926 3900 3859 3810 3759\n[62707] 3714 3681 3663 3656 3654 3648 3629 3597 3551 3501 3459 3432 3427 3443\n[62721] 3477 3522 3573 3626 3681 3741 3810 3887 3970 4051 4121 4169 4191 4189\n[62735] 4172 4148 4126 4108 4097 4088 4077 4065 4055 4049 4051 4063 4083 4110\n[62749] 4141 4174 4207 4242 4280 4319 4358 4392 4414 4417 4393 4341 4257 4132\n[62763] 3973 3858 3874 3980 4129 4240 4256 4239 4254 4304 4372 4443 4501 4541\n[62777] 4560 4561 4546 4523 4494 4466 4444 4428 4420 4421 4429 4446 4469 4489\n[62791] 4497 4492 4476 4464 4462 4433 4346 4243 4176 4185 4280 4404 4494 4546\n[62805] 4570 4576 4572 4566 4562 4563 4572 4584 4598 4608 4613 4611 4603 4592\n[62819] 4580 4569 4562 4558 4560 4564 4571 4577 4583 4586 4587 4584 4578 4570\n[62833] 4561 4551 4544 4538 4536 4535 4535 4535 4532 4525 4513 4497 4480 4466\n[62847] 4455 4450 4453 4462 4479 4498 4517 4533 4540 4541 4537 4533 4528 4524\n[62861] 4516 4507 4495 4474 4440 4393 4341 4304 4301 4328 4372 4423 4467 4497\n[62875] 4510 4512 4514 4515 4515 4515 4515 4514 4512 4510 4507 4504 4503 4502\n[62889] 4501 4502 4503 4503 4504 4504 4503 4501 4497 4492 4488 4485 4486 4490\n[62903] 4494 4498 4500 4500 4499 4496 4493 4489 4485 4482 4481 4480 4479 4477\n[62917] 4476 4475 4473 4470 4466 4464 4464 4465 4468 4470 4472 4474 4476 4478\n[62931] 4481 4485 4490 4493 4495 4495 4493 4491 4490 4490 4490 4490 4489 4489\n[62945] 4489 4488 4486 4485 4484 4483 4482 4481 4479 4479 4479 4480 4482 4483\n[62959] 4483 4481 4479 4476 4474 4472 4473 4475 4479 4484 4488 4492 4494 4494\n[62973] 4491 4488 4484 4480 4478 4477 4480 4485 4491 4497 4502 4506 4507 4507\n[62987] 4505 4502 4500 4499 4502 4505 4506 4504 4500 4496 4494 4494 4496 4497\n[63001]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63015]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63029]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63043]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63057]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63071]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63085]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63099]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63113]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63127]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63141]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63155]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63169]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63183]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63197]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63211]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63225]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63239]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63253]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63267]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63281]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63295]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63309]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63323]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63337]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63351]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63365]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63379]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63393]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63407]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63421]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63435]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63449]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63463]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63477]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63491]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63505]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63519]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63533]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63547]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63561]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63575]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63589]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63603]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63617]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63631]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63645]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63659]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63673]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63687]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63701]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63715]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63729]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63743]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63757]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63771]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63785]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63799]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63813]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63827]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63841]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63855]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63869]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63883]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63897]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63911]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63925]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63939]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63953]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63967]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63981]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[63995]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64009]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64023]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64037]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64051]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64065]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64079]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64093]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64107]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64135]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64149]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64163]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64177]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64191]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64205]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64219]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64233]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[64247]   NA   NA   NA   NA   NA   19   32   46   54   62   73   90  116  146\n[64261]  176  204  221  237  254  268  279  288  296  306  315  327  341  365\n[64275]  409  465  530  599  663  721  769  810  840  867  892  924  968 1021\n[64289] 1073 1126 1169 1203 1216 1243 1310 1401 1510 1627 1755 1885 2010 2127\n[64303] 2229 2317 2382 2437 2465 2494 2484 2486 2503 2537 2586 2642 2708 2762\n[64317] 2800 2843 2952 3082 3229 3368 3443 3498 3526 3552 3588 3633 3710 3803\n[64331] 3913 4025 4119 4199 4266 4322 4374 4414 4435 4444 4449 4449 4444 4441\n[64345] 4450 4468 4490 4511 4515 4509 4493 4475 4467 4465 4475 4493 4521 4556\n[64359] 4596 4636 4674 4706 4727 4739 4738 4731 4717 4701 4681 4659 4635 4615\n[64373] 4607 4609 4625 4644 4661 4670 4668 4656 4636 4616 4606 4611 4636 4674\n[64387] 4718 4759 4780 4784 4765 4736 4704 4680 4673 4677 4690 4707 4726 4749\n[64401] 4783 4817 4847 4867 4873 4855 4806 4720 4598 4429 4220 3976 3735 3549\n[64415] 3658 3812 3995 4141 4266 4364 4454 4529 4590 4634 4665 4683 4694 4701\n[64429] 4709 4722 4745 4770 4788 4801 4809 4814 4815 4817 4822 4831 4843 4858\n[64443] 4870 4876 4870 4855 4831 4803 4777 4752 4732 4716 4703 4693 4684 4677\n[64457] 4674 4674 4675 4675 4679 4681 4689 4693 4696 4695 4698 4694 4681 4661\n[64471] 4638 4619 4614 4618 4631 4639 4637 4627 4623 4627 4686 4745 4750 4756\n[64485] 4731 4729 4728 4744 4754 4768 4775 4782 4790 4793 4787 4776 4777 4780\n[64499] 4785 4778 4733 4666 4584 4502 4440 4398 4387 4392 4413 4429 4436 4451\n[64513] 4529 4607 4628 4638 4658 4690 4731 4777 4815 4843 4855 4854 4842 4825\n[64527] 4806 4787 4770 4749 4714 4659 4568 4444 4281 4101 3925 3777 3682 3640\n[64541] 3646 3694 3769 3850 3912 3940 3919 3849 3728 3572 3393 3218 3081 2984\n[64555] 2946 2953 3008 3092 3198 3304 3400 3468 3499 3490 3440 3361 3270 3185\n[64569] 3131 3122 3177 3290 3454 3647 3840 4019 4154 4251 4299 4314 4296 4266\n[64583] 4233 4206 4188 4178 4172 4165 4151 4126 4084 4027 3951 3859 3748 3618\n[64597] 3460 3287 3110 2932 2823 2720 2653 2600 2576 2578 2610 2667 2746 2840\n[64611] 2946 3060 3181 3312 3452 3598 3744 3882 3998 4092 4154 4193 4208 4210\n[64625] 4200 4187 4173 4163 4158 4158 4166 4170 4166 4146 4170 4164 4167 4124\n[64639] 4030 3901 3754 3602 3462 3333 3218 3105 2982 2840 2668 2471 2250 2026\n[64653] 1818 1648 1541 1501 1544 1652 1822 2037 2291 2568 2879 3116 3168 3139\n[64667] 3076 3010 2941 2864 2784 2693 2602 2526 2541 2611 2761 2949 3156 3371\n[64681] 3617 3860 4087 4277 4407 4473 4465 4387 4239 4026 3749 3421 3044 2661\n[64695] 2307 2013 1818 1723 1747 1860 2052 2286 2538 2783 2998 3175 3297 3376\n[64709] 3412 3421 3410 3400 3417 3466 3623 3782 3901 3970 4000 3997 4001 4001\n[64723] 4037 4052 4039 3990 3913 3814 3699 3585 3483 3402 3349 3319 3306 3305\n[64737] 3308 3318 3336 3377 3455 3556 3645 3730 3758 3792 3851 3912 3937 3937\n[64751] 3913 3879 3850 3828 3825 3833 3847 3860 3859 3851 3837 3825 3826 3839\n[64765] 3870 3909 3957 3997 4020 4021 4000 3970 3947 3942 3981 3967 3703 3390\n[64779] 3270 3206 3313 3415 3446 3463 3584 3690 3745 3753 3741 3743 3772 3820\n[64793] 3857 3883 3899 3904 3906 3906 3909 3909 3906 3893 3865 3826 3780 3732\n[64807] 3690 3657 3640 3633 3631 3625 3606 3574 3529 3481 3440 3412 3407 3421\n[64821] 3454 3497 3545 3596 3649 3707 3775 3849 3929 4006 4074 4123 4145 4147\n[64835] 4136 4119 4108 4100 4098 4097 4092 4084 4074 4068 4067 4073 4085 4101\n[64849] 4119 4140 4163 4192 4231 4275 4326 4372 4405 4414 4389 4336 4262 4147\n[64863] 3986 3833 3822 3866 4016 4143 4203 4223 4273 4329 4396 4460 4513 4548\n[64877] 4563 4559 4541 4513 4480 4445 4415 4388 4369 4357 4357 4366 4389 4417\n[64891] 4443 4465 4477 4485 4481 4458 4399 4338 4299 4303 4357 4432 4495 4538\n[64905] 4560 4564 4559 4551 4548 4550 4565 4584 4605 4620 4629 4628 4620 4608\n[64919] 4596 4585 4578 4575 4579 4586 4594 4602 4609 4613 4612 4607 4598 4588\n[64933] 4575 4562 4552 4544 4539 4537 4536 4536 4532 4525 4510 4493 4475 4459\n[64947] 4449 4444 4451 4461 4478 4495 4514 4528 4536 4539 4535 4531 4526 4523\n[64961] 4517 4511 4507 4491 4450 4387 4304 4238 4234 4271 4334 4404 4462 4502\n[64975] 4515 4514 4516 4517 4516 4515 4515 4515 4513 4511 4508 4506 4505 4505\n[64989] 4505 4506 4507 4509 4509 4509 4508 4507 4504 4501 4498 4497 4498 4501\n[65003] 4502 4504 4503 4500 4497 4492 4490 4487 4486 4484 4484 4484 4483 4481\n[65017] 4479 4476 4471 4464 4458 4454 4455 4457 4462 4466 4471 4475 4479 4483\n[65031] 4487 4492 4496 4499 4500 4501 4500 4498 4497 4496 4496 4495 4494 4492\n[65045] 4491 4490 4488 4486 4486 4486 4484 4481 4479 4477 4476 4476 4477 4479\n[65059] 4480 4481 4480 4479 4477 4475 4475 4477 4480 4485 4490 4494 4497 4497\n[65073] 4495 4491 4486 4481 4478 4477 4479 4484 4490 4497 4502 4506 4508 4509\n[65087] 4507 4505 4503 4502 4504 4506 4508 4508 4504 4500 4498 4497 4499 4500\n[65101]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65115]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65129]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65143]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65157]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65171]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65185]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65199]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65213]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65227]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65241]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65255]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65269]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65283]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65297]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65311]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65325]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65339]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65353]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65367]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65381]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65395]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65409]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65423]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65437]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65451]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65465]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65479]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65493]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65507]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65521]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65535]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65549]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65563]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65577]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65591]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65605]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65619]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65633]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65647]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65661]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65675]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65689]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65703]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65717]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65731]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65745]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65759]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65773]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65787]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65801]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65815]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65829]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65843]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65857]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65871]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65885]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65899]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65913]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65927]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65941]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65955]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65969]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65983]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[65997]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66011]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66025]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66039]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66053]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66067]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66081]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66095]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66109]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66123]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66137]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66165]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66179]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66193]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66207]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66221]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66235]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66249]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66263]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66277]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66291]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66305]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66319]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66333]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[66347]   NA   NA   NA   NA   NA   NA   28   48   61   74   93  116  142  170\n[66361]  195  218  234  248  261  274  286  296  307  318  332  349  372  407\n[66375]  456  517  584  651  712  764  805  837  862  884  907  939  984 1039\n[66389] 1094 1145 1187 1219 1243 1277 1339 1428 1537 1659 1788 1916 2037 2146\n[66403] 2240 2314 2364 2393 2409 2424 2447 2480 2522 2572 2632 2699 2768 2823\n[66417] 2858 2901 2989 3110 3252 3382 3471 3527 3563 3596 3640 3692 3753 3827\n[66431] 3921 4020 4107 4182 4246 4302 4352 4393 4420 4436 4446 4450 4449 4447\n[66445] 4450 4461 4480 4496 4502 4498 4486 4474 4467 4469 4480 4503 4535 4576\n[66459] 4624 4672 4717 4754 4776 4784 4775 4756 4729 4700 4672 4646 4624 4610\n[66473] 4607 4616 4633 4652 4666 4670 4661 4641 4615 4590 4580 4588 4618 4664\n[66487] 4714 4758 4782 4786 4767 4738 4707 4686 4682 4691 4709 4730 4751 4775\n[66501] 4805 4836 4863 4879 4881 4859 4808 4721 4596 4431 4229 4005 3797 3673\n[66515] 3720 3853 4016 4164 4287 4385 4470 4542 4605 4652 4682 4699 4709 4716\n[66529] 4724 4737 4754 4772 4785 4794 4800 4803 4805 4809 4816 4826 4840 4855\n[66543] 4867 4872 4867 4853 4831 4805 4780 4757 4738 4724 4715 4706 4695 4685\n[66557] 4679 4678 4682 4689 4695 4700 4704 4703 4700 4696 4694 4692 4686 4677\n[66571] 4666 4657 4657 4665 4678 4690 4692 4689 4687 4690 4696 4690 4658 4622\n[66585] 4605 4614 4641 4680 4714 4740 4755 4764 4777 4788 4793 4790 4783 4776\n[66599] 4774 4758 4712 4642 4560 4481 4421 4387 4382 4397 4421 4442 4454 4477\n[66613] 4531 4586 4612 4626 4647 4681 4725 4773 4814 4845 4861 4862 4851 4834\n[66627] 4815 4797 4782 4765 4741 4698 4628 4521 4376 4208 4039 3895 3802 3759\n[66641] 3762 3803 3874 3955 4021 4054 4038 3970 3853 3694 3508 3321 3165 3054\n[66655] 3002 3006 3062 3154 3267 3383 3481 3549 3576 3561 3505 3422 3330 3250\n[66669] 3207 3215 3285 3412 3584 3775 3959 4117 4232 4303 4330 4323 4294 4256\n[66683] 4221 4196 4183 4178 4177 4172 4156 4124 4070 3996 3903 3795 3673 3538\n[66697] 3389 3229 3067 2922 2824 2754 2711 2684 2677 2691 2734 2803 2897 3009\n[66711] 3134 3268 3406 3546 3686 3821 3946 4054 4138 4198 4234 4252 4259 4260\n[66725] 4261 4263 4266 4270 4275 4280 4287 4294 4297 4291 4268 4228 4173 4087\n[66739] 3958 3800 3627 3456 3299 3158 3035 2920 2804 2676 2529 2363 2180 1993\n[66753] 1818 1675 1583 1553 1593 1698 1859 2068 2320 2615 2937 3186 3266 3231\n[66767] 3138 3034 2943 2863 2789 2715 2650 2615 2645 2743 2915 3123 3336 3549\n[66781] 3763 3976 4177 4345 4456 4499 4466 4358 4179 3933 3629 3277 2895 2516\n[66795] 2179 1912 1739 1666 1696 1808 1985 2201 2433 2663 2876 3061 3210 3323\n[66809] 3403 3460 3503 3548 3602 3680 3775 3874 3950 3997 4016 4023 4039 4061\n[66823] 4088 4093 4061 3990 3890 3768 3637 3511 3401 3319 3271 3254 3261 3284\n[66837] 3313 3345 3379 3423 3480 3534 3567 3587 3606 3639 3693 3744 3770 3773\n[66851] 3760 3741 3729 3730 3750 3781 3816 3847 3862 3866 3860 3855 3859 3874\n[66865] 3902 3937 3978 4013 4031 4032 4015 3990 3972 3976 4001 3946 3725 3466\n[66879] 3320 3284 3349 3436 3497 3570 3701 3831 3896 3907 3887 3870 3873 3892\n[66893] 3910 3924 3929 3926 3921 3913 3907 3900 3890 3873 3846 3809 3765 3720\n[66907] 3679 3647 3626 3616 3612 3605 3588 3560 3520 3476 3437 3410 3403 3415\n[66921] 3442 3480 3524 3572 3625 3683 3750 3823 3900 3976 4042 4092 4119 4128\n[66935] 4125 4117 4111 4109 4110 4109 4104 4094 4083 4074 4070 4072 4078 4085\n[66949] 4094 4106 4123 4150 4191 4243 4305 4364 4407 4421 4399 4352 4295 4209\n[66963] 4081 3960 3897 3906 3996 4106 4188 4249 4310 4372 4434 4488 4530 4557\n[66977] 4567 4561 4543 4516 4483 4446 4409 4373 4340 4313 4298 4297 4314 4342\n[66991] 4377 4413 4444 4465 4471 4461 4434 4405 4389 4395 4425 4467 4507 4537\n[67005] 4551 4552 4546 4539 4538 4546 4565 4589 4614 4634 4644 4644 4637 4625\n[67019] 4613 4602 4596 4596 4600 4608 4617 4626 4633 4635 4632 4624 4612 4599\n[67033] 4584 4569 4557 4548 4541 4537 4535 4534 4530 4522 4509 4493 4477 4464\n[67047] 4457 4458 4467 4481 4493 4504 4515 4524 4529 4531 4528 4524 4520 4518\n[67061] 4517 4517 4518 4504 4460 4383 4277 4193 4184 4230 4311 4397 4466 4509\n[67075] 4524 4523 4522 4521 4518 4516 4515 4514 4511 4508 4507 4507 4508 4509\n[67089] 4510 4510 4511 4512 4513 4513 4513 4512 4510 4508 4506 4506 4506 4507\n[67103] 4508 4507 4505 4503 4500 4497 4496 4494 4494 4494 4493 4492 4491 4488\n[67117] 4484 4477 4469 4460 4452 4447 4447 4451 4457 4464 4472 4478 4484 4488\n[67131] 4493 4496 4499 4501 4503 4504 4504 4504 4504 4503 4502 4500 4498 4496\n[67145] 4493 4491 4489 4488 4487 4487 4486 4483 4480 4477 4475 4474 4475 4476\n[67159] 4479 4481 4482 4481 4479 4477 4476 4477 4480 4484 4490 4496 4499 4500\n[67173] 4498 4493 4487 4482 4479 4478 4480 4484 4490 4497 4502 4506 4508 4509\n[67187] 4508 4507 4506 4506 4507 4508 4510 4509 4507 4504 4501 4501 4502 4502\n[67201]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67215]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67229]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67243]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67257]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67271]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67285]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67299]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67313]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67327]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67341]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67355]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67369]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67383]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67397]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67411]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67425]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67439]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67453]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67467]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67481]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67495]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67509]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67523]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67537]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67551]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67565]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67579]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67593]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67607]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67621]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67635]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67649]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67663]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67677]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67691]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67705]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67719]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67733]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67747]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67761]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67775]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67789]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67803]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67817]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67831]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67845]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67859]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67873]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67887]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67901]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67915]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67929]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67943]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67957]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67971]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67985]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[67999]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68013]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68027]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68041]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68055]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68069]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68083]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68097]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68111]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68125]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68139]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68153]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68167]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68181]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68195]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68209]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68223]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68237]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68251]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68265]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68279]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68293]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68307]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68321]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68335]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68349]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68363]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68377]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68391]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68405]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68419]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68433]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[68447]   NA   NA   NA   NA   NA    6   31   52   70   88  115  143  169  193\n[68461]  213  229  244  257  270  283  295  306  318  332  350  374  407  452\n[68475]  506  569  634  697  752  798  830  856  877  898  921  952  998 1053\n[68489] 1111 1164 1207 1242 1275 1316 1383 1470 1582 1703 1829 1950 2062 2161\n[68503] 2244 2305 2334 2340 2339 2339 2397 2463 2530 2599 2673 2753 2836 2908\n[68517] 2951 2989 3066 3161 3289 3409 3498 3559 3602 3644 3702 3766 3811 3862\n[68531] 3946 4031 4108 4173 4232 4282 4331 4373 4406 4429 4444 4453 4454 4452\n[68545] 4450 4451 4466 4481 4488 4487 4482 4476 4473 4477 4491 4516 4552 4597\n[68559] 4650 4705 4753 4791 4810 4812 4794 4764 4726 4688 4657 4632 4614 4605\n[68573] 4609 4623 4645 4665 4676 4674 4658 4631 4596 4566 4554 4562 4598 4648\n[68587] 4702 4749 4772 4776 4757 4730 4704 4688 4691 4707 4730 4756 4777 4800\n[68601] 4827 4852 4870 4876 4868 4838 4780 4691 4569 4424 4257 4100 3980 3918\n[68615] 3955 4041 4154 4262 4358 4437 4510 4570 4628 4673 4698 4712 4720 4726\n[68629] 4735 4746 4758 4770 4778 4783 4786 4787 4789 4792 4798 4808 4822 4838\n[68643] 4850 4858 4855 4845 4827 4806 4784 4763 4745 4731 4725 4720 4707 4694\n[68657] 4686 4684 4693 4705 4714 4721 4721 4718 4710 4703 4699 4697 4695 4693\n[68671] 4690 4689 4694 4704 4718 4735 4739 4745 4745 4744 4699 4635 4553 4468\n[68685] 4450 4472 4539 4619 4681 4715 4726 4727 4740 4760 4780 4795 4788 4772\n[68699] 4769 4748 4698 4627 4546 4470 4418 4392 4398 4423 4454 4483 4493 4507\n[68713] 4538 4570 4586 4597 4621 4656 4703 4754 4799 4834 4852 4856 4845 4827\n[68727] 4807 4789 4774 4761 4745 4717 4667 4585 4461 4310 4151 4007 3924 3880\n[68741] 3878 3909 3980 4060 4129 4167 4153 4090 3976 3822 3634 3441 3275 3150\n[68755] 3092 3091 3148 3243 3364 3485 3582 3648 3670 3651 3590 3505 3411 3333\n[68769] 3298 3314 3395 3525 3697 3881 4048 4186 4278 4328 4335 4314 4277 4235\n[68783] 4203 4182 4176 4179 4183 4181 4164 4127 4062 3973 3864 3740 3608 3471\n[68797] 3331 3194 3061 2951 2879 2836 2809 2799 2802 2826 2880 2958 3064 3188\n[68811] 3327 3471 3616 3758 3891 4012 4114 4194 4247 4279 4290 4291 4291 4294\n[68825] 4306 4323 4343 4361 4374 4383 4388 4397 4414 4425 4356 4273 4155 4022\n[68839] 3851 3667 3474 3290 3124 2979 2855 2742 2634 2523 2402 2272 2130 1987\n[68853] 1850 1738 1666 1647 1688 1787 1936 2132 2361 2635 2954 3231 3299 3274\n[68867] 3180 3069 2982 2908 2852 2805 2776 2777 2818 2916 3103 3321 3520 3714\n[68881] 3886 4059 4235 4388 4481 4508 4455 4325 4121 3850 3523 3156 2769 2397\n[68895] 2085 1846 1708 1660 1706 1817 1980 2170 2373 2575 2771 2951 3112 3252\n[68909] 3369 3472 3566 3667 3751 3857 3901 3956 3995 4025 4031 4038 4068 4110\n[68923] 4134 4132 4076 3978 3850 3706 3557 3420 3307 3226 3189 3188 3219 3268\n[68937] 3322 3373 3417 3454 3490 3501 3473 3434 3452 3483 3542 3591 3618 3623\n[68951] 3621 3614 3618 3635 3674 3724 3781 3830 3858 3872 3875 3880 3896 3917\n[68965] 3945 3974 4006 4037 4052 4057 4046 4025 4003 3983 4002 3959 3783 3589\n[68979] 3471 3443 3473 3542 3602 3688 3837 3988 4030 4035 4001 3967 3958 3964\n[68993] 3965 3968 3960 3951 3938 3924 3910 3896 3881 3863 3835 3801 3759 3717\n[69007] 3675 3641 3617 3603 3596 3591 3577 3556 3523 3486 3451 3424 3417 3423\n[69021] 3444 3474 3513 3558 3609 3667 3734 3806 3883 3958 4025 4078 4112 4129\n[69035] 4133 4131 4130 4128 4127 4122 4110 4096 4080 4067 4062 4062 4065 4068\n[69049] 4071 4077 4092 4118 4164 4223 4298 4369 4425 4448 4428 4379 4338 4289\n[69063] 4187 4106 4015 3990 4041 4132 4214 4288 4359 4422 4477 4521 4552 4569\n[69077] 4574 4568 4553 4530 4502 4466 4426 4381 4335 4292 4262 4247 4256 4280\n[69091] 4315 4355 4391 4419 4436 4445 4442 4441 4444 4456 4478 4505 4527 4543\n[69105] 4546 4542 4534 4529 4532 4545 4567 4595 4623 4646 4656 4656 4648 4637\n[69119] 4625 4616 4611 4612 4616 4624 4634 4643 4650 4650 4644 4632 4616 4600\n[69133] 4584 4571 4560 4550 4542 4535 4533 4532 4529 4523 4513 4501 4491 4481\n[69147] 4478 4482 4495 4512 4517 4520 4522 4524 4525 4524 4521 4517 4516 4514\n[69161] 4515 4515 4515 4505 4458 4386 4262 4160 4165 4217 4311 4407 4477 4522\n[69175] 4534 4532 4530 4527 4523 4518 4517 4515 4512 4507 4508 4509 4511 4513\n[69189] 4513 4513 4514 4514 4516 4517 4518 4517 4516 4514 4513 4512 4512 4512\n[69203] 4511 4509 4507 4506 4505 4505 4504 4505 4505 4506 4504 4502 4499 4495\n[69217] 4488 4479 4468 4456 4446 4440 4441 4446 4454 4464 4474 4482 4488 4493\n[69231] 4496 4498 4499 4500 4502 4504 4507 4509 4510 4510 4509 4506 4503 4499\n[69245] 4495 4491 4490 4489 4489 4489 4489 4488 4485 4480 4477 4475 4475 4476\n[69259] 4479 4482 4483 4483 4480 4477 4475 4475 4478 4483 4491 4498 4502 4503\n[69273] 4500 4495 4489 4484 4480 4479 4481 4485 4491 4497 4502 4506 4508 4508\n[69287] 4509 4509 4509 4509 4509 4510 4511 4511 4509 4506 4504 4503 4504 4504\n[69301]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69315]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69329]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69343]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69357]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69371]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69385]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69399]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69413]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69427]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69441]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69455]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69469]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69483]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69497]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69511]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69525]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69539]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69553]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69567]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69581]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69595]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69609]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69623]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69637]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69651]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69665]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69679]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69693]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69707]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69721]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69735]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69749]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69763]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69777]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69791]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69805]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69819]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69833]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69847]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69861]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69875]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69889]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69903]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69917]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69931]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69945]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69959]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69973]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[69987]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70001]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70015]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70029]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70043]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70057]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70071]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70085]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70099]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70113]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70127]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70141]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70155]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70169]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70183]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70197]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70211]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70225]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70239]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70253]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70267]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70281]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70295]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70309]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70323]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70337]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70351]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70365]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70379]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70393]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70407]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70421]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70435]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70449]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70463]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70477]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70491]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70505]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70519]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70533]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[70547]   NA   NA   NA   NA   NA    9   28   58   84  108  138  168  194  214\n[70561]  228  240  252  265  279  294  308  321  335  351  372  402  444  497\n[70575]  557  619  679  735  783  820  846  867  888  912  937  970 1016 1071\n[70589] 1131 1186 1230 1269 1313 1369 1442 1534 1644 1762 1880 1991 2091 2178\n[70603] 2248 2295 2314 2313 2308 2320 2374 2450 2532 2615 2700 2790 2885 2977\n[70617] 3049 3113 3171 3246 3348 3453 3536 3597 3646 3696 3758 3822 3875 3928\n[70631] 3991 4059 4125 4183 4229 4270 4313 4355 4393 4423 4443 4454 4457 4455\n[70645] 4450 4450 4458 4469 4478 4483 4483 4482 4484 4492 4508 4534 4571 4618\n[70659] 4673 4728 4776 4810 4824 4818 4791 4753 4709 4669 4639 4618 4605 4603\n[70673] 4613 4633 4658 4678 4687 4680 4657 4623 4583 4550 4536 4546 4583 4634\n[70687] 4687 4729 4751 4753 4737 4714 4697 4691 4702 4723 4749 4776 4802 4826\n[70701] 4847 4861 4864 4853 4827 4779 4704 4606 4487 4366 4258 4195 4189 4225\n[70715] 4260 4307 4358 4415 4471 4524 4574 4620 4660 4691 4710 4721 4729 4736\n[70729] 4743 4751 4758 4764 4767 4768 4768 4767 4766 4767 4771 4780 4794 4809\n[70743] 4823 4833 4836 4833 4822 4807 4789 4770 4752 4739 4731 4726 4717 4706\n[70757] 4698 4696 4703 4714 4725 4732 4732 4728 4721 4713 4708 4706 4706 4707\n[70771] 4711 4716 4723 4731 4741 4751 4761 4768 4766 4745 4688 4600 4491 4386\n[70785] 4326 4339 4454 4588 4672 4699 4690 4672 4671 4693 4730 4767 4786 4787\n[70799] 4779 4750 4697 4625 4546 4474 4428 4412 4425 4457 4494 4525 4535 4539\n[70813] 4545 4552 4558 4567 4589 4624 4671 4723 4771 4808 4828 4832 4822 4804\n[70827] 4784 4765 4752 4742 4734 4720 4689 4630 4534 4410 4273 4147 4061 4014\n[70841] 4004 4030 4091 4166 4233 4270 4261 4201 4092 3942 3764 3578 3408 3279\n[70855] 3213 3208 3262 3357 3477 3595 3689 3748 3766 3744 3684 3600 3510 3438\n[70869] 3408 3430 3511 3638 3798 3964 4111 4226 4299 4331 4326 4297 4257 4218\n[70883] 4189 4175 4176 4186 4196 4197 4181 4138 4065 3964 3840 3703 3563 3425\n[70897] 3297 3181 3082 3009 2966 2945 2933 2934 2951 2989 3051 3137 3248 3376\n[70911] 3517 3663 3805 3939 4060 4164 4245 4300 4329 4337 4330 4320 4315 4322\n[70925] 4342 4370 4401 4428 4446 4454 4454 4456 4462 4442 4358 4231 4072 3893\n[70939] 3694 3491 3291 3107 2946 2807 2688 2582 2484 2390 2296 2200 2101 2002\n[70953] 1907 1828 1777 1768 1808 1897 2030 2199 2397 2631 2890 3114 3230 3253\n[70967] 3206 3129 3059 3005 2970 2953 2954 2979 3033 3136 3300 3490 3668 3827\n[70981] 3965 4103 4256 4393 4478 4496 4434 4293 4075 3788 3445 3067 2682 2325\n[70995] 2037 1833 1728 1711 1772 1887 2036 2200 2369 2536 2702 2865 3025 3178\n[71009] 3323 3458 3586 3701 3800 3883 3945 3991 4017 4027 4024 4028 4055 4096\n[71023] 4128 4126 4056 3939 3788 3627 3466 3322 3211 3140 3116 3135 3187 3259\n[71037] 3334 3401 3453 3486 3499 3478 3422 3367 3363 3389 3433 3473 3498 3508\n[71051] 3512 3515 3528 3556 3607 3675 3750 3813 3848 3866 3877 3897 3931 3969\n[71065] 3995 4015 4035 4056 4075 4087 4086 4073 4051 4028 4008 3953 3841 3717\n[71079] 3633 3605 3622 3671 3734 3822 3940 4048 4097 4101 4075 4042 4023 4013\n[71093] 4003 3993 3983 3970 3952 3932 3912 3893 3874 3853 3826 3794 3755 3714\n[71107] 3673 3637 3610 3592 3583 3578 3572 3559 3538 3511 3482 3459 3448 3448\n[71121] 3460 3482 3514 3555 3604 3661 3728 3800 3876 3952 4020 4077 4118 4143\n[71135] 4155 4160 4159 4155 4145 4130 4109 4087 4065 4050 4044 4045 4048 4051\n[71149] 4053 4059 4074 4105 4156 4225 4308 4389 4453 4486 4479 4437 4370 4296\n[71163] 4231 4171 4106 4076 4105 4177 4258 4339 4412 4473 4520 4553 4573 4583\n[71177] 4585 4581 4571 4556 4534 4504 4464 4414 4358 4303 4259 4233 4230 4245\n[71191] 4274 4305 4333 4357 4378 4399 4421 4445 4470 4494 4516 4534 4544 4546\n[71205] 4542 4534 4526 4523 4530 4546 4571 4600 4627 4647 4657 4657 4650 4640\n[71219] 4630 4623 4619 4618 4621 4627 4637 4647 4653 4653 4644 4627 4606 4586\n[71233] 4574 4566 4558 4550 4541 4534 4532 4531 4531 4530 4528 4523 4518 4512\n[71247] 4511 4515 4528 4540 4544 4542 4537 4532 4528 4525 4522 4520 4519 4517\n[71261] 4512 4505 4494 4470 4423 4352 4263 4198 4198 4251 4335 4422 4489 4530\n[71275] 4544 4544 4540 4535 4530 4526 4523 4521 4517 4513 4512 4513 4514 4514\n[71289] 4515 4515 4515 4517 4518 4520 4520 4520 4519 4518 4517 4517 4517 4517\n[71303] 4515 4512 4510 4508 4508 4509 4511 4513 4514 4515 4513 4509 4505 4499\n[71317] 4490 4479 4465 4451 4440 4434 4435 4442 4452 4464 4475 4485 4492 4496\n[71331] 4497 4497 4497 4497 4499 4502 4507 4512 4516 4517 4515 4511 4505 4499\n[71345] 4495 4492 4490 4490 4492 4494 4496 4495 4492 4488 4484 4481 4480 4481\n[71359] 4483 4485 4486 4484 4481 4477 4474 4473 4476 4483 4491 4499 4504 4505\n[71373] 4502 4497 4491 4487 4483 4482 4484 4488 4493 4498 4502 4506 4508 4509\n[71387] 4510 4510 4511 4511 4511 4512 4512 4512 4510 4507 4505 4504 4504 4505\n[71401]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71415]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71429]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71443]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71457]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71471]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71485]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71499]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71513]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71527]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71541]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71555]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71569]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71583]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71597]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71611]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71625]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71639]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71653]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71667]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71681]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71695]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71709]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71723]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71737]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71751]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71765]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71779]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71793]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71807]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71821]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71835]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71849]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71863]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71877]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71891]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71905]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71919]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71933]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71947]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71961]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71975]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[71989]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72003]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72017]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72031]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72045]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72059]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72073]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72087]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72101]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72115]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72129]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72143]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72157]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72171]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72185]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72199]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72213]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72227]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72241]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72255]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72269]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72283]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72297]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72311]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72325]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72339]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72353]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72367]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72381]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72395]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72409]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72423]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72437]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72451]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72465]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72479]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72493]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72507]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72521]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72535]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72549]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72563]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72577]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72591]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72605]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72619]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72633]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[72647]   NA   NA   NA   NA   NA   18   36   74  101  127  159  190  213  231\n[72661]  241  249  260  272  289  307  324  341  357  376  402  436  488  545\n[72675]  608  668  722  767  805  836  854  872  897  927  957  994 1043 1097\n[72689] 1161 1218 1259 1299 1354 1425 1509 1605 1718 1832 1941 2040 2128 2202\n[72703] 2261 2300 2315 2315 2315 2327 2378 2449 2530 2618 2704 2798 2898 3009\n[72717] 3102 3205 3252 3320 3415 3516 3587 3644 3693 3744 3811 3880 3940 3996\n[72731] 4043 4094 4147 4199 4229 4257 4295 4338 4380 4418 4442 4456 4459 4456\n[72745] 4451 4449 4454 4463 4475 4485 4490 4494 4502 4513 4530 4555 4590 4634\n[72759] 4687 4741 4785 4815 4820 4807 4773 4730 4685 4645 4622 4609 4600 4602\n[72773] 4618 4643 4669 4690 4694 4684 4654 4615 4573 4540 4529 4539 4578 4628\n[72787] 4676 4712 4728 4727 4712 4694 4687 4692 4713 4741 4770 4797 4826 4849\n[72801] 4861 4859 4839 4801 4741 4663 4555 4447 4326 4238 4189 4214 4317 4467\n[72815] 4504 4549 4556 4577 4596 4621 4647 4673 4692 4708 4718 4726 4734 4742\n[72829] 4747 4751 4754 4756 4755 4752 4748 4744 4739 4736 4738 4745 4758 4774\n[72843] 4791 4805 4816 4820 4818 4809 4795 4778 4759 4743 4734 4729 4723 4718\n[72857] 4709 4705 4710 4720 4729 4736 4737 4735 4728 4721 4716 4715 4714 4716\n[72871] 4723 4733 4739 4746 4750 4755 4768 4773 4767 4735 4679 4591 4476 4359\n[72885] 4265 4240 4421 4608 4687 4688 4641 4587 4564 4582 4634 4703 4756 4791\n[72899] 4795 4767 4712 4636 4554 4482 4443 4435 4454 4491 4530 4564 4567 4561\n[72913] 4551 4541 4535 4538 4556 4588 4636 4688 4736 4774 4793 4797 4786 4769\n[72927] 4748 4730 4718 4713 4713 4711 4698 4664 4598 4505 4395 4282 4202 4147\n[72941] 4129 4145 4199 4267 4330 4367 4358 4302 4196 4054 3887 3713 3546 3414\n[72955] 3347 3338 3389 3480 3594 3707 3791 3845 3858 3836 3779 3703 3619 3552\n[72969] 3530 3553 3631 3747 3891 4036 4160 4254 4309 4327 4315 4282 4245 4209\n[72983] 4188 4179 4189 4204 4221 4225 4209 4165 4087 3977 3843 3695 3551 3413\n[72997] 3297 3200 3130 3086 3070 3074 3074 3089 3120 3170 3240 3328 3438 3562\n[73011] 3697 3834 3964 4085 4190 4277 4339 4378 4389 4382 4365 4345 4340 4345\n[73025] 4370 4403 4438 4466 4480 4485 4476 4462 4450 4402 4284 4118 3924 3717\n[73039] 3497 3286 3089 2917 2772 2650 2544 2450 2365 2287 2220 2157 2100 2044\n[73053] 1986 1937 1904 1902 1940 2018 2132 2273 2420 2590 2778 2965 3116 3211\n[73067] 3225 3195 3163 3135 3126 3134 3156 3197 3251 3341 3474 3633 3775 3905\n[73081] 4004 4104 4246 4376 4454 4469 4406 4264 4042 3750 3401 3020 2639 2293\n[73095] 2032 1857 1786 1799 1880 2003 2141 2283 2418 2547 2679 2814 2965 3120\n[73109] 3281 3437 3584 3705 3804 3867 3954 4003 4017 4005 3981 3965 3978 4009\n[73123] 4044 4060 3977 3863 3705 3541 3374 3226 3123 3063 3059 3096 3169 3257\n[73137] 3347 3425 3480 3509 3513 3486 3430 3359 3354 3354 3378 3399 3416 3427\n[73151] 3437 3446 3461 3492 3554 3636 3733 3812 3846 3858 3870 3899 3955 4019\n[73165] 4042 4054 4067 4079 4104 4121 4127 4119 4092 4058 4018 3965 3888 3813\n[73179] 3764 3747 3764 3807 3859 3928 4011 4082 4125 4132 4116 4088 4069 4050\n[73193] 4031 4011 3999 3984 3962 3937 3912 3888 3867 3845 3818 3788 3752 3713\n[73207] 3672 3635 3605 3584 3574 3571 3572 3571 3562 3546 3525 3505 3492 3486\n[73221] 3490 3503 3527 3562 3608 3665 3731 3804 3880 3956 4027 4088 4134 4166\n[73235] 4185 4193 4192 4182 4161 4133 4100 4068 4040 4022 4018 4022 4029 4036\n[73249] 4040 4047 4066 4100 4158 4233 4325 4414 4483 4528 4533 4500 4402 4289\n[73263] 4247 4208 4158 4132 4160 4227 4302 4384 4452 4510 4549 4575 4588 4595\n[73277] 4597 4596 4593 4586 4574 4551 4514 4463 4401 4338 4287 4251 4244 4248\n[73291] 4268 4281 4287 4290 4302 4329 4371 4423 4473 4515 4541 4555 4556 4551\n[73305] 4542 4531 4524 4522 4532 4549 4574 4600 4621 4639 4644 4646 4638 4630\n[73319] 4624 4620 4617 4614 4612 4612 4619 4630 4633 4634 4622 4607 4584 4562\n[73333] 4557 4554 4549 4545 4538 4534 4535 4537 4542 4545 4551 4555 4554 4552\n[73347] 4551 4553 4565 4574 4576 4569 4560 4548 4541 4535 4534 4532 4530 4523\n[73361] 4508 4488 4462 4426 4379 4322 4267 4236 4246 4298 4369 4446 4503 4540\n[73375] 4553 4553 4549 4543 4537 4533 4531 4529 4525 4521 4518 4517 4516 4515\n[73389] 4515 4515 4515 4516 4517 4518 4519 4520 4519 4519 4520 4521 4521 4521\n[73403] 4518 4515 4512 4510 4510 4511 4515 4519 4522 4522 4520 4515 4508 4500\n[73417] 4490 4478 4461 4445 4434 4428 4430 4438 4450 4463 4476 4487 4494 4497\n[73431] 4497 4495 4493 4492 4494 4499 4506 4514 4519 4522 4520 4515 4506 4498\n[73445] 4494 4492 4491 4491 4495 4500 4502 4503 4501 4497 4493 4490 4489 4489\n[73459] 4490 4491 4490 4487 4483 4478 4474 4472 4476 4483 4493 4501 4507 4508\n[73473] 4505 4499 4494 4490 4487 4486 4488 4492 4496 4500 4504 4507 4509 4510\n[73487] 4511 4512 4513 4514 4514 4513 4514 4514 4511 4508 4505 4504 4505 4506\n[73501]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73515]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73529]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73543]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73557]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73571]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73585]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73599]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73613]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73627]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73641]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73655]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73669]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73683]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73697]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73711]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73725]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73739]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73753]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73767]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73781]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73795]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73809]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73823]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73837]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73851]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73865]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73879]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73893]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73907]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73921]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73935]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73949]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73963]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73977]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[73991]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74005]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74019]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74033]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74047]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74061]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74075]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74089]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74103]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74117]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74131]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74145]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74159]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74173]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74187]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74201]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74215]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74229]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74243]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74257]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74271]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74285]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74299]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74313]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74327]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74341]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74355]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74369]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74383]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74397]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74411]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74425]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74439]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74453]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74467]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74481]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74495]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74509]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74523]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74537]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74551]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74565]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74579]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74593]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74607]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74621]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74635]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74649]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74663]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74677]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74691]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74705]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74719]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74733]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[74747]   NA   NA   NA   NA    4   20   48   86  117  146  176  205  225  239\n[74761]  249  257  267  280  299  321  343  364  385  410  442  485  541  602\n[74775]  662  716  761  796  821  841  860  881  908  943  984 1032 1086 1145\n[74789] 1202 1253 1292 1335 1396 1477 1574 1682 1793 1904 2007 2099 2179 2244\n[74803] 2292 2324 2341 2348 2354 2371 2403 2454 2523 2603 2684 2770 2860 2960\n[74817] 3066 3175 3274 3374 3477 3572 3643 3697 3747 3801 3866 3934 3998 4050\n[74831] 4088 4124 4163 4199 4222 4244 4276 4319 4368 4412 4443 4459 4461 4455\n[74845] 4450 4449 4454 4464 4477 4490 4504 4517 4530 4543 4557 4578 4607 4646\n[74859] 4692 4739 4777 4800 4800 4780 4743 4699 4659 4629 4611 4603 4600 4607\n[74873] 4626 4652 4677 4692 4692 4675 4642 4602 4564 4539 4535 4553 4590 4635\n[74887] 4674 4700 4707 4700 4686 4676 4680 4697 4726 4760 4793 4825 4852 4869\n[74901] 4866 4841 4790 4710 4597 4462 4313 4174 4064 4007 4021 4116 4281 4459\n[74915] 4579 4653 4685 4699 4702 4706 4709 4714 4716 4718 4723 4729 4736 4743\n[74929] 4747 4748 4748 4746 4742 4736 4728 4719 4709 4702 4700 4705 4719 4738\n[74943] 4760 4781 4799 4810 4814 4811 4801 4785 4765 4747 4735 4729 4726 4723\n[74957] 4717 4713 4714 4720 4727 4733 4736 4735 4730 4724 4720 4718 4717 4719\n[74971] 4724 4732 4739 4747 4754 4763 4773 4777 4768 4737 4683 4601 4495 4385\n[74985] 4301 4310 4461 4633 4700 4671 4575 4475 4426 4432 4485 4575 4678 4766\n[74999] 4804 4792 4737 4656 4566 4495 4461 4461 4482 4515 4549 4574 4580 4572\n[75013] 4555 4536 4522 4519 4532 4561 4605 4654 4699 4733 4750 4751 4741 4724\n[75027] 4705 4690 4682 4682 4689 4696 4696 4681 4642 4582 4502 4415 4332 4270\n[75041] 4244 4255 4299 4359 4414 4445 4435 4381 4280 4146 3991 3829 3674 3550\n[75055] 3482 3472 3517 3601 3702 3800 3877 3923 3934 3913 3864 3800 3732 3681\n[75069] 3664 3688 3757 3858 3979 4099 4200 4274 4316 4326 4313 4283 4250 4222\n[75083] 4208 4207 4221 4240 4259 4267 4253 4209 4131 4019 3881 3730 3584 3450\n[75097] 3342 3260 3207 3181 3182 3199 3225 3259 3308 3366 3438 3524 3625 3737\n[75111] 3856 3974 4086 4188 4276 4347 4397 4425 4431 4421 4401 4381 4371 4375\n[75125] 4394 4420 4446 4464 4467 4462 4454 4434 4393 4303 4148 3948 3725 3496\n[75139] 3271 3064 2885 2735 2616 2517 2431 2354 2285 2226 2183 2151 2129 2109\n[75153] 2085 2060 2043 2045 2077 2142 2235 2340 2442 2546 2667 2817 3007 3170\n[75167] 3254 3280 3283 3285 3298 3323 3356 3396 3444 3511 3604 3716 3833 3937\n[75181] 4017 4101 4218 4333 4407 4423 4367 4234 4020 3734 3391 3016 2644 2316\n[75195] 2071 1923 1877 1914 2013 2144 2279 2405 2514 2611 2709 2817 2947 3095\n[75209] 3260 3429 3586 3722 3829 3910 3980 4012 3994 3945 3889 3847 3832 3842\n[75223] 3860 3862 3817 3730 3609 3457 3293 3147 3052 3013 3028 3083 3166 3261\n[75237] 3355 3436 3493 3523 3527 3513 3492 3463 3425 3393 3372 3366 3371 3383\n[75251] 3397 3410 3421 3452 3522 3623 3735 3822 3857 3860 3865 3893 3962 4033\n[75265] 4072 4089 4103 4119 4139 4154 4155 4141 4108 4064 4014 3963 3912 3872\n[75279] 3850 3850 3871 3908 3953 4004 4057 4103 4133 4143 4136 4120 4101 4080\n[75293] 4057 4033 4012 3991 3966 3937 3907 3880 3858 3836 3811 3782 3748 3712\n[75307] 3673 3636 3605 3584 3573 3573 3580 3587 3590 3586 3575 3560 3545 3534\n[75321] 3530 3534 3551 3580 3623 3679 3744 3817 3894 3971 4042 4104 4154 4191\n[75335] 4216 4226 4222 4204 4170 4128 4082 4040 4007 3988 3986 3995 4007 4019\n[75349] 4028 4041 4063 4103 4165 4246 4340 4431 4502 4548 4563 4533 4447 4347\n[75363] 4275 4222 4181 4167 4192 4249 4321 4397 4463 4517 4552 4576 4591 4600\n[75377] 4606 4611 4615 4616 4611 4595 4563 4516 4457 4396 4344 4310 4301 4304\n[75391] 4309 4297 4263 4226 4215 4240 4301 4382 4462 4523 4555 4565 4564 4556\n[75405] 4546 4536 4530 4531 4540 4555 4573 4592 4605 4614 4616 4615 4611 4607\n[75419] 4604 4604 4603 4599 4587 4578 4575 4578 4578 4578 4573 4565 4552 4541\n[75433] 4534 4530 4528 4529 4531 4537 4545 4555 4565 4575 4584 4590 4594 4596\n[75447] 4597 4601 4608 4614 4612 4604 4591 4577 4567 4560 4557 4554 4546 4531\n[75461] 4505 4472 4432 4388 4342 4299 4267 4258 4279 4329 4395 4463 4515 4548\n[75475] 4560 4560 4554 4547 4541 4538 4536 4534 4531 4528 4524 4521 4519 4517\n[75489] 4516 4513 4511 4509 4508 4509 4511 4514 4517 4520 4522 4523 4523 4523\n[75503] 4521 4518 4514 4510 4510 4512 4517 4523 4527 4528 4525 4519 4511 4500\n[75517] 4487 4472 4454 4438 4426 4421 4424 4434 4446 4461 4475 4487 4494 4497\n[75531] 4495 4492 4489 4487 4490 4496 4505 4514 4521 4524 4522 4516 4507 4498\n[75545] 4493 4491 4490 4491 4496 4502 4506 4508 4507 4505 4503 4501 4500 4500\n[75559] 4500 4500 4497 4493 4487 4481 4476 4474 4477 4485 4497 4508 4513 4512\n[75573] 4508 4503 4498 4494 4493 4493 4495 4498 4501 4504 4507 4509 4510 4511\n[75587] 4513 4515 4517 4517 4517 4516 4516 4515 4512 4508 4506 4505 4506 4508\n[75601]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75615]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75629]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75643]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75657]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75671]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75685]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75699]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75713]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75727]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75741]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75755]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75769]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75783]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75797]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75811]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75825]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75839]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75853]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75867]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75881]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75895]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75909]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75923]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75937]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75951]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75965]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75979]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[75993]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76007]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76021]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76035]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76049]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76063]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76077]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76091]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76105]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76119]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76133]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76147]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76161]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76175]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76189]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76203]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76217]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76231]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76245]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76259]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76273]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76287]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76301]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76315]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76329]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76343]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76357]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76371]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76385]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76399]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76413]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76427]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76441]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76455]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76469]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76483]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76497]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76511]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76525]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76539]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76553]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76567]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76581]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76595]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76609]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76623]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76637]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76651]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76665]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76679]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76693]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76707]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76721]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76735]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76749]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76763]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76777]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76791]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76805]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76819]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76833]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[76847]   NA   NA   NA    1    7   39   68  104  133  160  191  217  233  243\n[76861]  251  260  268  283  306  336  363  391  415  446  485  537  597  659\n[76875]  713  759  793  820  835  847  867  892  924  964 1019 1078 1137 1196\n[76889] 1245 1295 1329 1372 1437 1523 1624 1742 1850 1966 2070 2166 2244 2304\n[76903] 2346 2371 2383 2393 2400 2418 2432 2465 2519 2586 2654 2725 2794 2876\n[76917] 2990 3114 3268 3411 3537 3638 3709 3760 3811 3862 3925 3990 4054 4103\n[76931] 4130 4148 4177 4201 4212 4225 4256 4301 4358 4411 4447 4466 4465 4455\n[76945] 4451 4450 4458 4470 4484 4502 4526 4549 4566 4579 4588 4600 4621 4651\n[76959] 4689 4728 4759 4777 4772 4749 4711 4668 4638 4617 4608 4607 4608 4616\n[76973] 4638 4662 4680 4688 4679 4658 4622 4586 4557 4543 4553 4579 4618 4657\n[76987] 4686 4699 4694 4679 4665 4659 4674 4702 4736 4778 4816 4852 4877 4884\n[77001] 4861 4806 4711 4581 4396 4198 3993 3826 3720 3695 3761 3911 4127 4350\n[77015] 4542 4674 4746 4775 4774 4765 4752 4742 4730 4723 4724 4729 4735 4741\n[77029] 4744 4744 4742 4738 4732 4723 4711 4697 4683 4670 4665 4668 4684 4706\n[77043] 4736 4764 4787 4803 4812 4813 4805 4791 4769 4748 4736 4728 4727 4727\n[77057] 4722 4717 4716 4718 4724 4729 4733 4733 4730 4724 4720 4717 4714 4714\n[77071] 4717 4724 4732 4742 4754 4767 4777 4781 4771 4745 4698 4631 4541 4453\n[77085] 4379 4382 4514 4673 4688 4637 4494 4347 4275 4259 4292 4390 4537 4697\n[77099] 4785 4811 4757 4671 4572 4503 4481 4488 4507 4533 4559 4577 4585 4579\n[77113] 4560 4536 4517 4508 4517 4540 4580 4624 4663 4692 4705 4705 4696 4680\n[77127] 4666 4654 4651 4654 4666 4679 4684 4680 4653 4617 4556 4498 4415 4357\n[77141] 4332 4343 4383 4435 4481 4506 4491 4437 4338 4212 4068 3921 3776 3662\n[77155] 3598 3589 3632 3709 3795 3880 3944 3985 3993 3977 3938 3889 3840 3805\n[77169] 3796 3819 3878 3961 4058 4154 4233 4291 4322 4330 4319 4296 4272 4252\n[77183] 4247 4252 4269 4290 4311 4320 4310 4270 4195 4087 3952 3803 3662 3531\n[77197] 3432 3356 3313 3294 3308 3337 3394 3446 3511 3567 3634 3705 3791 3886\n[77211] 3983 4079 4167 4249 4319 4378 4421 4448 4457 4452 4438 4419 4407 4400\n[77225] 4406 4415 4419 4418 4402 4385 4391 4368 4300 4172 3974 3743 3504 3268\n[77239] 3049 2855 2702 2581 2494 2423 2360 2302 2250 2208 2188 2183 2194 2205\n[77253] 2207 2202 2194 2196 2222 2271 2349 2430 2494 2549 2623 2724 2963 3183\n[77267] 3306 3367 3404 3429 3461 3498 3532 3567 3597 3635 3690 3759 3854 3946\n[77281] 4006 4069 4173 4274 4337 4357 4313 4201 4004 3737 3408 3049 2689 2371\n[77295] 2145 2013 1988 2045 2160 2304 2438 2557 2645 2716 2784 2861 2971 3104\n[77309] 3267 3439 3600 3747 3863 3952 4011 4018 3944 3839 3734 3660 3617 3609\n[77323] 3609 3618 3635 3605 3543 3403 3226 3067 2994 2988 3030 3093 3174 3262\n[77337] 3350 3431 3486 3520 3523 3525 3539 3562 3494 3441 3387 3361 3355 3368\n[77351] 3387 3407 3405 3427 3511 3628 3756 3858 3884 3879 3879 3891 3973 4053\n[77365] 4093 4114 4134 4154 4168 4176 4164 4139 4092 4039 3981 3936 3898 3882\n[77379] 3879 3898 3925 3965 4000 4039 4073 4104 4124 4136 4137 4131 4119 4101\n[77393] 4076 4048 4021 3993 3962 3931 3898 3870 3850 3831 3808 3779 3748 3713\n[77407] 3678 3643 3614 3592 3583 3583 3595 3609 3622 3629 3625 3616 3602 3588\n[77421] 3578 3576 3587 3611 3651 3705 3771 3843 3921 3996 4066 4127 4178 4217\n[77435] 4244 4255 4246 4219 4172 4115 4056 4004 3968 3949 3952 3967 3985 4003\n[77449] 4016 4033 4057 4098 4162 4247 4342 4438 4509 4554 4578 4559 4482 4393\n[77463] 4301 4231 4190 4177 4200 4248 4312 4384 4442 4494 4526 4554 4576 4595\n[77477] 4611 4620 4629 4634 4633 4625 4598 4563 4512 4461 4416 4387 4388 4394\n[77491] 4391 4356 4268 4176 4134 4146 4220 4331 4442 4532 4567 4570 4569 4562\n[77505] 4554 4546 4543 4543 4550 4560 4572 4581 4586 4585 4585 4581 4580 4577\n[77519] 4575 4575 4573 4569 4545 4524 4510 4504 4498 4498 4498 4503 4501 4505\n[77533] 4497 4496 4498 4507 4522 4540 4559 4578 4594 4608 4617 4625 4630 4635\n[77547] 4637 4643 4648 4652 4647 4639 4624 4610 4598 4590 4586 4580 4566 4542\n[77561] 4504 4458 4408 4359 4314 4280 4262 4265 4296 4346 4411 4477 4524 4555\n[77575] 4565 4563 4556 4548 4543 4539 4538 4537 4535 4532 4527 4523 4521 4519\n[77589] 4515 4509 4502 4496 4493 4493 4497 4504 4513 4520 4523 4524 4525 4524\n[77603] 4522 4520 4515 4511 4510 4512 4518 4525 4530 4532 4529 4522 4511 4498\n[77617] 4483 4466 4447 4430 4418 4414 4418 4428 4441 4457 4472 4485 4493 4496\n[77631] 4494 4489 4485 4483 4486 4492 4502 4512 4519 4523 4520 4514 4505 4497\n[77645] 4491 4488 4487 4489 4495 4502 4507 4510 4510 4510 4509 4509 4509 4509\n[77659] 4510 4509 4505 4499 4492 4485 4479 4477 4480 4488 4502 4516 4519 4517\n[77673] 4512 4506 4502 4499 4499 4500 4502 4504 4507 4509 4510 4511 4512 4513\n[77687] 4516 4519 4520 4521 4520 4519 4518 4517 4513 4509 4507 4506 4509 4511\n[77701]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77715]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77729]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77743]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77757]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77771]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77785]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77799]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77813]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77827]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77841]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77855]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77869]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77883]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77897]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77911]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77925]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77939]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77953]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77967]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77981]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[77995]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78009]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78023]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78037]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78051]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78065]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78079]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78093]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78107]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78135]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78149]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78163]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78177]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78191]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78205]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78219]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78233]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78247]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78261]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78275]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78289]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78303]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78317]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78331]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78345]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78359]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78373]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78387]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78401]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78415]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78429]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78443]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78457]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78471]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78485]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78499]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78513]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78527]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78541]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78555]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78569]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78583]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78597]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78611]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78625]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78639]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78653]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78667]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78681]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78695]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78709]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78723]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78737]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78751]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78765]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78779]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78793]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78807]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78821]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78835]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78849]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78863]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78877]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78891]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78905]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78919]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78933]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[78947]   NA   NA   NA    8   21   48   84  117  147  176  203  225  238  244\n[78961]  248  252  260  277  307  346  384  416  444  477  527  587  650  707\n[78975]  752  788  816  837  851  864  884  911  948  998 1064 1131 1187 1233\n[78989] 1280 1324 1369 1419 1483 1560 1650 1755 1875 2002 2125 2235 2323 2385\n[79003] 2423 2438 2436 2432 2430 2440 2456 2484 2526 2576 2626 2675 2728 2806\n[79017] 2932 3092 3275 3451 3598 3709 3786 3840 3887 3936 3992 4052 4110 4153\n[79031] 4174 4183 4192 4198 4199 4207 4238 4290 4354 4415 4457 4475 4474 4464\n[79045] 4458 4458 4464 4477 4496 4523 4556 4586 4607 4618 4621 4624 4634 4653\n[79059] 4681 4711 4736 4748 4741 4718 4684 4650 4628 4616 4614 4617 4626 4639\n[79073] 4657 4673 4680 4675 4656 4627 4593 4565 4551 4556 4582 4620 4660 4693\n[79087] 4709 4708 4690 4667 4652 4651 4671 4705 4743 4786 4835 4877 4898 4889\n[79101] 4843 4750 4600 4396 4143 3874 3623 3428 3323 3326 3441 3650 3920 4203\n[79115] 4456 4644 4753 4799 4803 4787 4769 4752 4736 4725 4723 4726 4731 4737\n[79129] 4740 4741 4739 4735 4728 4716 4701 4683 4664 4648 4640 4643 4659 4686\n[79143] 4720 4754 4782 4802 4813 4815 4808 4792 4771 4751 4738 4732 4729 4727\n[79157] 4724 4721 4719 4718 4722 4726 4730 4731 4729 4724 4717 4710 4705 4704\n[79171] 4707 4714 4726 4739 4755 4769 4779 4783 4776 4756 4718 4663 4592 4521\n[79185] 4465 4461 4526 4598 4604 4537 4407 4261 4148 4082 4079 4157 4326 4536\n[79199] 4710 4799 4757 4654 4572 4521 4508 4515 4530 4548 4567 4584 4591 4585\n[79213] 4568 4544 4522 4510 4513 4531 4562 4598 4631 4654 4665 4665 4658 4648\n[79227] 4639 4634 4636 4642 4653 4662 4663 4651 4620 4577 4524 4472 4421 4390\n[79241] 4384 4404 4442 4487 4523 4537 4516 4458 4362 4242 4108 3971 3842 3741\n[79255] 3687 3683 3723 3792 3866 3936 3990 4023 4032 4021 3995 3963 3935 3918\n[79269] 3920 3943 3988 4052 4124 4195 4255 4300 4326 4336 4332 4321 4310 4302\n[79283] 4304 4314 4332 4353 4372 4382 4373 4339 4272 4175 4052 3916 3782 3661\n[79297] 3564 3492 3449 3435 3453 3502 3581 3662 3722 3769 3810 3859 3922 3994\n[79311] 4068 4139 4205 4266 4322 4372 4414 4447 4467 4475 4471 4458 4441 4422\n[79325] 4402 4379 4348 4314 4281 4271 4287 4276 4171 3995 3775 3536 3296 3068\n[79339] 2865 2695 2570 2481 2423 2379 2339 2300 2264 2241 2240 2259 2294 2329\n[79353] 2353 2363 2363 2364 2381 2420 2482 2548 2603 2648 2710 2821 3023 3232\n[79367] 3375 3460 3514 3556 3597 3635 3666 3689 3703 3718 3742 3783 3845 3915\n[79381] 3979 4044 4117 4188 4241 4263 4239 4150 3983 3742 3440 3104 2764 2466\n[79395] 2250 2132 2117 2186 2311 2461 2600 2716 2794 2849 2894 2950 3039 3158\n[79409] 3311 3472 3626 3764 3881 3972 4021 3992 3857 3677 3515 3404 3346 3329\n[79423] 3334 3381 3483 3560 3533 3398 3178 2993 2952 3000 3065 3130 3188 3251\n[79437] 3324 3395 3448 3480 3487 3494 3510 3518 3487 3441 3398 3370 3362 3373\n[79451] 3400 3418 3415 3436 3531 3663 3790 3882 3923 3932 3937 3959 4012 4070\n[79465] 4109 4134 4153 4169 4177 4171 4146 4103 4041 3973 3910 3862 3836 3832\n[79479] 3847 3877 3915 3957 3992 4024 4051 4074 4093 4109 4119 4123 4119 4106\n[79493] 4083 4054 4021 3986 3951 3917 3886 3862 3845 3830 3809 3781 3751 3719\n[79507] 3688 3659 3634 3615 3605 3605 3616 3634 3653 3666 3670 3666 3655 3642\n[79521] 3632 3628 3636 3658 3696 3748 3813 3885 3960 4032 4096 4153 4202 4240\n[79535] 4266 4274 4259 4221 4163 4094 4024 3965 3927 3911 3918 3938 3961 3983\n[79549] 3999 4016 4040 4080 4142 4225 4320 4418 4502 4560 4577 4551 4486 4400\n[79563] 4310 4238 4197 4183 4194 4225 4276 4335 4389 4434 4468 4503 4544 4582\n[79577] 4606 4619 4626 4629 4629 4624 4608 4584 4553 4521 4491 4478 4489 4504\n[79591] 4494 4433 4303 4166 4086 4078 4148 4271 4419 4537 4581 4581 4576 4570\n[79605] 4565 4560 4557 4558 4560 4564 4568 4570 4569 4566 4563 4558 4554 4548\n[79619] 4541 4533 4524 4510 4484 4455 4432 4415 4405 4402 4406 4414 4425 4435\n[79633] 4443 4451 4465 4484 4512 4543 4573 4600 4621 4637 4647 4653 4657 4660\n[79647] 4665 4670 4675 4677 4673 4665 4653 4640 4629 4621 4614 4605 4587 4555\n[79661] 4508 4451 4393 4338 4293 4263 4254 4266 4302 4355 4418 4478 4526 4556\n[79675] 4567 4564 4557 4548 4541 4537 4536 4536 4534 4532 4528 4523 4520 4517\n[79689] 4511 4501 4488 4477 4470 4470 4479 4492 4507 4518 4525 4527 4526 4525\n[79703] 4523 4520 4517 4514 4512 4514 4519 4525 4531 4533 4530 4523 4511 4496\n[79717] 4479 4460 4441 4423 4412 4407 4411 4420 4434 4451 4467 4481 4490 4494\n[79731] 4492 4488 4484 4482 4483 4489 4499 4509 4516 4518 4516 4510 4503 4495\n[79745] 4488 4483 4482 4485 4491 4498 4504 4508 4510 4510 4510 4511 4513 4515\n[79759] 4516 4515 4511 4504 4496 4489 4484 4482 4485 4494 4507 4518 4522 4519\n[79773] 4514 4509 4505 4504 4504 4506 4509 4511 4513 4514 4514 4514 4514 4516\n[79787] 4518 4521 4523 4524 4524 4523 4522 4520 4516 4512 4509 4509 4512 4515\n[79801]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79815]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79829]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79843]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79857]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79871]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79885]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79899]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79913]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79927]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79941]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79955]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79969]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79983]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[79997]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80011]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80025]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80039]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80053]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80067]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80081]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80095]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80109]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80123]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80137]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80165]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80179]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80193]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80207]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80221]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80235]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80249]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80263]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80277]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80291]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80305]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80319]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80333]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80347]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80361]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80375]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80389]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80403]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80417]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80431]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80445]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80459]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80473]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80487]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80501]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80515]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80529]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80543]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80557]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80571]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80585]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80599]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80613]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80627]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80641]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80655]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80669]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80683]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80697]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80711]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80725]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80739]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80753]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80767]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80781]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80795]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80809]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80823]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80837]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80851]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80865]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80879]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80893]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80907]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80921]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80935]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80949]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80963]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80977]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[80991]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81005]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81019]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81033]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81047]   NA   NA    6   18   39   69   99  131  160  188  214  234  242  244\n[81061]  242  242  248  267  309  360  409  451  482  512  573  635  693  744\n[81075]  776  804  831  853  870  886  906  934  975 1032 1110 1189 1240 1276\n[81089] 1324 1365 1422 1479 1541 1606 1675 1759 1888 2030 2177 2309 2414 2487\n[81103] 2525 2531 2501 2475 2456 2465 2487 2519 2554 2587 2619 2650 2691 2761\n[81117] 2911 3097 3305 3504 3664 3786 3867 3924 3968 4010 4058 4111 4162 4204\n[81131] 4215 4215 4208 4199 4186 4188 4224 4282 4358 4429 4471 4490 4486 4474\n[81145] 4468 4468 4471 4484 4510 4545 4587 4625 4647 4657 4654 4647 4647 4654\n[81159] 4674 4696 4715 4723 4714 4693 4664 4638 4627 4625 4631 4640 4655 4669\n[81173] 4682 4686 4679 4659 4628 4592 4562 4543 4548 4573 4618 4668 4712 4740\n[81187] 4744 4728 4696 4664 4646 4647 4675 4714 4755 4797 4858 4903 4915 4888\n[81201] 4815 4684 4472 4201 3875 3542 3245 3022 2916 2937 3100 3365 3697 4045\n[81215] 4352 4594 4730 4792 4801 4783 4767 4751 4735 4723 4718 4720 4725 4732\n[81229] 4736 4738 4739 4736 4729 4716 4698 4676 4653 4633 4623 4626 4645 4675\n[81243] 4714 4752 4782 4803 4814 4816 4808 4792 4771 4751 4741 4737 4733 4729\n[81257] 4728 4726 4722 4720 4722 4725 4728 4729 4726 4721 4710 4700 4696 4696\n[81271] 4702 4711 4727 4742 4758 4771 4780 4783 4780 4768 4739 4698 4644 4589\n[81285] 4535 4505 4515 4522 4508 4443 4336 4201 4069 3953 3902 3922 4083 4324\n[81299] 4579 4778 4749 4633 4590 4552 4547 4548 4548 4555 4570 4589 4597 4594\n[81313] 4579 4556 4535 4520 4519 4530 4554 4581 4606 4624 4632 4633 4632 4630\n[81327] 4632 4635 4644 4651 4659 4657 4644 4613 4555 4491 4424 4379 4365 4378\n[81341] 4400 4435 4475 4513 4539 4543 4512 4451 4355 4241 4114 3990 3872 3785\n[81355] 3744 3749 3792 3857 3920 3978 4019 4045 4053 4048 4035 4021 4014 4015\n[81369] 4026 4049 4082 4125 4173 4223 4265 4301 4323 4339 4344 4348 4351 4357\n[81383] 4367 4381 4399 4417 4434 4443 4436 4409 4353 4272 4166 4047 3927 3815\n[81397] 3721 3647 3596 3575 3587 3641 3737 3845 3888 3923 3936 3963 4004 4057\n[81411] 4107 4158 4203 4247 4291 4336 4382 4425 4460 4483 4491 4485 4461 4425\n[81425] 4373 4312 4235 4162 4092 4074 4112 4144 4001 3797 3579 3350 3129 2920\n[81439] 2743 2597 2504 2441 2412 2391 2371 2347 2325 2315 2334 2371 2428 2483\n[81453] 2524 2546 2549 2545 2557 2583 2641 2706 2771 2828 2888 2978 3148 3330\n[81467] 3450 3536 3596 3644 3687 3726 3748 3761 3758 3755 3757 3775 3815 3869\n[81481] 3933 3997 4041 4084 4126 4153 4148 4091 3954 3750 3481 3178 2861 2579\n[81495] 2376 2265 2258 2332 2463 2621 2763 2881 2950 2993 3019 3055 3132 3240\n[81509] 3395 3545 3677 3778 3866 3940 3994 3960 3741 3471 3257 3120 3064 3063\n[81523] 3077 3145 3344 3530 3519 3410 3140 2911 2936 3042 3109 3169 3197 3226\n[81537] 3283 3342 3390 3420 3417 3417 3432 3445 3450 3433 3423 3405 3402 3405\n[81551] 3444 3474 3462 3467 3584 3726 3840 3925 3973 3998 4011 4032 4062 4098\n[81565] 4123 4143 4160 4170 4169 4152 4111 4050 3970 3887 3816 3764 3743 3746\n[81579] 3771 3810 3855 3901 3937 3969 3994 4018 4042 4065 4085 4099 4104 4097\n[81593] 4077 4048 4010 3971 3933 3899 3872 3852 3842 3833 3812 3786 3757 3727\n[81607] 3702 3680 3662 3647 3636 3631 3640 3657 3678 3698 3707 3710 3704 3696\n[81621] 3690 3689 3699 3721 3759 3808 3871 3939 4009 4074 4130 4179 4222 4257\n[81635] 4279 4284 4261 4215 4146 4067 3988 3925 3887 3875 3888 3913 3939 3963\n[81649] 3978 3993 4010 4045 4101 4184 4278 4380 4473 4546 4558 4532 4473 4389\n[81663] 4306 4237 4203 4189 4182 4191 4228 4277 4321 4360 4390 4428 4489 4552\n[81677] 4579 4595 4597 4600 4602 4603 4598 4589 4582 4573 4560 4557 4582 4607\n[81691] 4592 4531 4364 4186 4092 4054 4117 4228 4403 4555 4590 4584 4582 4579\n[81705] 4573 4571 4566 4566 4563 4564 4562 4560 4557 4553 4548 4542 4535 4525\n[81719] 4510 4492 4476 4453 4424 4390 4363 4338 4326 4318 4323 4331 4349 4367\n[81733] 4388 4409 4434 4464 4503 4545 4584 4619 4642 4659 4667 4672 4674 4675\n[81747] 4680 4685 4691 4693 4690 4684 4675 4665 4655 4647 4639 4628 4607 4572\n[81761] 4517 4452 4386 4326 4280 4252 4247 4264 4304 4357 4418 4476 4524 4556\n[81775] 4566 4563 4556 4546 4536 4529 4527 4529 4530 4530 4528 4523 4520 4514\n[81789] 4503 4489 4469 4452 4442 4443 4458 4480 4500 4517 4526 4530 4530 4527\n[81803] 4525 4521 4519 4517 4515 4515 4518 4524 4529 4532 4529 4522 4510 4495\n[81817] 4477 4458 4437 4419 4407 4402 4404 4413 4426 4443 4461 4477 4487 4492\n[81831] 4492 4488 4485 4482 4483 4487 4496 4505 4511 4513 4510 4504 4499 4493\n[81845] 4484 4477 4477 4480 4486 4493 4499 4504 4505 4506 4506 4508 4511 4515\n[81859] 4517 4517 4513 4507 4499 4492 4488 4487 4491 4499 4511 4521 4524 4521\n[81873] 4517 4512 4509 4508 4509 4512 4515 4517 4518 4518 4518 4517 4517 4518\n[81887] 4520 4523 4526 4528 4529 4528 4526 4523 4519 4515 4512 4512 4516 4520\n[81901]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81915]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81929]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81943]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81957]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81971]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81985]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[81999]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82013]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82027]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82041]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82055]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82069]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82083]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82097]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82111]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82125]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82139]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82153]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82167]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82181]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82195]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82209]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82223]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82237]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82251]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82265]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82279]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82293]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82307]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82321]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82335]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82349]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82363]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82377]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82391]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82405]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82419]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82433]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82447]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82461]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82475]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82489]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82503]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82517]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82531]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82545]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82559]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82573]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82587]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82601]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82615]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82629]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82643]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82657]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82671]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82685]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82699]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82713]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82727]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82741]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82755]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82769]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82783]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82797]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82811]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82825]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82839]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82853]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82867]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82881]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82895]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82909]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82923]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82937]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82951]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82965]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82979]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[82993]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83007]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83021]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83035]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83049]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83063]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83077]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83091]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83105]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83119]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83133]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[83147]   NA    3   13   34   55   82  113  144  173  199  222  239  246  245\n[83161]  236  232  241  269  321  383  443  494  536  578  628  680  721  755\n[83175]  784  812  842  870  894  913  931  958 1002 1067 1147 1230 1298 1351\n[83189] 1392 1437 1497 1563 1622 1672 1723 1796 1915 2067 2230 2385 2513 2605\n[83203] 2653 2648 2593 2525 2502 2510 2546 2586 2615 2632 2646 2665 2705 2790\n[83217] 2943 3141 3357 3561 3729 3856 3942 4002 4046 4083 4121 4161 4204 4238\n[83231] 4250 4243 4220 4193 4175 4179 4218 4285 4369 4444 4487 4504 4502 4491\n[83245] 4481 4476 4478 4493 4523 4565 4613 4656 4682 4690 4684 4671 4663 4662\n[83259] 4673 4688 4701 4705 4696 4677 4653 4636 4635 4645 4661 4679 4696 4708\n[83273] 4711 4701 4677 4642 4599 4560 4534 4529 4551 4596 4657 4718 4766 4789\n[83287] 4783 4754 4712 4672 4651 4655 4685 4731 4781 4835 4891 4929 4930 4884\n[83301] 4781 4606 4345 4013 3633 3249 2911 2665 2553 2593 2791 3106 3492 3889\n[83315] 4245 4521 4691 4771 4788 4774 4759 4745 4731 4718 4711 4711 4717 4725\n[83329] 4732 4738 4741 4740 4734 4721 4701 4676 4649 4627 4616 4620 4640 4673\n[83343] 4713 4752 4782 4802 4813 4814 4805 4789 4768 4750 4743 4741 4738 4736\n[83357] 4735 4733 4729 4724 4724 4726 4726 4724 4718 4709 4699 4693 4693 4699\n[83371] 4710 4725 4741 4756 4768 4777 4782 4784 4783 4775 4757 4728 4688 4641\n[83385] 4590 4545 4514 4485 4448 4388 4301 4187 4057 3928 3827 3792 3874 4075\n[83399] 4385 4651 4733 4707 4660 4621 4598 4582 4563 4554 4566 4586 4599 4601\n[83413] 4591 4573 4554 4539 4534 4539 4554 4572 4589 4602 4609 4614 4622 4633\n[83427] 4649 4665 4682 4690 4691 4675 4640 4575 4481 4376 4288 4246 4271 4331\n[83441] 4388 4438 4479 4509 4523 4514 4476 4411 4320 4211 4090 3973 3872 3804\n[83455] 3779 3795 3842 3903 3960 4007 4037 4054 4058 4057 4057 4062 4073 4090\n[83469] 4111 4133 4154 4176 4202 4230 4258 4285 4308 4330 4348 4367 4386 4406\n[83483] 4424 4443 4460 4475 4487 4493 4487 4466 4423 4360 4276 4180 4079 3978\n[83497] 3884 3802 3734 3692 3685 3724 3809 3902 3953 3978 3988 4002 4028 4062\n[83511] 4097 4131 4163 4197 4235 4279 4330 4382 4431 4469 4489 4486 4456 4400\n[83525] 4315 4208 4080 3952 3846 3803 3845 3870 3778 3608 3417 3220 3030 2855\n[83539] 2706 2591 2519 2479 2466 2460 2452 2440 2430 2434 2465 2520 2591 2661\n[83553] 2714 2743 2751 2748 2753 2775 2825 2897 2982 3060 3116 3185 3290 3408\n[83567] 3504 3578 3636 3683 3723 3754 3768 3770 3758 3744 3736 3744 3771 3814\n[83581] 3867 3914 3944 3969 4005 4035 4045 4010 3908 3744 3519 3255 2974 2718\n[83595] 2528 2423 2414 2487 2618 2773 2916 3028 3094 3125 3138 3166 3235 3356\n[83609] 3519 3669 3759 3796 3810 3844 3902 3863 3601 3262 3013 2865 2822 2835\n[83623] 2887 3001 3199 3373 3408 3311 3120 2967 2971 3054 3126 3172 3191 3207\n[83637] 3238 3277 3314 3332 3323 3318 3351 3396 3438 3463 3482 3488 3487 3493\n[83651] 3520 3547 3558 3591 3681 3797 3900 3979 4030 4061 4077 4090 4104 4120\n[83665] 4134 4146 4157 4160 4151 4121 4066 3988 3894 3799 3720 3666 3643 3646\n[83679] 3673 3714 3760 3805 3843 3877 3907 3938 3971 4006 4037 4061 4074 4072\n[83693] 4054 4024 3986 3946 3911 3882 3861 3847 3840 3831 3814 3790 3762 3735\n[83707] 3716 3703 3693 3683 3669 3658 3660 3673 3693 3716 3733 3744 3747 3747\n[83721] 3750 3759 3776 3803 3840 3887 3943 4003 4063 4117 4162 4202 4237 4265\n[83735] 4284 4282 4253 4198 4122 4037 3955 3890 3857 3850 3866 3893 3919 3940\n[83749] 3951 3959 3971 3997 4048 4124 4225 4328 4414 4478 4512 4508 4456 4377\n[83763] 4300 4241 4212 4196 4175 4166 4187 4223 4257 4285 4309 4347 4415 4482\n[83777] 4517 4531 4538 4546 4556 4568 4577 4586 4596 4606 4614 4628 4655 4672\n[83791] 4653 4578 4438 4284 4177 4131 4161 4255 4398 4526 4585 4596 4594 4586\n[83805] 4577 4569 4562 4557 4555 4554 4552 4550 4548 4544 4539 4533 4523 4510\n[83819] 4491 4469 4446 4418 4387 4355 4326 4301 4284 4275 4276 4285 4303 4326\n[83833] 4353 4383 4415 4453 4498 4546 4591 4629 4654 4670 4677 4680 4681 4682\n[83847] 4686 4692 4697 4700 4700 4695 4689 4681 4674 4666 4658 4645 4624 4587\n[83861] 4530 4461 4390 4327 4280 4253 4249 4268 4307 4358 4415 4471 4517 4548\n[83875] 4563 4563 4554 4541 4526 4515 4512 4515 4522 4528 4530 4528 4521 4510\n[83889] 4492 4469 4443 4422 4412 4417 4438 4467 4494 4515 4528 4535 4536 4534\n[83903] 4529 4525 4522 4520 4517 4517 4518 4521 4525 4528 4526 4520 4510 4496\n[83917] 4479 4459 4439 4421 4408 4401 4401 4407 4420 4436 4454 4471 4483 4490\n[83931] 4493 4492 4488 4485 4484 4487 4494 4501 4506 4507 4505 4501 4495 4488\n[83945] 4480 4474 4474 4477 4484 4490 4495 4498 4499 4498 4499 4500 4504 4508\n[83959] 4510 4511 4509 4504 4499 4494 4491 4492 4497 4505 4515 4523 4526 4524\n[83973] 4520 4515 4513 4512 4514 4516 4519 4521 4522 4522 4521 4520 4520 4520\n[83987] 4523 4526 4529 4532 4533 4532 4530 4526 4522 4518 4516 4516 4519 4521\n[84001]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84015]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84029]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84043]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84057]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84071]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84085]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84099]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84113]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84127]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84141]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84155]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84169]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84183]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84197]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84211]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84225]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84239]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84253]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84267]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84281]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84295]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84309]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84323]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84337]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84351]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84365]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84379]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84393]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84407]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84421]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84435]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84449]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84463]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84477]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84491]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84505]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84519]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84533]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84547]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84561]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84575]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84589]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84603]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84617]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84631]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84645]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84659]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84673]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84687]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84701]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84715]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84729]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84743]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84757]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84771]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84785]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84799]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84813]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84827]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84841]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84855]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84869]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84883]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84897]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84911]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84925]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84939]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84953]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84967]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84981]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[84995]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85009]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85023]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85037]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85051]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85065]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85079]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85093]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85107]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85135]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85149]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85163]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85177]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85191]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85205]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85219]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85233]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[85247]   NA    9   22   44   65   91  126  160  188  210  231  246  253  252\n[85261]  240  231  247  282  345  416  482  542  590  638  679  718  738  754\n[85275]  781  812  849  886  916  942  957  979 1024 1091 1173 1263 1343 1420\n[85289] 1460 1511 1588 1667 1728 1771 1799 1847 1956 2108 2285 2464 2615 2732\n[85303] 2809 2820 2758 2643 2627 2610 2654 2692 2709 2710 2709 2719 2760 2850\n[85317] 3009 3211 3427 3631 3796 3923 4010 4071 4120 4154 4179 4203 4242 4275\n[85331] 4289 4275 4237 4193 4171 4176 4222 4293 4383 4465 4504 4518 4518 4508\n[85345] 4494 4484 4484 4498 4531 4578 4632 4680 4706 4716 4707 4692 4680 4673\n[85359] 4679 4688 4696 4697 4686 4669 4650 4639 4650 4672 4698 4723 4740 4748\n[85373] 4739 4716 4675 4626 4574 4531 4511 4517 4557 4619 4694 4766 4815 4838\n[85387] 4822 4784 4733 4686 4665 4667 4701 4753 4811 4872 4925 4955 4941 4876\n[85401] 4752 4549 4249 3875 3455 3032 2664 2393 2283 2328 2566 2915 3343 3776\n[85415] 4165 4471 4661 4755 4780 4762 4754 4742 4727 4713 4705 4703 4710 4721\n[85429] 4731 4739 4744 4746 4741 4730 4708 4681 4651 4627 4615 4619 4640 4674\n[85443] 4713 4753 4780 4799 4808 4809 4799 4783 4762 4746 4743 4745 4744 4744\n[85457] 4744 4744 4738 4731 4731 4729 4725 4718 4706 4695 4690 4691 4700 4713\n[85471] 4731 4749 4765 4777 4782 4784 4785 4784 4785 4782 4772 4754 4724 4684\n[85485] 4632 4576 4526 4476 4428 4372 4301 4211 4099 3979 3852 3761 3774 3873\n[85499] 4225 4556 4691 4745 4715 4681 4643 4614 4576 4550 4563 4583 4597 4604\n[85513] 4599 4589 4576 4563 4557 4555 4561 4571 4579 4587 4592 4601 4622 4648\n[85527] 4684 4713 4739 4747 4744 4712 4662 4566 4434 4280 4161 4106 4179 4292\n[85541] 4371 4423 4458 4475 4477 4460 4419 4355 4269 4168 4053 3945 3862 3810\n[85555] 3804 3830 3884 3945 3995 4031 4049 4055 4051 4049 4061 4083 4114 4148\n[85569] 4178 4201 4210 4213 4218 4227 4244 4266 4289 4316 4344 4376 4408 4441\n[85583] 4466 4489 4504 4516 4522 4525 4518 4504 4473 4430 4368 4297 4214 4128\n[85597] 4033 3941 3846 3773 3728 3730 3795 3883 3934 3966 3977 3980 3997 4019\n[85611] 4043 4070 4096 4126 4162 4206 4260 4319 4378 4427 4455 4457 4420 4349\n[85625] 4231 4086 3908 3735 3592 3503 3566 3616 3559 3436 3301 3151 3007 2868\n[85639] 2752 2658 2604 2575 2571 2573 2572 2569 2567 2579 2623 2688 2771 2851\n[85653] 2911 2947 2957 2954 2956 2972 3019 3093 3199 3304 3335 3366 3410 3472\n[85667] 3528 3585 3631 3673 3704 3728 3732 3727 3709 3692 3683 3688 3711 3747\n[85681] 3790 3826 3846 3855 3898 3923 3938 3917 3846 3731 3556 3344 3104 2877\n[85695] 2705 2601 2594 2658 2788 2937 3074 3177 3229 3246 3230 3244 3302 3441\n[85709] 3637 3812 3849 3802 3707 3654 3743 3783 3468 3075 2855 2700 2683 2705\n[85723] 2773 2878 3066 3224 3272 3221 3113 3014 3030 3089 3132 3160 3166 3171\n[85737] 3182 3205 3235 3254 3237 3226 3306 3389 3465 3513 3557 3586 3586 3590\n[85751] 3617 3652 3678 3722 3797 3888 3973 4043 4089 4117 4129 4132 4135 4137\n[85765] 4141 4144 4149 4146 4129 4090 4024 3934 3830 3723 3641 3580 3553 3551\n[85779] 3575 3611 3654 3695 3733 3768 3804 3843 3888 3935 3978 4012 4030 4033\n[85793] 4016 3986 3949 3912 3883 3862 3850 3843 3839 3830 3814 3792 3763 3738\n[85807] 3724 3719 3717 3714 3694 3677 3671 3679 3699 3727 3750 3770 3782 3793\n[85821] 3810 3832 3865 3898 3936 3975 4022 4071 4117 4159 4191 4219 4245 4266\n[85835] 4283 4277 4238 4175 4100 4016 3938 3868 3842 3837 3856 3883 3906 3923\n[85849] 3929 3931 3939 3958 4011 4075 4186 4281 4343 4387 4444 4476 4429 4359\n[85863] 4291 4238 4220 4212 4176 4150 4168 4194 4219 4234 4245 4265 4334 4403\n[85877] 4430 4443 4457 4474 4496 4521 4543 4569 4595 4623 4646 4672 4701 4714\n[85891] 4693 4628 4515 4393 4293 4243 4245 4303 4414 4521 4581 4604 4608 4597\n[85905] 4584 4567 4558 4548 4547 4544 4544 4542 4539 4537 4533 4528 4519 4506\n[85919] 4488 4465 4441 4411 4384 4353 4329 4304 4288 4275 4275 4280 4298 4319\n[85933] 4348 4379 4414 4453 4500 4549 4596 4635 4659 4672 4678 4679 4678 4678\n[85947] 4682 4688 4694 4699 4701 4699 4695 4689 4684 4678 4670 4657 4638 4604\n[85961] 4546 4476 4405 4340 4293 4265 4262 4279 4315 4362 4415 4466 4509 4540\n[85975] 4556 4559 4548 4531 4511 4495 4490 4495 4509 4524 4530 4531 4522 4506\n[85989] 4480 4450 4418 4393 4386 4393 4422 4457 4488 4513 4529 4539 4541 4540\n[86003] 4535 4530 4526 4523 4521 4519 4519 4519 4522 4523 4523 4519 4511 4499\n[86017] 4484 4466 4447 4428 4414 4405 4403 4406 4416 4431 4449 4466 4480 4490\n[86031] 4495 4496 4493 4489 4488 4489 4494 4499 4502 4503 4502 4498 4491 4484\n[86045] 4477 4473 4474 4478 4484 4490 4493 4493 4492 4490 4489 4490 4493 4497\n[86059] 4500 4501 4500 4498 4496 4494 4494 4496 4502 4510 4519 4527 4529 4528\n[86073] 4523 4518 4516 4516 4517 4519 4521 4523 4524 4525 4524 4523 4523 4523\n[86087] 4526 4529 4532 4535 4536 4536 4534 4530 4525 4521 4519 4519 4521 4523\n[86101]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86115]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86129]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86143]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86157]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86171]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86185]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86199]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86213]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86227]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86241]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86255]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86269]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86283]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86297]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86311]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86325]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86339]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86353]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86367]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86381]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86395]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86409]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86423]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86437]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86451]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86465]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86479]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86493]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86507]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86521]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86535]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86549]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86563]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86577]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86591]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86605]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86619]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86633]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86647]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86661]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86675]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86689]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86703]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86717]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86731]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86745]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86759]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86773]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86787]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86801]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86815]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86829]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86843]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86857]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86871]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86885]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86899]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86913]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86927]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86941]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86955]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86969]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86983]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[86997]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87011]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87025]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87039]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87053]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87067]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87081]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87095]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87109]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87123]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87137]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87165]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87179]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87193]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87207]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87221]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87235]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87249]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87263]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87277]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87291]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87305]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87319]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87333]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[87347]    4   12   36   51   73  102  139  176  206  229  246  257  264  264\n[87361]  258  257  277  321  386  458  521  577  629  676  710  734  745  756\n[87375]  778  811  852  895  934  963  979  999 1041 1105 1188 1275 1355 1430\n[87389] 1502 1584 1684 1782 1857 1898 1910 1932 2014 2152 2337 2535 2714 2866\n[87403] 2984 3043 3026 2958 2881 2825 2818 2830 2830 2818 2803 2806 2846 2941\n[87417] 3100 3299 3507 3700 3858 3979 4066 4133 4189 4226 4236 4247 4284 4323\n[87431] 4336 4316 4264 4210 4183 4191 4238 4311 4395 4469 4515 4535 4535 4523\n[87445] 4507 4494 4491 4503 4535 4582 4638 4687 4716 4727 4721 4709 4697 4691\n[87459] 4692 4697 4700 4696 4683 4667 4654 4653 4672 4702 4735 4763 4779 4781\n[87473] 4762 4724 4671 4611 4554 4512 4497 4515 4566 4641 4724 4800 4851 4871\n[87487] 4854 4811 4758 4711 4687 4690 4719 4769 4832 4896 4946 4968 4946 4871\n[87501] 4734 4515 4202 3812 3377 2937 2550 2271 2163 2231 2477 2845 3284 3728\n[87515] 4128 4444 4651 4759 4790 4779 4763 4745 4726 4711 4702 4701 4709 4720\n[87529] 4732 4742 4749 4752 4749 4738 4717 4690 4659 4633 4621 4624 4644 4675\n[87543] 4712 4748 4774 4791 4799 4797 4788 4772 4755 4744 4743 4747 4749 4750\n[87557] 4753 4754 4752 4747 4742 4735 4724 4710 4696 4686 4687 4698 4718 4741\n[87571] 4763 4780 4791 4797 4796 4793 4789 4787 4788 4789 4787 4777 4754 4718\n[87585] 4669 4611 4550 4492 4440 4388 4331 4261 4173 4071 3962 3880 3864 3953\n[87599] 4175 4419 4588 4679 4709 4699 4664 4622 4591 4574 4573 4580 4586 4591\n[87613] 4595 4598 4598 4595 4588 4581 4575 4572 4574 4576 4580 4593 4628 4676\n[87627] 4728 4772 4802 4814 4807 4775 4712 4601 4437 4250 4101 4042 4136 4272\n[87641] 4364 4405 4418 4415 4403 4383 4347 4293 4216 4122 4022 3929 3864 3831\n[87655] 3838 3874 3929 3986 4030 4054 4060 4050 4035 4029 4046 4085 4137 4190\n[87669] 4232 4255 4256 4243 4230 4224 4233 4250 4274 4302 4336 4374 4414 4453\n[87683] 4485 4508 4522 4530 4531 4529 4522 4511 4493 4466 4426 4377 4315 4241\n[87697] 4149 4040 3916 3800 3711 3675 3703 3772 3852 3909 3921 3915 3915 3929\n[87711] 3950 3979 4010 4044 4082 4125 4179 4238 4299 4351 4383 4387 4350 4266\n[87725] 4131 3949 3739 3541 3402 3339 3363 3397 3384 3327 3250 3159 3062 2964\n[87739] 2875 2801 2749 2719 2708 2708 2711 2716 2725 2749 2798 2869 2953 3035\n[87753] 3098 3137 3151 3152 3153 3167 3208 3281 3382 3467 3493 3488 3482 3490\n[87767] 3514 3549 3583 3614 3636 3648 3646 3635 3619 3607 3605 3616 3640 3673\n[87781] 3707 3737 3760 3785 3818 3840 3830 3802 3765 3702 3591 3437 3256 3071\n[87795] 2921 2825 2810 2866 2984 3121 3240 3319 3350 3335 3287 3262 3317 3469\n[87809] 3702 3890 3897 3772 3584 3467 3513 3534 3355 3085 2871 2735 2685 2694\n[87823] 2744 2837 2969 3091 3156 3162 3130 3098 3100 3120 3132 3133 3123 3115\n[87837] 3118 3135 3163 3185 3194 3226 3321 3436 3522 3583 3624 3652 3669 3689\n[87851] 3718 3756 3796 3847 3912 3984 4052 4107 4143 4162 4167 4162 4155 4148\n[87865] 4144 4143 4142 4133 4111 4066 3994 3899 3791 3684 3595 3530 3494 3483\n[87879] 3495 3521 3555 3591 3626 3662 3701 3746 3799 3856 3908 3950 3973 3976\n[87893] 3961 3933 3901 3872 3852 3841 3839 3840 3839 3830 3811 3785 3757 3735\n[87907] 3724 3723 3725 3722 3704 3684 3672 3675 3697 3728 3760 3786 3807 3831\n[87921] 3865 3909 3958 4005 4040 4069 4100 4133 4165 4193 4215 4232 4248 4264\n[87935] 4277 4266 4214 4145 4082 4020 3948 3885 3851 3845 3859 3882 3902 3914\n[87949] 3918 3919 3932 3961 4017 4092 4175 4244 4278 4308 4361 4398 4383 4337\n[87963] 4286 4246 4225 4211 4191 4178 4187 4204 4217 4221 4220 4230 4264 4303\n[87977] 4329 4348 4370 4396 4427 4461 4497 4536 4575 4615 4655 4693 4725 4739\n[87991] 4722 4670 4583 4486 4400 4347 4337 4374 4448 4529 4588 4619 4626 4617\n[88005] 4601 4582 4567 4555 4549 4544 4540 4535 4531 4528 4526 4525 4522 4515\n[88019] 4503 4486 4465 4441 4418 4395 4375 4356 4340 4329 4325 4328 4340 4357\n[88033] 4380 4405 4435 4470 4512 4557 4601 4637 4659 4669 4672 4670 4666 4663\n[88047] 4665 4671 4680 4689 4694 4695 4694 4691 4688 4683 4676 4664 4647 4614\n[88061] 4562 4497 4429 4368 4322 4295 4290 4304 4334 4374 4420 4464 4502 4530\n[88075] 4545 4547 4535 4515 4492 4473 4465 4471 4491 4514 4527 4529 4520 4500\n[88089] 4470 4435 4402 4378 4371 4383 4412 4448 4482 4510 4528 4539 4543 4542\n[88103] 4539 4535 4531 4528 4526 4524 4522 4521 4520 4520 4520 4518 4513 4506\n[88117] 4494 4478 4461 4444 4429 4418 4412 4413 4420 4432 4448 4465 4479 4490\n[88131] 4497 4499 4497 4494 4493 4493 4496 4499 4501 4502 4500 4496 4490 4484\n[88145] 4480 4478 4480 4484 4489 4492 4493 4491 4487 4484 4481 4481 4482 4485\n[88159] 4487 4489 4489 4489 4490 4491 4493 4498 4505 4513 4522 4529 4531 4530\n[88173] 4526 4522 4519 4518 4518 4520 4522 4523 4525 4526 4526 4526 4526 4527\n[88187] 4529 4532 4535 4537 4539 4539 4537 4533 4529 4524 4522 4522 4524 4525\n[88201]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88215]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88229]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88243]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88257]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88271]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88285]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88299]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88313]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88327]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88341]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88355]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88369]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88383]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88397]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88411]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88425]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88439]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88453]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88467]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88481]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88495]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88509]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88523]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88537]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88551]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88565]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88579]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88593]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88607]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88621]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88635]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88649]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88663]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88677]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88691]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88705]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88719]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88733]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88747]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88761]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88775]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88789]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88803]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88817]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88831]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88845]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88859]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88873]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88887]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88901]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88915]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88929]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88943]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88957]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88971]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88985]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[88999]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89013]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89027]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89041]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89055]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89069]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89083]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89097]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89111]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89125]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89139]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89153]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89167]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89181]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89195]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89209]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89223]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89237]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89251]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89265]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89279]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89293]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89307]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89321]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89335]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89349]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89363]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89377]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89391]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89405]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89419]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[89433]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   12\n[89447]   18   33   44   56   82  114  154  194  225  249  263  273  283  289\n[89461]  292  298  327  370  437  507  559  605  658  702  730  743  749  756\n[89475]  776  809  853  902  948  984  998 1015 1057 1117 1203 1289 1360 1428\n[89489] 1531 1645 1774 1897 1995 2052 2054 2037 2094 2199 2390 2608 2803 2982\n[89503] 3145 3269 3300 3286 3156 3048 3002 2990 2967 2945 2919 2916 2954 3044\n[89517] 3206 3399 3594 3774 3917 4029 4110 4176 4242 4293 4286 4281 4330 4378\n[89531] 4386 4363 4295 4230 4206 4216 4266 4335 4410 4476 4521 4546 4545 4533\n[89545] 4518 4505 4499 4505 4533 4577 4632 4684 4713 4727 4726 4719 4712 4707\n[89559] 4708 4710 4707 4700 4683 4667 4659 4666 4694 4731 4766 4795 4808 4804\n[89573] 4774 4727 4663 4596 4537 4497 4489 4513 4573 4654 4741 4820 4870 4892\n[89587] 4874 4833 4780 4733 4712 4714 4736 4779 4844 4909 4955 4972 4945 4868\n[89601] 4735 4525 4220 3840 3415 2978 2592 2299 2211 2279 2535 2895 3325 3757\n[89615] 4148 4460 4665 4779 4809 4798 4778 4755 4733 4715 4707 4706 4714 4725\n[89629] 4737 4747 4755 4759 4756 4746 4727 4702 4672 4645 4633 4634 4651 4679\n[89643] 4712 4744 4767 4781 4785 4783 4774 4762 4749 4741 4746 4753 4757 4757\n[89657] 4762 4765 4766 4762 4752 4738 4720 4702 4686 4679 4690 4712 4743 4775\n[89671] 4797 4812 4817 4815 4808 4799 4791 4788 4791 4796 4801 4798 4781 4749\n[89685] 4703 4646 4583 4522 4472 4427 4382 4332 4266 4193 4113 4063 4044 4103\n[89699] 4218 4360 4505 4600 4679 4701 4675 4627 4609 4601 4585 4577 4568 4568\n[89713] 4581 4601 4618 4628 4623 4610 4593 4577 4573 4569 4563 4572 4624 4689\n[89727] 4755 4807 4839 4849 4841 4809 4749 4646 4473 4275 4130 4035 4177 4318\n[89741] 4379 4381 4357 4328 4302 4288 4269 4237 4179 4096 4020 3940 3898 3873\n[89755] 3892 3930 3985 4036 4070 4084 4080 4051 4008 3984 4003 4065 4141 4219\n[89769] 4280 4308 4303 4272 4244 4226 4236 4255 4282 4303 4339 4372 4415 4451\n[89783] 4481 4504 4513 4518 4514 4510 4504 4497 4489 4474 4448 4417 4376 4321\n[89797] 4234 4113 3945 3775 3627 3550 3558 3628 3747 3838 3829 3799 3783 3799\n[89811] 3824 3869 3916 3964 4002 4040 4087 4140 4192 4242 4273 4285 4259 4182\n[89825] 4048 3846 3610 3386 3277 3237 3246 3268 3280 3272 3257 3226 3178 3117\n[89839] 3053 2989 2925 2878 2850 2843 2851 2871 2891 2924 2974 3040 3118 3196\n[89853] 3256 3300 3317 3323 3322 3334 3368 3431 3533 3607 3606 3557 3507 3470\n[89867] 3467 3485 3505 3527 3536 3538 3527 3513 3503 3502 3513 3535 3563 3594\n[89881] 3618 3642 3663 3697 3724 3752 3713 3675 3684 3680 3634 3543 3429 3289\n[89895] 3171 3073 3055 3091 3204 3326 3415 3462 3466 3427 3342 3272 3318 3442\n[89909] 3702 3927 3873 3717 3461 3255 3322 3383 3294 3134 2966 2844 2762 2743\n[89923] 2752 2809 2895 2993 3068 3121 3144 3156 3156 3153 3136 3111 3083 3058\n[89937] 3057 3072 3108 3149 3180 3236 3350 3489 3558 3625 3658 3692 3726 3765\n[89951] 3804 3850 3898 3952 4013 4074 4125 4165 4187 4195 4190 4178 4164 4150\n[89965] 4142 4136 4132 4121 4096 4050 3978 3884 3778 3671 3584 3514 3471 3446\n[89979] 3446 3456 3480 3507 3537 3570 3610 3657 3715 3776 3834 3881 3904 3909\n[89993] 3892 3867 3841 3821 3814 3815 3822 3830 3831 3825 3801 3771 3741 3720\n[90007] 3712 3714 3716 3716 3698 3680 3668 3668 3699 3733 3770 3800 3825 3857\n[90021] 3906 3971 4037 4102 4131 4153 4170 4188 4207 4224 4235 4241 4247 4251\n[90035] 4261 4251 4179 4098 4058 4025 3958 3900 3866 3857 3869 3891 3910 3921\n[90049] 3926 3928 3949 3983 4037 4112 4168 4222 4227 4231 4289 4335 4340 4317\n[90063] 4289 4259 4245 4231 4228 4226 4238 4249 4251 4243 4226 4213 4216 4224\n[90077] 4242 4260 4290 4323 4361 4402 4447 4494 4542 4591 4641 4688 4726 4748\n[90091] 4739 4705 4636 4557 4483 4432 4417 4438 4489 4553 4602 4636 4646 4640\n[90105] 4624 4604 4586 4571 4560 4551 4540 4531 4524 4520 4522 4526 4532 4535\n[90119] 4532 4523 4510 4494 4479 4464 4451 4439 4429 4419 4416 4414 4421 4429\n[90133] 4443 4458 4479 4503 4537 4573 4611 4641 4657 4663 4660 4653 4641 4634\n[90147] 4631 4639 4650 4666 4674 4681 4684 4685 4684 4681 4675 4665 4651 4624\n[90161] 4576 4518 4457 4401 4359 4333 4327 4337 4361 4393 4429 4465 4495 4518\n[90175] 4529 4529 4515 4493 4466 4445 4437 4444 4473 4505 4523 4527 4518 4497\n[90189] 4465 4428 4396 4373 4368 4380 4409 4446 4480 4508 4526 4537 4542 4543\n[90203] 4542 4540 4537 4534 4532 4530 4526 4523 4521 4519 4518 4516 4515 4512\n[90217] 4503 4492 4478 4464 4451 4438 4431 4427 4432 4440 4453 4468 4481 4492\n[90231] 4498 4501 4501 4499 4498 4498 4499 4500 4502 4503 4501 4497 4493 4489\n[90245] 4487 4487 4490 4494 4497 4498 4496 4491 4486 4480 4476 4473 4473 4474\n[90259] 4476 4477 4478 4480 4482 4486 4491 4498 4506 4515 4524 4531 4534 4533\n[90273] 4530 4526 4523 4520 4520 4520 4521 4523 4525 4526 4527 4528 4529 4530\n[90287] 4532 4535 4537 4539 4541 4541 4539 4536 4531 4527 4525 4524 4525 4526\n[90301]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90315]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90329]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90343]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90357]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90371]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90385]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90399]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90413]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90427]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90441]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90455]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90469]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90483]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90497]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90511]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90525]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90539]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90553]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90567]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90581]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90595]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90609]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90623]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90637]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90651]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90665]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90679]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90693]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90707]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90721]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90735]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90749]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90763]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90777]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90791]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90805]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90819]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90833]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90847]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90861]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90875]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90889]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90903]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90917]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90931]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90945]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90959]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90973]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[90987]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91001]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91015]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91029]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91043]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91057]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91071]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91085]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91099]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91113]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91127]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91141]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91155]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91169]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91183]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91197]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91211]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91225]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91239]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91253]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91267]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91281]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91295]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91309]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91323]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91337]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91351]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91365]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91379]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91393]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91407]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91421]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91435]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91449]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91463]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91477]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91491]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91505]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91519]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[91533]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA    3    7   29\n[91547]   42   43   55   74   99  130  168  207  239  264  282  296  310  324\n[91561]  340  362  391  433  488  546  595  639  684  722  744  752  754  759\n[91575]  778  811  858  910  958  994 1017 1040 1082 1145 1229 1312 1378 1454\n[91589] 1568 1705 1850 1992 2117 2200 2214 2203 2206 2277 2447 2665 2873 3071\n[91603] 3256 3402 3466 3451 3348 3235 3164 3128 3099 3072 3046 3040 3083 3176\n[91617] 3323 3499 3677 3838 3968 4067 4142 4205 4265 4310 4329 4346 4384 4418\n[91631] 4418 4384 4322 4265 4242 4257 4305 4368 4431 4484 4523 4543 4543 4534\n[91645] 4524 4516 4509 4511 4529 4565 4616 4665 4699 4717 4723 4724 4722 4721\n[91659] 4721 4720 4713 4700 4680 4665 4664 4680 4712 4752 4788 4813 4822 4810\n[91673] 4774 4718 4649 4580 4523 4488 4485 4514 4575 4655 4740 4816 4867 4889\n[91687] 4877 4841 4795 4754 4733 4733 4752 4791 4848 4907 4949 4963 4939 4872\n[91701] 4755 4570 4304 3963 3574 3170 2806 2543 2448 2516 2742 3075 3466 3863\n[91715] 4221 4506 4695 4797 4829 4819 4797 4772 4750 4733 4724 4723 4728 4737\n[91729] 4747 4757 4764 4766 4763 4753 4737 4714 4689 4666 4654 4653 4666 4689\n[91743] 4716 4742 4760 4769 4770 4766 4760 4754 4749 4748 4756 4765 4770 4771\n[91757] 4775 4777 4775 4768 4753 4733 4709 4689 4677 4680 4701 4734 4771 4804\n[91771] 4826 4837 4836 4827 4814 4801 4792 4789 4795 4804 4814 4817 4806 4778\n[91785] 4734 4679 4618 4561 4516 4480 4446 4408 4362 4311 4262 4230 4224 4257\n[91799] 4318 4404 4502 4593 4669 4706 4694 4661 4634 4612 4590 4567 4546 4540\n[91813] 4561 4597 4632 4655 4656 4640 4615 4590 4572 4555 4535 4540 4589 4664\n[91827] 4730 4784 4809 4817 4803 4776 4720 4632 4493 4357 4258 4243 4312 4394\n[91841] 4403 4357 4284 4216 4183 4178 4192 4195 4164 4112 4059 4012 3977 3962\n[91855] 3977 4011 4055 4094 4118 4124 4111 4063 3975 3912 3936 4021 4129 4236\n[91869] 4320 4363 4353 4312 4268 4246 4264 4297 4322 4341 4363 4389 4416 4441\n[91883] 4459 4472 4479 4480 4477 4473 4470 4468 4465 4456 4436 4414 4395 4362\n[91897] 4290 4152 3938 3696 3488 3376 3395 3508 3649 3738 3710 3642 3614 3632\n[91911] 3677 3745 3825 3894 3934 3958 3989 4025 4061 4097 4128 4152 4156 4115\n[91925] 4002 3807 3548 3321 3224 3207 3213 3227 3249 3278 3314 3337 3332 3306\n[91939] 3262 3198 3112 3028 2968 2950 2969 3012 3056 3096 3140 3189 3245 3307\n[91953] 3363 3409 3433 3444 3446 3457 3488 3554 3649 3712 3683 3596 3499 3425\n[91967] 3397 3400 3414 3426 3426 3414 3394 3378 3377 3392 3421 3456 3489 3511\n[91981] 3519 3523 3532 3553 3576 3590 3578 3578 3621 3669 3682 3660 3612 3539\n[91995] 3444 3360 3324 3349 3438 3538 3591 3601 3575 3515 3430 3366 3379 3472\n[92009] 3638 3758 3728 3585 3398 3267 3273 3309 3282 3190 3062 2937 2836 2775\n[92023] 2753 2773 2827 2906 2991 3072 3133 3173 3185 3175 3147 3107 3064 3029\n[92037] 3019 3033 3073 3126 3182 3255 3348 3446 3524 3588 3643 3696 3750 3805\n[92051] 3859 3915 3972 4031 4089 4140 4179 4204 4214 4211 4197 4178 4159 4142\n[92065] 4131 4124 4119 4108 4083 4038 3971 3884 3787 3691 3608 3540 3489 3454\n[92079] 3436 3430 3438 3454 3477 3506 3545 3592 3648 3706 3761 3805 3828 3830\n[92093] 3812 3788 3769 3762 3769 3782 3794 3803 3808 3803 3778 3746 3717 3697\n[92107] 3690 3690 3691 3688 3677 3666 3666 3681 3714 3753 3785 3813 3837 3872\n[92121] 3928 4001 4081 4151 4193 4216 4227 4234 4242 4249 4253 4250 4243 4233\n[92135] 4223 4194 4128 4059 4017 3984 3940 3898 3870 3864 3878 3903 3926 3943\n[92149] 3954 3968 3990 4017 4046 4084 4132 4174 4193 4211 4252 4292 4313 4315\n[92163] 4307 4296 4290 4288 4293 4302 4313 4317 4309 4287 4255 4222 4198 4186\n[92177] 4189 4205 4233 4269 4310 4354 4402 4452 4503 4556 4610 4661 4704 4732\n[92191] 4736 4714 4666 4604 4542 4495 4476 4485 4520 4569 4613 4647 4661 4661\n[92205] 4648 4630 4610 4592 4576 4560 4544 4530 4520 4517 4521 4532 4547 4561\n[92219] 4568 4570 4565 4558 4552 4547 4543 4540 4537 4534 4530 4529 4528 4530\n[92233] 4532 4536 4544 4557 4577 4601 4627 4647 4657 4656 4644 4625 4605 4589\n[92247] 4583 4588 4603 4621 4639 4654 4663 4670 4673 4673 4669 4661 4649 4625\n[92261] 4586 4536 4484 4437 4400 4378 4371 4378 4395 4417 4443 4467 4488 4502\n[92275] 4507 4502 4485 4461 4434 4414 4409 4424 4459 4497 4521 4528 4521 4500\n[92289] 4469 4435 4404 4383 4378 4389 4415 4449 4482 4509 4526 4536 4542 4545\n[92303] 4547 4547 4545 4543 4540 4536 4531 4526 4521 4518 4515 4514 4515 4514\n[92317] 4509 4502 4494 4485 4475 4466 4458 4452 4452 4456 4464 4474 4485 4494\n[92331] 4500 4503 4503 4502 4501 4501 4501 4502 4504 4505 4505 4503 4501 4499\n[92345] 4499 4501 4503 4506 4507 4505 4500 4494 4487 4480 4474 4470 4468 4467\n[92359] 4467 4467 4469 4471 4475 4481 4488 4496 4506 4516 4526 4534 4538 4538\n[92373] 4535 4530 4526 4523 4521 4521 4522 4523 4525 4527 4529 4530 4532 4533\n[92387] 4535 4537 4539 4541 4542 4541 4540 4536 4533 4529 4526 4525 4525 4524\n[92401]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92415]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92429]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92443]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92457]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92471]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92485]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92499]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92513]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92527]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92541]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92555]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92569]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92583]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92597]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92611]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92625]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92639]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92653]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92667]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92681]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92695]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92709]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92723]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92737]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92751]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92765]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92779]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92793]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92807]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92821]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92835]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92849]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92863]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92877]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92891]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92905]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92919]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92933]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92947]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92961]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92975]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[92989]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93003]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93017]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93031]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93045]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93059]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93073]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93087]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93101]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93115]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93129]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93143]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93157]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93171]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93185]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93199]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93213]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93227]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93241]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93255]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93269]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93283]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93297]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93311]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93325]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93339]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93353]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93367]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93381]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93395]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93409]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93423]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93437]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93451]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93465]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93479]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93493]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93507]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93521]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93535]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93549]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93563]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93577]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93591]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93605]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93619]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[93633]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   18   38   25\n[93647]   36   45   72  100  123  148  186  223  253  277  299  320  338  359\n[93661]  384  420  447  487  533  583  625  664  703  736  752  760  760  764\n[93675]  784  818  871  925  972 1009 1036 1067 1114 1177 1265 1352 1407 1477\n[93689] 1603 1757 1903 2050 2190 2309 2319 2330 2295 2334 2506 2728 2927 3121\n[93703] 3311 3468 3533 3533 3448 3349 3285 3248 3221 3201 3184 3175 3226 3306\n[93717] 3437 3593 3752 3899 4011 4099 4162 4217 4276 4325 4365 4397 4432 4454\n[93731] 4440 4403 4346 4297 4286 4305 4352 4409 4457 4495 4522 4536 4533 4526\n[93745] 4527 4528 4521 4517 4525 4548 4595 4645 4678 4700 4714 4722 4726 4728\n[93759] 4728 4725 4714 4699 4677 4661 4668 4690 4725 4765 4799 4822 4825 4807\n[93773] 4765 4706 4634 4565 4513 4483 4484 4514 4572 4646 4725 4797 4847 4873\n[93787] 4866 4839 4800 4765 4747 4747 4763 4797 4848 4899 4934 4946 4927 4875\n[93801] 4788 4649 4444 4167 3835 3474 3147 2902 2812 2862 3055 3341 3681 4027\n[93815] 4336 4583 4739 4822 4847 4836 4817 4792 4772 4756 4748 4746 4749 4755\n[93829] 4763 4770 4774 4775 4771 4761 4747 4729 4709 4692 4682 4680 4691 4706\n[93843] 4728 4746 4758 4761 4758 4752 4752 4751 4753 4757 4768 4779 4781 4782\n[93857] 4783 4783 4776 4765 4744 4721 4694 4674 4670 4682 4716 4759 4799 4832\n[93871] 4852 4858 4849 4833 4814 4798 4789 4788 4797 4811 4826 4834 4827 4804\n[93885] 4763 4711 4653 4601 4565 4539 4515 4490 4459 4427 4397 4378 4380 4402\n[93899] 4437 4493 4550 4617 4676 4719 4713 4691 4663 4629 4600 4565 4530 4514\n[93913] 4546 4594 4642 4677 4679 4663 4631 4594 4558 4526 4474 4457 4490 4566\n[93927] 4608 4663 4663 4673 4646 4633 4580 4533 4420 4360 4303 4369 4389 4459\n[93941] 4410 4328 4218 4115 4084 4081 4126 4167 4152 4128 4104 4094 4069 4062\n[93955] 4076 4103 4134 4159 4166 4158 4139 4089 3947 3829 3874 3978 4107 4234\n[93969] 4338 4404 4389 4346 4298 4269 4306 4357 4370 4380 4387 4403 4411 4423\n[93983] 4429 4432 4437 4436 4434 4430 4429 4429 4429 4426 4402 4382 4387 4378\n[93997] 4329 4194 3924 3609 3336 3183 3241 3413 3587 3698 3612 3485 3459 3487\n[94011] 3548 3637 3757 3855 3884 3883 3896 3912 3925 3943 3969 4004 4048 4055\n[94025] 3973 3811 3525 3275 3225 3246 3244 3249 3277 3327 3406 3475 3495 3496\n[94039] 3487 3430 3302 3150 3035 3004 3056 3149 3223 3262 3290 3303 3318 3356\n[94053] 3404 3465 3492 3511 3512 3524 3547 3603 3705 3782 3714 3595 3462 3356\n[94067] 3320 3321 3337 3345 3335 3306 3272 3248 3258 3291 3345 3395 3433 3442\n[94081] 3420 3392 3378 3384 3406 3428 3439 3471 3561 3660 3707 3732 3741 3737\n[94095] 3664 3602 3560 3570 3648 3738 3745 3724 3679 3618 3542 3483 3472 3501\n[94109] 3578 3610 3582 3478 3386 3322 3335 3358 3339 3261 3145 3011 2891 2798\n[94123] 2745 2731 2762 2826 2914 3012 3095 3160 3192 3191 3166 3119 3066 3020\n[94137] 3006 3017 3062 3125 3194 3267 3338 3394 3466 3523 3598 3672 3743 3813\n[94151] 3881 3949 4016 4080 4135 4181 4210 4225 4223 4210 4187 4162 4138 4118\n[94165] 4104 4096 4093 4086 4063 4024 3963 3888 3804 3723 3653 3593 3540 3494\n[94179] 3457 3433 3427 3434 3452 3475 3516 3556 3605 3651 3698 3735 3755 3754\n[94193] 3727 3698 3686 3694 3719 3745 3755 3760 3771 3774 3747 3713 3687 3670\n[94207] 3664 3662 3662 3659 3653 3650 3665 3691 3724 3768 3793 3823 3844 3880\n[94221] 3946 4022 4108 4181 4230 4259 4271 4271 4274 4270 4267 4254 4229 4199\n[94235] 4171 4130 4062 3995 3953 3925 3893 3870 3854 3857 3881 3916 3944 3970\n[94249] 3991 4013 4038 4059 4058 4055 4104 4147 4178 4204 4240 4277 4305 4324\n[94263] 4335 4342 4350 4360 4374 4388 4398 4398 4380 4347 4300 4249 4207 4177\n[94277] 4169 4177 4203 4237 4279 4322 4369 4417 4468 4519 4573 4623 4670 4704\n[94291] 4718 4711 4678 4631 4578 4534 4512 4513 4538 4578 4618 4653 4671 4677\n[94305] 4670 4656 4637 4617 4596 4575 4554 4535 4522 4518 4526 4542 4565 4588\n[94319] 4604 4616 4618 4619 4619 4624 4628 4638 4640 4646 4643 4644 4637 4634\n[94333] 4625 4620 4615 4616 4623 4635 4649 4659 4662 4653 4631 4600 4569 4543\n[94347] 4534 4535 4551 4572 4596 4618 4632 4644 4650 4655 4653 4649 4639 4622\n[94361] 4589 4549 4506 4467 4437 4419 4413 4418 4428 4443 4457 4470 4479 4484\n[94375] 4482 4472 4451 4426 4399 4381 4381 4402 4447 4495 4522 4532 4527 4509\n[94389] 4482 4451 4423 4402 4397 4406 4429 4459 4489 4514 4529 4537 4544 4548\n[94403] 4552 4554 4553 4551 4546 4540 4533 4526 4519 4514 4510 4509 4510 4512\n[94417] 4511 4508 4504 4501 4497 4493 4484 4478 4476 4476 4480 4484 4492 4498\n[94431] 4502 4504 4505 4505 4504 4503 4504 4505 4507 4509 4511 4512 4512 4512\n[94445] 4513 4515 4516 4517 4515 4512 4505 4497 4489 4482 4476 4471 4468 4466\n[94459] 4464 4462 4463 4465 4470 4476 4484 4494 4504 4515 4527 4538 4542 4543\n[94473] 4540 4535 4531 4527 4524 4523 4523 4524 4526 4529 4531 4533 4535 4537\n[94487] 4538 4539 4541 4542 4542 4541 4539 4536 4533 4530 4527 4525 4524 4523\n[94501]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94515]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94529]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94543]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94557]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94571]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94585]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94599]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94613]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94627]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94641]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94655]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94669]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94683]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94697]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94711]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94725]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94739]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94753]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94767]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94781]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94795]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94809]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94823]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94837]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94851]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94865]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94879]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94893]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94907]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94921]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94935]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94949]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94963]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94977]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[94991]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95005]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95019]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95033]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95047]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95061]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95075]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95089]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95103]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95117]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95131]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95145]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95159]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95173]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95187]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95201]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95215]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95229]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95243]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95257]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95271]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95285]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95299]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95313]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95327]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95341]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95355]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95369]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95383]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95397]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95411]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95425]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95439]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95453]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95467]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95481]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95495]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95509]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95523]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95537]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95551]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95565]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95579]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95593]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95607]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95621]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95635]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95649]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95663]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95677]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95691]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95705]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95719]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[95733]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   17   46   42   34\n[95747]   44   66   96  127  151  176  208  241  269  292  315  338  359  382\n[95761]  409  442  479  521  565  607  644  678  709  736  752  761  766  776\n[95775]  800  839  893  948  991 1025 1059 1100 1155 1225 1305 1379 1437 1512\n[95789] 1634 1783 1927 2064 2187 2273 2299 2304 2325 2405 2566 2768 2963 3147\n[95803] 3318 3450 3517 3520 3475 3412 3364 3335 3319 3317 3325 3346 3374 3434\n[95817] 3535 3669 3812 3944 4047 4121 4177 4229 4291 4352 4402 4439 4464 4470\n[95831] 4451 4413 4371 4340 4337 4361 4404 4450 4485 4508 4521 4524 4520 4518\n[95845] 4527 4536 4532 4525 4525 4541 4577 4620 4655 4681 4701 4714 4723 4727\n[95859] 4727 4722 4709 4691 4673 4663 4672 4696 4730 4768 4801 4821 4819 4796\n[95873] 4750 4689 4621 4557 4510 4486 4489 4516 4566 4630 4699 4763 4812 4840\n[95887] 4842 4825 4796 4768 4753 4755 4772 4804 4846 4886 4914 4924 4912 4879\n[95901] 4823 4740 4614 4427 4157 3852 3564 3349 3253 3283 3428 3658 3934 4217\n[95915] 4467 4662 4785 4848 4866 4857 4837 4815 4796 4783 4775 4773 4775 4779\n[95929] 4783 4786 4787 4784 4778 4769 4757 4744 4732 4722 4718 4719 4726 4738\n[95943] 4749 4758 4762 4760 4756 4752 4753 4756 4762 4768 4775 4781 4783 4783\n[95957] 4781 4776 4765 4748 4724 4698 4675 4662 4668 4692 4734 4782 4825 4857\n[95971] 4872 4872 4857 4833 4810 4791 4783 4786 4798 4815 4833 4844 4841 4823\n[95985] 4785 4737 4686 4642 4615 4598 4583 4569 4551 4532 4515 4506 4509 4522\n[95999] 4544 4575 4608 4646 4683 4711 4721 4716 4699 4669 4624 4574 4533 4519\n[96013] 4548 4597 4645 4677 4686 4671 4636 4584 4517 4442 4367 4317 4310 4331\n[96027] 4353 4370 4369 4360 4344 4324 4295 4253 4189 4140 4131 4183 4280 4363\n[96041] 4358 4287 4185 4091 4047 4046 4079 4112 4117 4114 4119 4131 4140 4154\n[96055] 4174 4196 4213 4220 4209 4183 4140 4060 3935 3842 3859 3951 4076 4204\n[96069] 4312 4380 4389 4364 4334 4324 4351 4386 4397 4395 4391 4391 4392 4395\n[96083] 4399 4402 4405 4403 4400 4394 4390 4388 4387 4380 4363 4354 4370 4382\n[96097] 4349 4210 3917 3556 3243 3077 3154 3356 3569 3665 3583 3440 3393 3414\n[96111] 3484 3587 3726 3834 3857 3836 3824 3815 3807 3805 3826 3871 3939 3973\n[96125] 3911 3756 3515 3322 3278 3304 3307 3310 3345 3418 3517 3602 3637 3662\n[96139] 3703 3671 3481 3234 3049 2995 3105 3273 3384 3429 3416 3373 3329 3322\n[96153] 3376 3448 3489 3506 3515 3524 3543 3592 3672 3722 3676 3559 3413 3297\n[96167] 3259 3271 3298 3308 3288 3239 3182 3147 3167 3224 3300 3367 3404 3394\n[96181] 3331 3260 3227 3227 3251 3282 3318 3381 3494 3607 3672 3713 3750 3772\n[96195] 3757 3733 3721 3742 3798 3848 3852 3822 3775 3718 3660 3613 3585 3578\n[96209] 3580 3567 3527 3470 3432 3427 3462 3488 3447 3352 3219 3071 2930 2813\n[96223] 2732 2693 2700 2747 2828 2928 3030 3120 3183 3208 3190 3143 3086 3040\n[96237] 3021 3033 3076 3140 3211 3282 3345 3394 3433 3476 3545 3626 3709 3791\n[96251] 3871 3950 4026 4094 4150 4192 4214 4221 4211 4190 4160 4128 4098 4074\n[96265] 4056 4048 4048 4045 4027 3992 3940 3879 3815 3757 3709 3663 3612 3555\n[96279] 3499 3459 3445 3451 3466 3491 3525 3562 3595 3624 3651 3675 3691 3683\n[96293] 3644 3604 3599 3623 3663 3696 3705 3709 3723 3730 3710 3679 3659 3648\n[96307] 3644 3642 3641 3638 3637 3644 3664 3691 3715 3743 3780 3818 3852 3899\n[96321] 3976 4063 4137 4197 4248 4284 4302 4307 4302 4291 4272 4243 4203 4156\n[96335] 4105 4048 3981 3917 3869 3837 3818 3811 3818 3839 3874 3915 3952 3986\n[96349] 4019 4051 4077 4092 4091 4093 4119 4151 4181 4208 4240 4275 4310 4341\n[96363] 4367 4390 4411 4432 4453 4471 4480 4476 4451 4409 4352 4290 4235 4196\n[96377] 4177 4179 4200 4233 4272 4313 4356 4399 4444 4490 4539 4587 4633 4669\n[96391] 4691 4693 4673 4638 4595 4556 4531 4526 4542 4573 4610 4646 4671 4685\n[96405] 4687 4680 4666 4646 4622 4596 4570 4548 4532 4527 4536 4556 4582 4609\n[96419] 4630 4646 4654 4660 4667 4677 4690 4706 4718 4728 4731 4730 4724 4715\n[96433] 4702 4689 4677 4670 4668 4670 4674 4676 4672 4656 4626 4587 4548 4515\n[96447] 4498 4496 4509 4529 4553 4575 4592 4606 4615 4622 4626 4627 4621 4608\n[96461] 4583 4552 4518 4487 4463 4450 4446 4450 4457 4464 4469 4471 4470 4465\n[96475] 4455 4438 4414 4388 4363 4351 4358 4388 4439 4491 4523 4536 4536 4523\n[96489] 4502 4476 4450 4431 4425 4432 4452 4477 4502 4521 4534 4542 4548 4553\n[96503] 4557 4560 4560 4556 4550 4541 4531 4521 4512 4505 4500 4499 4500 4504\n[96517] 4506 4508 4508 4509 4508 4506 4503 4500 4498 4497 4498 4499 4501 4502\n[96531] 4504 4505 4506 4507 4506 4506 4506 4508 4511 4515 4520 4523 4525 4526\n[96545] 4526 4527 4526 4524 4520 4515 4507 4500 4493 4487 4481 4477 4473 4470\n[96559] 4467 4464 4464 4465 4468 4474 4482 4491 4501 4513 4527 4538 4544 4546\n[96573] 4544 4540 4536 4532 4528 4526 4525 4527 4530 4533 4536 4538 4540 4542\n[96587] 4543 4543 4543 4543 4542 4540 4538 4535 4532 4529 4527 4525 4525 4525\n[96601]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96615]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96629]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96643]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96657]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96671]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96685]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96699]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96713]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96727]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96741]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96755]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96769]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96783]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96797]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96811]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96825]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96839]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96853]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96867]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96881]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96895]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96909]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96923]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96937]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96951]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96965]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96979]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[96993]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97007]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97021]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97035]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97049]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97063]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97077]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97091]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97105]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97119]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97133]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97147]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97161]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97175]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97189]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97203]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97217]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97231]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97245]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97259]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97273]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97287]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97301]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97315]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97329]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97343]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97357]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97371]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97385]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97399]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97413]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97427]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97441]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97455]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97469]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97483]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97497]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97511]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97525]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97539]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97553]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97567]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97581]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97595]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97609]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97623]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97637]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97651]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97665]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97679]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97693]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97707]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97721]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97735]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97749]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97763]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97777]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97791]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97805]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97819]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[97833]   NA   NA   NA   NA   NA   NA   NA   NA   NA    7   46   33   37   42\n[97847]   63   92  124  156  177  200  230  262  284  305  328  351  372  396\n[97861]  424  455  503  548  590  626  654  680  705  729  747  762  774  791\n[97875]  822  865  923  980 1015 1046 1085 1135 1200 1273 1346 1415 1467 1537\n[97889] 1663 1807 1938 2055 2155 2214 2239 2243 2327 2448 2619 2814 2995 3160\n[97903] 3311 3419 3480 3486 3472 3436 3412 3395 3384 3396 3416 3470 3471 3517\n[97917] 3601 3722 3857 3986 4082 4149 4201 4243 4314 4383 4431 4464 4478 4477\n[97931] 4455 4424 4396 4378 4386 4413 4454 4494 4512 4520 4520 4515 4507 4506\n[97945] 4529 4550 4547 4535 4530 4536 4565 4601 4634 4663 4686 4704 4714 4719\n[97959] 4719 4714 4701 4684 4669 4663 4674 4698 4732 4767 4799 4816 4811 4784\n[97973] 4737 4677 4614 4556 4518 4498 4502 4524 4564 4615 4672 4726 4772 4803\n[97987] 4813 4806 4785 4764 4757 4762 4783 4811 4845 4875 4894 4901 4894 4875\n[98001] 4845 4811 4763 4682 4469 4229 3981 3793 3699 3707 3807 3981 4190 4409\n[98015] 4593 4740 4826 4870 4880 4871 4852 4832 4816 4805 4800 4799 4801 4804\n[98029] 4805 4804 4800 4794 4787 4778 4768 4759 4753 4751 4752 4757 4762 4770\n[98043] 4772 4774 4770 4765 4761 4758 4760 4765 4771 4777 4779 4778 4777 4775\n[98057] 4770 4762 4747 4727 4702 4677 4660 4655 4671 4703 4752 4805 4848 4879\n[98071] 4890 4884 4861 4831 4803 4782 4776 4781 4796 4816 4835 4849 4849 4836\n[98085] 4802 4760 4718 4682 4666 4657 4650 4643 4634 4625 4617 4613 4616 4622\n[98099] 4635 4650 4663 4678 4694 4707 4726 4735 4731 4712 4654 4596 4556 4539\n[98113] 4569 4611 4650 4675 4684 4669 4629 4562 4462 4347 4241 4147 4097 4059\n[98127] 4046 4022 4010 3983 3974 3953 3952 3929 3905 3863 3892 3923 4113 4251\n[98141] 4291 4254 4178 4097 4055 4042 4055 4072 4075 4079 4107 4145 4185 4223\n[98155] 4253 4275 4281 4271 4238 4189 4126 4042 3929 3848 3858 3932 4033 4148\n[98169] 4249 4325 4354 4360 4358 4363 4389 4414 4413 4397 4385 4372 4370 4369\n[98183] 4376 4381 4386 4384 4379 4369 4364 4356 4357 4350 4338 4327 4354 4371\n[98197] 4355 4247 3940 3571 3265 3066 3210 3422 3680 3787 3687 3488 3462 3464\n[98211] 3525 3598 3747 3860 3851 3800 3779 3756 3735 3712 3732 3761 3841 3890\n[98225] 3817 3698 3492 3343 3341 3396 3380 3379 3429 3514 3631 3732 3753 3767\n[98239] 3874 3905 3626 3288 3053 2950 3133 3381 3491 3542 3485 3402 3304 3245\n[98253] 3320 3412 3453 3465 3478 3481 3483 3503 3570 3622 3600 3511 3364 3235\n[98267] 3223 3262 3309 3328 3295 3225 3143 3084 3118 3191 3280 3360 3393 3376\n[98281] 3268 3149 3113 3109 3140 3180 3226 3290 3417 3532 3563 3582 3625 3680\n[98295] 3712 3744 3781 3831 3890 3930 3935 3905 3866 3817 3768 3727 3688 3659\n[98309] 3625 3593 3548 3516 3511 3535 3595 3642 3552 3430 3270 3110 2954 2817\n[98323] 2717 2658 2643 2671 2740 2835 2948 3059 3151 3212 3202 3165 3114 3072\n[98337] 3056 3067 3108 3167 3232 3296 3351 3400 3407 3427 3491 3571 3657 3747\n[98351] 3835 3923 4005 4079 4135 4175 4193 4195 4181 4156 4119 4080 4042 4012\n[98365] 3987 3978 3982 3989 3974 3945 3894 3847 3808 3782 3765 3738 3690 3628\n[98379] 3554 3495 3482 3493 3501 3523 3552 3589 3604 3615 3625 3630 3644 3635\n[98393] 3575 3515 3520 3552 3601 3647 3649 3646 3673 3692 3675 3646 3640 3636\n[98407] 3638 3636 3635 3631 3631 3639 3664 3692 3705 3719 3774 3828 3873 3923\n[98421] 4021 4117 4172 4210 4258 4296 4314 4321 4308 4290 4254 4213 4157 4097\n[98435] 4032 3965 3893 3827 3776 3742 3734 3743 3772 3812 3860 3909 3952 3992\n[98449] 4032 4072 4100 4122 4129 4140 4154 4177 4195 4216 4245 4279 4315 4355\n[98463] 4391 4428 4460 4491 4517 4539 4548 4543 4513 4466 4402 4334 4272 4226\n[98477] 4202 4200 4218 4248 4284 4322 4359 4395 4433 4471 4513 4555 4599 4637\n[98491] 4663 4673 4663 4638 4602 4565 4539 4527 4537 4562 4597 4634 4665 4688\n[98505] 4700 4702 4694 4678 4654 4625 4596 4569 4550 4543 4552 4572 4598 4626\n[98519] 4648 4665 4675 4684 4694 4708 4728 4750 4769 4784 4791 4792 4786 4775\n[98533] 4760 4743 4726 4713 4705 4701 4698 4694 4686 4668 4633 4588 4544 4505\n[98547] 4484 4476 4486 4502 4522 4539 4555 4566 4577 4585 4594 4599 4598 4591\n[98561] 4573 4549 4521 4497 4480 4471 4469 4474 4479 4483 4481 4475 4465 4451\n[98575] 4434 4412 4385 4357 4335 4326 4340 4374 4433 4493 4525 4541 4546 4540\n[98589] 4525 4504 4480 4462 4456 4462 4479 4500 4518 4533 4543 4549 4554 4558\n[98603] 4562 4565 4564 4560 4551 4540 4527 4514 4501 4491 4484 4482 4483 4489\n[98617] 4494 4500 4504 4508 4510 4510 4511 4512 4511 4513 4512 4512 4509 4507\n[98631] 4506 4506 4507 4508 4508 4509 4509 4511 4517 4523 4529 4534 4536 4537\n[98645] 4536 4535 4531 4527 4520 4514 4507 4501 4496 4492 4488 4485 4482 4478\n[98659] 4474 4471 4469 4469 4471 4475 4481 4489 4499 4510 4524 4537 4544 4548\n[98673] 4548 4545 4542 4538 4534 4531 4531 4532 4535 4539 4542 4545 4548 4549\n[98687] 4549 4548 4547 4545 4543 4540 4537 4534 4531 4528 4526 4525 4526 4527\n[98701]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98715]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98729]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98743]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98757]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98771]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98785]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98799]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98813]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98827]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98841]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98855]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98869]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98883]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98897]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98911]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98925]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98939]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98953]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98967]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98981]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[98995]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99009]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99023]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99037]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99051]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99065]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99079]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99093]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99107]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99135]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99149]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99163]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99177]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99191]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99205]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99219]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99233]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99247]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99261]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99275]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99289]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99303]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99317]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99331]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99345]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99359]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99373]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99387]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99401]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99415]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99429]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99443]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99457]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99471]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99485]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99499]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99513]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99527]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99541]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99555]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99569]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99583]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99597]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99611]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99625]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99639]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99653]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99667]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99681]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99695]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99709]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99723]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99737]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99751]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99765]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99779]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99793]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99807]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99821]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99835]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99849]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99863]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99877]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99891]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99905]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99919]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[99933]   NA   NA   NA   NA   NA   NA   NA   NA   24   29   40   41   46   60\n[99947]   85  117  146  173  198  223  248  274  298  320  338  357  378  406\n[99961]  442  486  536  581  615  638  656  672  693  716  740  763  787  814\n[99975]  851  898  954 1005 1040 1072 1118 1177 1246 1317 1381 1441 1502 1583\n[99989] 1699 1830 1953 2058 2142 2195 2223 2259 2348 2486 2662\n [ reached getOption(\"max.print\") -- omitted 4940001 entries ]"
  },
  {
    "objectID": "ch6.html#spatvector-1",
    "href": "ch6.html#spatvector-1",
    "title": "\n9  Raster processing\n",
    "section": "\n9.8 Spatvector",
    "text": "9.8 Spatvector\n\nCode# africa = terra::vect(\"data/africa.gpkg\")\n\nafrica = spData::world |&gt; \n  filter(continent == \"Africa\") |&gt; \n  select(country = name_long, pop) |&gt;\n  terra::vect()\n\n\n\nCodeggplot(data = africa) +\n  tidyterra::geom_spatvector(aes(fill = pop), color = \"ivory\")+\n  tidyterra::geom_spatvector_text(aes(label  = country), color = \"ivory\", size = 2.5) +\n  scale_fill_binned(labels=scales::number_format(big.mark = \",\"), type = \"viridis\")+\n  coord_sf(crs = 3857)+\n  theme_bw()+\n  theme(axis.title = element_blank())"
  },
  {
    "objectID": "ch7.html#aims",
    "href": "ch7.html#aims",
    "title": "10  Vector layers",
    "section": "10.1 Aims",
    "text": "10.1 Aims\nOur aims in this chapter are:\n\nBecome familiar with data structures for vector layers: points, lines and polygons\nExamine spatial and non-spatial properties of vector layers\nCreate subsets of vector layers based on their attributes\nLearn to transform a layer from one Coordinate Reference System (CRS) to another\n\nWe will use the following R packages:\n\nsf\nmapview\nstars"
  },
  {
    "objectID": "ch7.html#vector-layers",
    "href": "ch7.html#vector-layers",
    "title": "10  Vector layers",
    "section": "10.2 Vector layers",
    "text": "10.2 Vector layers\n\n10.2.1 What is a vector layer?\nVector layers are essentially sets of geometries associated with non-spatial attributes (Figure 7.1). The geometries are sequences of one or more point coordinates, possibly connected to form lines or polygons. The non-spatial attributes come in the form of a table.\nFigure 7.1: Geometry (left) and non-spatial attributes (right) of vector layers (https://www.neonscience.org/dc-shapefile-attributes-r)\n\n\n10.2.2 Vector file formats\nCommonly used vector layer file formats (Table 7.1) include binary formats (such as the Shapefile) and plain text formats (such as GeoJSON). Vector layers are also frequently kept in a spatial database, such as PostgreSQL/PostGIS.\n\n\n\n\n\n\n\n\n\n\nTable 7.1: Common vector layer file formats\n\n\nType\nFormat\nFile extension\n\n\nBinary\nESRI Shapefile\n.shp, .shx, .dbf, .prj, …\n\n\n\nGeoPackage (GPKG)\n.gpkg\n\n\nPlain Text\nGeoJSON\n.json or .geojson\n\n\n\nGPS Exchange Format (GPX)\n.gpx\n\n\n\nKeyhole Markup Language (KML)\n.kml\n\n\nSpatial Databases\nPostGIS / PostgreSQL\n\n\n\n\n\n\n10.2.3 The sp package\nThe first R package to establish a uniform vector layer class system was sp, released in 2005. Together with rgdal (2003) and rgeos (2011), the sp package dominated the landscape of spatial analysis in R for many years.\nThe sp package defines 6 main classes for vector layers (Table 7.2):\n\nOne for each geometry type (points, lines, polygons)\nOne for geometry only and one for geometry with attributes\n\n\n\n\n\n\n\n\n\n\n\nTable 7.2: Spatial data structures in package sp\n\n\nClass\nGeometry type\nAttributes\n\n\nSpatialPoints\nPoints\n-\n\n\nSpatialPointsDataFrame\nPoints\ndata.frame\n\n\nSpatialLines\nLines\n-\n\n\nSpatialLinesDataFrame\nLines\ndata.frame\n\n\nSpatialPolygons\nPolygons\n-\n\n\nSpatialPolygonsDataFrame\nPolygons\ndata.frame\n\n\n\nWe are not going to use sp in this book, but the newer sf package (Section 7.1.4). However, if you are going to work with spatial data in R it is very likely you will encounter sp in forums, books, or other packages, so it is important to be aware of it.\n\n\n10.2.4 The sf package\nThe sf package (Figure 7.2), released in 2016, is a newer package for working with vector layers in R, which we are going to use in this book. In recent years, sf has become the standard package for working with vector data in R, practically replacing sp, rgdal, and rgeos.\nFigure 7.2: Pebesma, 2018, The R Journal (https://journal.r-project.org/archive/2018-1/)\nOne of the important innovations in sf is a complete implementation of the Simple Features standard. Since 2003, Simple Features been widely implemented in spatial databases (such as PostGIS), commercial GIS (e.g., ESRI ArcGIS) and forms the vector data basis for libraries such as GDAL. The Simple Features standard defines several types of geometries, of which seven are most commonly used in the world of GIS and spatial data analysis (Figure 7.6). When working with spatial databases, Simple Features are commonly specified as Well Known Text (WKT). A subset of simple features forms the GeoJSON standard.\nThe sf package depends on several external software components (installed along with the R package27), most importantly GDAL, GEOS and PROJ (Figure 7.3). These well-tested and popular open-source components are common to numerous open-source and commercial software for spatial analysis, such as QGIS and PostGIS.\nFigure 7.3: sf package dependencies (https://github.com/edzer/rstudio_conf)\nPackage sf defines a hierarchical class system with three classes (Table 7.3):\n\nClass sfg—a single geometry\nClass sfc—a geometry column, which is a set of sfg geometries + CRS information\nClass sf—a layer, which is an sfc geometry column inside a data.frame with non-spatial attributes\n\n\n\n\n\n\n\n\n\n\n\nTable 7.3: Spatial data structures in package sf\n\n\nClass\nHierarchy\nInformation\n\n\nsfg\nGeometry\ntype, coordinates\n\n\nsfc\nGeometry column\nset of sfg + CRS\n\n\nsf\nLayer\nsfc + attributes\n\n\n\nThe sf class represents a vector layer by extending the data.frame class, supplementing it with a geometry column. This is similar to the way that spatial databases are structured. For example, the sample dataset shown in Figure 7.4 represents a polygonal layer with three features and six non-spatial attributes. The attributes refer to demographic and epidemiological attributes of US counties, such as the number of births in 1974 (BIR74), the number of sudden infant death cases in 1974 (SID74), and so on. The seventh column is the geometry column, containing the polygon geometries.\nFigure 7.4: Structure of an sf object (https://cran.r-project.org/web/packages/sf/vignettes/sf1.html)\nFigure 7.5 shows what the layer in Figure 7.4 would look like when mapped. We can see the outline of the three polygons, as well as the values of all six non-spatial attributes (in separate panels).\nFigure 7.5: Visualization of the sf object shown in Figure 7.4"
  },
  {
    "objectID": "ch7.html#vector-layers-from-scratch",
    "href": "ch7.html#vector-layers-from-scratch",
    "title": "10  Vector layers",
    "section": "10.3 Vector layers from scratch",
    "text": "10.3 Vector layers from scratch\n\n10.3.1 Overview\nAs mentioned above (Table 7.3), the sf package defines a hierarchical system of data structures, composed of three classes, from simple to complex: sfg, sfc and sf. In this section, we are going to create an object of each of those thress classes, to learn more about them.\n\n\n10.3.2 Geometry (sfg)\nObjects of class sfg, i.e., a single geometry, can be created using the appropriate function for each geometry type:\n\nst_point\nst_multipoint\nst_linestring\nst_multilinestring\nst_polygon\nst_multipolygon\nst_geometrycollection\n\nfrom coordinates passed as:\n\nnumeric vectors—POINT\nmatrix objects—MULTIPOINT or LINESTRING\nlist objects—All other geometries\n\nThe seven most commonly used Simple Feature geometry types are displayed in Figure 7.6.\nFigure 7.6: Simple feature geometry (sfg) types in package sf\nOf those seven types, the GEOMETRYCOLLECTION is more rarely used and more difficult to work with. For example, the Shapefile format does not support geometries of type GEOMETRYCOLLECTION. You may wonder why does it even exist. One of the reasons is that some spatial operations may produce a mixture of geometry types. For example, the intersection (Section 8.3.4.6) between two polygons may be composed of points, lines, and polygons (Figure 7.7).\nFigure 7.7: Intersection between two polygons may yield a GEOMETRYCOLLECTION\nLet's create some sfg geometries to see the principles in action. For example, we can create a point geometry object named pnt1, representing a POINT geometry, using the st_point function as follows:\nlibrary(sf) pnt1 = st_point(c(34.798443, 31.243288))\nPrinting an sfg object in the console gives its WKT representation:\npnt1 ## POINT (34.79844 31.24329)\nNote that the class definition of an sfg (geometry) object:\nclass(pnt1) ## [1] \"XY\"    \"POINT\" \"sfg\"\nis actually composed of three parts:\n\n\"XY\"—The dimensions type (one of: \"XY\", \"XYZ\", \"XYM\" or \"XYZM\"). In this book, as in most cases of spatial analysis in general, we will be working only with two-dimensional \"XY\" geometries.\n\"POINT\"—The geometry type (one of the geometry types: \"POINT\", \"MULTIPOINT\", etc.)\n\"sfg\"—The general class (sfg = Simple Feature Geometry)\n\nHere is another example of creating an sfg object. This time, we are creating a POLYGON geometry named a, using function st_polygon. (Don't worry if the expression is unclear: we learn about using list in Chapter 11).\na = st_polygon(list(cbind(c(0,0,7.5,7.5,0),c(0,-1,-1,0,0))))\nAgain, printing the object shows its WKT representation:\na ## POLYGON ((0 0, 0 -1, 7.5 -1, 7.5 0, 0 0))\nwhile class reports the dimensionality, geometry type, and general class, in that order:\nclass(a) ## [1] \"XY\"      \"POLYGON\" \"sfg\"\nThe polygon is displayed in Figure 7.8:\nplot(a, border = \"blue\", col = \"#0000FF33\", lwd = 2)\nFigure 7.8: An sfg object of type POLYGON\nLet's create another POLYGON, named b:\nb = st_polygon(list(cbind(c(0,1,2,3,4,5,6,7,7,0),c(1,0,0.5,0,0,0.5,-0.5,-0.5,1,1))))\nb ## POLYGON ((0 1, 1 0, 2 0.5, 3 0, 4 0, 5 0.5, 6 -0.5, 7 -0.5, 7 1, 0 1))\nclass(b) ## [1] \"XY\"      \"POLYGON\" \"sfg\"\nThe second polygon is shown in Figure 7.9.\nplot(b, border = \"red\", col = \"#FF000033\", lwd = 2)\nFigure 7.9: Another sfg object of type POLYGON\nThe c function, when given sfg geometries, combines those geometries into one. For example, combining two POLYGON geometries results in a single MULTIPOLYGON geometry:\nab = c(a, b)\nab ## MULTIPOLYGON (((0 0, 0 -1, 7.5 -1, 7.5 0, 0 0)), ((0 1, 1 0, 2 0.5, 3 0, 4 0, 5 0.5, 6 -0.5, 7 -0.5, 7 1, 0 1)))\nclass(ab) ## [1] \"XY\"           \"MULTIPOLYGON\" \"sfg\"\n\nWhat type of geometry do you think c(a, b, pnt1) is?\n\nKeep in mind that c always returns a single geometry, composed of all the shapes in its input. This is different from collecting the geometries into a geometry column, where the geometries are kept separate, which is done using function st_sfc as shown below (Section 7.2.3).\nThe multipolygon we created is shown in Figure 7.10:\nplot(ab, border = \"darkgreen\", col = \"#00FF0033\", lwd = 2)\nFigure 7.10: An sfg object of type MULTIPOLYGON\nA new geometry can be calculated applying various functions on an existing one(s). For example, the following example calculates the intersection of a and b, which is a new geometry hereby named i. We are going to learn about st_intersection, and other geometry-generating functions, in Chapter 8.\ni = st_intersection(a, b)\nThe result happens to be a GEOMETRYCOLLECTION, as demonstrated in Figure 7.7:\ni ## GEOMETRYCOLLECTION (POINT (1 0), LINESTRING (4 0, 3 0), POLYGON ((5.5 0, 7 0, 7 -0.5, 6 -0.5, 5.5 0)))\nclass(i) ## [1] \"XY\"                 \"GEOMETRYCOLLECTION\" \"sfg\"\nFigure 7.11 displays the GEOMETRYCOLLECTION named i:\nplot(i, border = \"black\", col = \"darkgrey\", lwd = 2)\nFigure 7.11: An sfg object of type GEOMETRYCOLLECTION\n\n\n10.3.3 Geometry column (sfc)\nLet's create two more point geometries (Section 7.2.2) named pnt2 and pnt3, representing two more points:\npnt2 = st_point(c(34.812831, 31.260284)) pnt3 = st_point(c(35.011635, 31.068616))\nGeometry objects (sfg) can be collected into a geometry column (sfc) object. This is done with function st_sfc.\nIn addition to the geometries, a geometry column object also contains a Coordinate Reference System (CRS) (more information on CRS is given below, in Section 7.9) definition, specified with the crs parameter of function st_sfc. Four types of CRS definitions are accepted:\n\nAn EPSG code (e.g., 4326)\nA PROJ4 string (e.g., \"+proj=longlat +datum=WGS84 +no_defs\")\nA WKT string\nA crs object of another layer, as returned by st_crs\n\nLet's combine the three POINT geometries—pnt1, pnt2 and pnt3—into a geometry column (sfc) object named geom. We will specify that the coordinates are lon/lat (WGS84), using the simplest of the three methods—an EPSG code (4326). More information on types of CRS, as well as where we can find the EPSG code of a particular CRS, is given in Section 7.9.2.\ngeom = st_sfc(pnt1, pnt2, pnt3, crs = 4326)\nHere is a summary of the resulting geometry column:\ngeom ## Geometry set for 3 features  ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 34.79844 ymin: 31.06862 xmax: 35.01164 ymax: 31.26028 ## Geodetic CRS:  WGS 84 ## POINT (34.79844 31.24329) ## POINT (34.81283 31.26028) ## POINT (35.01163 31.06862)\nThe printout demostrates that other than the geometries themselves, and the derived properties of type, dimensionality, and bounding box, the geometry column contains the additional piece of information on the CRS.\n\n\n10.3.4 Layer (sf)\nA geometry column (sfc) can be combined with non-spatial columns, also known as attributes, resulting in a layer (sf) object. In our case, the three points in the sfc geometry column geom (Section 7.2.3) represent the location of the three railway stations in Beer-Sheva and Dimona. Let's create a data.frame with several non-spatial properties of the stations, which we already worked with in Section 4.1.2, using function data.frame (Section 4.1.2):\nname = c(\"Beer-Sheva Center\", \"Beer-Sheva University\", \"Dimona\") city = c(\"Beer-Sheva\", \"Beer-Sheva\", \"Dimona\") lines = c(4, 5, 1) piano = c(FALSE, TRUE, FALSE) dat = data.frame(name, city, lines, piano) dat ##                    name       city lines piano ## 1     Beer-Sheva Center Beer-Sheva     4 FALSE ## 2 Beer-Sheva University Beer-Sheva     5  TRUE ## 3                Dimona     Dimona     1 FALSE\nNote that the order of rows in the attribute table must match the order of the geometries!\ndat ##                    name       city lines piano ## 1     Beer-Sheva Center Beer-Sheva     4 FALSE ## 2 Beer-Sheva University Beer-Sheva     5  TRUE ## 3                Dimona     Dimona     1 FALSE\nNow, we can combine the attribute table dat (data.frame) and the geometry column geom (sfc). This is done using function st_sf, resulting in a layer (sf):\nlayer = st_sf(dat, geom)\nlayer ## Simple feature collection with 3 features and 4 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 34.79844 ymin: 31.06862 xmax: 35.01164 ymax: 31.26028 ## Geodetic CRS:  WGS 84 ##                    name       city lines piano                      geom ## 1     Beer-Sheva Center Beer-Sheva     4 FALSE POINT (34.79844 31.24329) ## 2 Beer-Sheva University Beer-Sheva     5  TRUE POINT (34.81283 31.26028) ## 3                Dimona     Dimona     1 FALSE POINT (35.01163 31.06862)\n\n\n10.3.5 Interactive mapping with mapview\nFunction mapview—which we are familiar with from Section 5.3.7.2—is useful for inspecting vector layers too. For example:\nlibrary(mapview) mapview(layer)\n+−\nlayer\n5 km\n3 mi\nlayer\nLeaflet | © OpenStreetMap contributors © CARTO"
  },
  {
    "objectID": "ch7.html#extracting-layer-components",
    "href": "ch7.html#extracting-layer-components",
    "title": "10  Vector layers",
    "section": "10.4 Extracting layer components",
    "text": "10.4 Extracting layer components\nIn Section 7.2 we:\n\nStarted from raw coordinates\nConvered them to geometry objects (sfg) using a function such as st_point, st_polygon, etc. (Section 7.2.2)\nCombined the geometries to a geometry column (sfc) using function st_sfc (Section 7.2.3)\nAdded attributes to the geometry column to get a layer (sf) using function st_sf (Section 7.2.4)\n\nwhich can be summarized as: coordinates → sfg → sfc → sf.\nSometimes we are interested in the opposite \"direction.\" In other words, we sometimes need to extract the simpler components (geometry, attributes, coordinates) from an existing layer:\n\nsf → geometry column (sfc)\nsf → attribute table (data.frame)\nsf → coordinates (matrix)\n\nThe geometry column (sfc) component can be extracted from an sf layer object using function st_geometry:\nst_geometry(layer) ## Geometry set for 3 features  ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 34.79844 ymin: 31.06862 xmax: 35.01164 ymax: 31.26028 ## Geodetic CRS:  WGS 84 ## POINT (34.79844 31.24329) ## POINT (34.81283 31.26028) ## POINT (35.01163 31.06862)\nThe non-spatial columns of an sf layer, i.e., the attribute table, can be extracted from an sf object using function st_drop_geometry:\nst_drop_geometry(layer) ##                    name       city lines piano ## 1     Beer-Sheva Center Beer-Sheva     4 FALSE ## 2 Beer-Sheva University Beer-Sheva     5  TRUE ## 3                Dimona     Dimona     1 FALSE\nThe latter is analogous to opening an attribute table of a vector layer in GIS software, such as ArcGIS (Figure 7.12).\nFigure 7.12: Attribute table in ArcGIS\nThe coordinates of sf, sfc or sfg objects can be obtained with function st_coordinates. The coordinates are returned as a matrix:\nst_coordinates(layer) ##          X        Y ## 1 34.79844 31.24329 ## 2 34.81283 31.26028 ## 3 35.01163 31.06862\nIn the case of a two-dimensional POINT layer, which is the most common use case of st_coordinates, the returned matrix has two columns X and Y as shown above. (With other types of geometries, the matrix has additional columns containing the information on grouping of point coordinates into shapes.)"
  },
  {
    "objectID": "ch7.html#creating-point-layer-from-table",
    "href": "ch7.html#creating-point-layer-from-table",
    "title": "10  Vector layers",
    "section": "10.5 Creating point layer from table",
    "text": "10.5 Creating point layer from table\nA common way of creating a point layer is to transform a table which has X and Y coordinate columns. Function st_as_sf can transform a table (data.frame) into a point layer (sf). In st_as_sf we specify:\n\nx—The data.frame to be converted\ncoords—Columns names with the coordinates (X, Y)\ncrs—The CRS (NA if left unspecified)\n\nLet's take the rainfall.csv table as an example. This table contains UTM 36N (EPSG: 32636) coordinates in the columns named x_utm and y_utm:\nrainfall = read.csv(\"rainfall.csv\")\nhead(rainfall) ##      num altitude sep oct nov dec jan feb mar apr may              name ## 1 110050       30 1.2  33  90 117 135 102  61  20 6.7 Kfar Rosh Hanikra ## 2 110351       35 2.3  34  86 121 144 106  62  23 4.5              Saar ## 3 110502       20 2.7  29  89 131 158 109  62  24 3.8             Evron ## 4 111001       10 2.9  32  91 137 152 113  61  21 4.8       Kfar Masrik ## 5 111650       25 1.0  27  78 128 136 108  59  21 4.7     Kfar Hamakabi ## 6 120202        5 1.5  27  80 127 136  95  49  19 2.7        Haifa Port ##      x_utm   y_utm ## 1 696533.1 3660837 ## 2 697119.1 3656748 ## 3 696509.3 3652434 ## 4 696541.7 3641332 ## 5 697875.3 3630156 ## 6 687006.2 3633330\nThe table can be converted to an sf layer using st_as_sf as follows:\nrainfall = st_as_sf(rainfall, coords = c(\"x_utm\", \"y_utm\"), crs = 32636)\nNote:\n\nThe order of coords column names corresponds to X-Y!\n32636 is the EPSG code of the UTM 36N projection (Table 7.4)\n\nThe analogous operation in ArcGIS is the Display XY Data menu (Figures 7.13–7.15).\nFigure 7.13: Displaying XY data from CSV in ArcGIS (Step 1)\nFigure 7.14: Displaying XY data from CSV in ArcGIS (Step 2)\nFigure 7.15: Displaying XY data from CSV in ArcGIS (Step 3)\nHere is the resulting sf layer:\nrainfall ## Simple feature collection with 169 features and 12 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 629301.4 ymin: 3270290 xmax: 761589.2 ymax: 3681163 ## Projected CRS: WGS 84 / UTM zone 36N ## First 10 features: ##       num altitude sep oct nov dec jan feb mar apr may              name ## 1  110050       30 1.2  33  90 117 135 102  61  20 6.7 Kfar Rosh Hanikra ## 2  110351       35 2.3  34  86 121 144 106  62  23 4.5              Saar ## 3  110502       20 2.7  29  89 131 158 109  62  24 3.8             Evron ## 4  111001       10 2.9  32  91 137 152 113  61  21 4.8       Kfar Masrik ## 5  111650       25 1.0  27  78 128 136 108  59  21 4.7     Kfar Hamakabi ## 6  120202        5 1.5  27  80 127 136  95  49  19 2.7        Haifa Port ## 7  120630      450 1.9  36  93 161 166 128  71  21 4.9  Haifa University ## 8  120750       30 1.6  31  91 163 170 146  76  22 4.9             Yagur ## 9  120870      210 1.1  32  93 147 147 109  61  16 4.3        Nir Etzyon ## 10 121051       20 1.8  32  85 147 142 102  56  13 4.5         En Carmel ##                    geometry ## 1  POINT (696533.1 3660837) ## 2  POINT (697119.1 3656748) ## 3  POINT (696509.3 3652434) ## 4  POINT (696541.7 3641332) ## 5  POINT (697875.3 3630156) ## 6  POINT (687006.2 3633330) ## 7  POINT (689553.7 3626282) ## 8  POINT (694694.5 3624388) ## 9  POINT (686489.5 3619716) ## 10 POINT (683148.4 3616846)\nAn interactive map, showing the spatial locations of the rainfall stations, can be created using mapview (Section 7.2.5). Here, we are using the additional zcol parameter to choose which attribute will be used for the color scale:\nmapview(rainfall, zcol = \"jan\")\n+−\nrainfall - jan\n50100150200\n100 km\n50 mi\nrainfall - jan\nLeaflet | © OpenStreetMap contributors © CARTO"
  },
  {
    "objectID": "ch7.html#sf-layer-properties",
    "href": "ch7.html#sf-layer-properties",
    "title": "10  Vector layers",
    "section": "10.6 sf layer properties",
    "text": "10.6 sf layer properties\n\n10.6.1 Dimensions\nAn sf layer is basically a special type of data.frame, where one of the columns is a geometry column. Therefore, many of the functions we learned when working with data.frame tables (Chapter 4) also work on sf layers.\nFor example, we can get the number of rows, or features, with nrow:\nnrow(rainfall) ## [1] 169\nand the number of columns (including the geometry column) with ncol:\nncol(rainfall) ## [1] 13\nor both with dim:\ndim(rainfall) ## [1] 169  13\n\nWhat is the result of st_geometry(rainfall)? st_drop_geometry(rainfall)?\n\n\n\n10.6.2 Spatial properties\nThe st_bbox function returns the bounding box coordinates, just like for stars objects (Section 5.3.8.3):\nst_bbox(rainfall) ##      xmin      ymin      xmax      ymax  ##  629301.4 3270290.2  761589.2 3681162.7\nThe st_crs function returns the Coordinate Reference System (CRS), also the same way as for stars objects (Section 5.3.8.3):\nst_crs(rainfall) ## Coordinate Reference System: ##   User input: EPSG:32636  ##   wkt: ## PROJCRS[\"WGS 84 / UTM zone 36N\", ##     BASEGEOGCRS[\"WGS 84\", ##         DATUM[\"World Geodetic System 1984\", ##             ELLIPSOID[\"WGS 84\",6378137,298.257223563, ##                 LENGTHUNIT[\"metre\",1]]], ##         PRIMEM[\"Greenwich\",0, ##             ANGLEUNIT[\"degree\",0.0174532925199433]], ##         ID[\"EPSG\",4326]], ##     CONVERSION[\"UTM zone 36N\", ##         METHOD[\"Transverse Mercator\", ##             ID[\"EPSG\",9807]], ##         PARAMETER[\"Latitude of natural origin\",0, ##             ANGLEUNIT[\"degree\",0.0174532925199433], ##             ID[\"EPSG\",8801]], ##         PARAMETER[\"Longitude of natural origin\",33, ##             ANGLEUNIT[\"degree\",0.0174532925199433], ##             ID[\"EPSG\",8802]], ##         PARAMETER[\"Scale factor at natural origin\",0.9996, ##             SCALEUNIT[\"unity\",1], ##             ID[\"EPSG\",8805]], ##         PARAMETER[\"False easting\",500000, ##             LENGTHUNIT[\"metre\",1], ##             ID[\"EPSG\",8806]], ##         PARAMETER[\"False northing\",0, ##             LENGTHUNIT[\"metre\",1], ##             ID[\"EPSG\",8807]]], ##     CS[Cartesian,2], ##         AXIS[\"(E)\",east, ##             ORDER[1], ##             LENGTHUNIT[\"metre\",1]], ##         AXIS[\"(N)\",north, ##             ORDER[2], ##             LENGTHUNIT[\"metre\",1]], ##     USAGE[ ##         SCOPE[\"unknown\"], ##         AREA[\"World - N hemisphere - 30°E to 36°E - by country\"], ##         BBOX[0,30,84,36]], ##     ID[\"EPSG\",32636]]\n\nQuestion: what is the difference between the two plots in Figure 7.16, created using the following expressions?\n\nplot(st_geometry(rainfall)) plot(st_coordinates(rainfall)[, 1], st_coordinates(rainfall)[, 2])\nFigure 7.16: Two plots"
  },
  {
    "objectID": "ch7.html#subsetting-based-on-attributes",
    "href": "ch7.html#subsetting-based-on-attributes",
    "title": "10  Vector layers",
    "section": "10.7 Subsetting based on attributes",
    "text": "10.7 Subsetting based on attributes\nSubsetting of features in an sf vector layer is exactly the same as filtering rows in a data.frame (Section 4.1.5). Remember: an sf layer is a data.frame. For example, the following expressions subset the rainfall layer:\nrainfall[1:10, ] rainfall[rainfall$jan &gt; 100, ]\n\nWhich meteorological stations are being selected in each of these two expressions?\n\nFigure 7.17 shows the resulting subsets:\nplot(st_geometry(rainfall[1:10, ]), main = \"rainfall[1:10, ]\") plot(st_geometry(rainfall[rainfall$jan &gt; 100, ]), main = \"rainfall[rainfall$jan &gt; 100, ]\")\nFigure 7.17: Subsets of the rainfall layer\nSubsetting columns in sf is also similar to subsetting columns in a data.frame, with one exception: the geometry column. The geometry column \"sticks\" to the subset, by default, even if we do not explicitly select it, so that the resulting subset remains an sf object:\nrainfall[1:5, c(\"jan\", \"feb\")] ## Simple feature collection with 5 features and 2 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 696509.3 ymin: 3630156 xmax: 697875.3 ymax: 3660837 ## Projected CRS: WGS 84 / UTM zone 36N ##   jan feb                 geometry ## 1 135 102 POINT (696533.1 3660837) ## 2 144 106 POINT (697119.1 3656748) ## 3 158 109 POINT (696509.3 3652434) ## 4 152 113 POINT (696541.7 3641332) ## 5 136 108 POINT (697875.3 3630156)\nIn case we do need to omit the geometry column and get a data.frame, we can apply st_drop_geometry (Section 7.3) on the subset:\nst_drop_geometry(rainfall[1:5, c(\"jan\", \"feb\")]) ##   jan feb ## 1 135 102 ## 2 144 106 ## 3 158 109 ## 4 152 113 ## 5 136 108"
  },
  {
    "objectID": "ch7.html#reading-vector-layers",
    "href": "ch7.html#reading-vector-layers",
    "title": "10  Vector layers",
    "section": "10.8 Reading vector layers",
    "text": "10.8 Reading vector layers\nIn addition to creating from raw coordinates (Section 7.2) and transforming a data.frame to point layer (Section 7.4), we often create vector layers by reading from a file or from a spatial database (Section 7.1.2)28. Reading a vector layer from a file or a database is done using the st_read function.\nFor example, the following expression reads the Shapefile of US county boundaries, named USA_2_GADM_fips.shp, from the course materials. In case the Shapefile is located in the working directory, we need to specify the name of just the .shp file, even though the Shapefile contains several other files (Table 7.1):\ncounty = st_read(\"USA_2_GADM_fips.shp\")\ncounty ## Simple feature collection with 3103 features and 4 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -124.7628 ymin: 24.52042 xmax: -66.94889 ymax: 49.3833 ## Geodetic CRS:  WGS 84 ## First 10 features: ##         NAME_1     NAME_2 TYPE_2  FIPS                       geometry ## 1  Connecticut Litchfield County 09005 MULTIPOLYGON (((-73.05166 4... ## 2  Connecticut   Hartford County 09003 MULTIPOLYGON (((-72.50941 4... ## 3  Connecticut    Tolland County 09013 MULTIPOLYGON (((-72.13582 4... ## 4  Connecticut    Windham County 09015 MULTIPOLYGON (((-71.79794 4... ## 5   California   Siskiyou County 06093 MULTIPOLYGON (((-122.2873 4... ## 6   California  Del Norte County 06015 MULTIPOLYGON (((-124.2492 4... ## 7   California      Modoc County 06049 MULTIPOLYGON (((-120.0003 4... ## 8  Connecticut New London County 09011 MULTIPOLYGON (((-72.225 41.... ## 9  Connecticut  Fairfield County 09001 MULTIPOLYGON (((-73.65778 4... ## 10 Connecticut  Middlesex County 09007 MULTIPOLYGON (((-72.47361 4...\nLet's also read a GeoJSON file with the location of three particular airports in New Mexico:\nairports = st_read(\"airports.geojson\")\nairports ## Simple feature collection with 3 features and 1 field ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -106.7947 ymin: 35.04807 xmax: -106.0892 ymax: 35.61621 ## Geodetic CRS:  WGS 84 ##                        name                   geometry ## 1 Albuquerque International POINT (-106.6169 35.04807) ## 2           Double Eagle II POINT (-106.7947 35.15559) ## 3        Santa Fe Municipal POINT (-106.0892 35.61621)"
  },
  {
    "objectID": "ch7.html#basic-plotting",
    "href": "ch7.html#basic-plotting",
    "title": "10  Vector layers",
    "section": "10.9 Basic plotting",
    "text": "10.9 Basic plotting\nWhen plotting an sf object with plot, we get multiple small maps—one map for each attribute. This can be useful to quickly examine the types of spatial variation in our data. For example (Figure 7.18):\nplot(county)\nFigure 7.18: Plot of sf object\nPlotting a single attribute adds a legend (Figure 7.19). The key.width and key.pos let us control the amount of space the legend takes and its placement, respectively:\nplot(county[, \"TYPE_2\"], key.width = lcm(5), key.pos = 4)\nFigure 7.19: Plot of sf object, single attribute with legend\nPlotting an sfc or an sfg object shows just the geometry (Figure 7.20):\nplot(st_geometry(county))\nFigure 7.20: Plot of sfc object\nWe can use graphical parameters to control the appearance of plotted geometries, such as:\n\ncol—Fill color\nborder—Outline color\npch—Point shape\ncex—Point size\n\nFor example, the following expression draws county borders in grey (Figure 7.21):\nplot(st_geometry(county), border = \"grey\")\nFigure 7.21: Basic plot of sfc object\nAdditional vector layers can be drawn in an existing graphical window using add=TRUE, similarly to the concept of layers in GIS software. For example, the following expressions draw both county and airports geometries (Figure 7.22). Note how the second expression uses add=TRUE:\nplot(st_geometry(county), border = \"grey\") plot(st_geometry(airports), col = \"red\", add = TRUE)\nFigure 7.22: Using add=TRUE in plot\nWe can also use add=TRUE to combine sfg or sfc geometries with rasters in the same plot. For example, let's plot the rainfall layer on top of the rainfall.tif raster, which is an interpolated rainfall surface we met in Chapter 1. First we will read the raster file:\nlibrary(stars) r = read_stars(\"rainfall.tif\") names(r) = \"rainfall (mm)\"\nand then plot both layers (Figure 7.23):\nplot(r, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"), reset = FALSE) plot(st_geometry(rainfall), add = TRUE)\nFigure 7.23: sfc layer on top of a raster\nNote that we need to use the additional argument reset=FALSE whenever we are adding more layers to a stars raster plot."
  },
  {
    "objectID": "ch7.html#coordinate-reference-systems-crs",
    "href": "ch7.html#coordinate-reference-systems-crs",
    "title": "10  Vector layers",
    "section": "10.10 Coordinate Reference Systems (CRS)",
    "text": "10.10 Coordinate Reference Systems (CRS)\n\n10.10.1 What are CRS?\nA Coordinate Reference System (CRS) defines how the coordinates in our geometries relate to the surface of the Earth. There are two main types of CRS:\n\nGeographic—longitude and latitude, in degrees\nProjected—implying flat surface, usually in units of true distance (e.g., meters)\n\nFor example, Figure 7.24 shows the same polygonal layer (U.S. counties) in two different projection. On the left, the county layer is in the WGS84 geographic projection. Indeed, we can see that the axes are given in degrees of longitude and latitude. For example, we can see how the nothern border of U.S. follows the 49° latitude line. On the right, the same layer is displayed in the US National Atlas projection, where units are arbitrary but reflect true distance (meters). For example, the distance between every two consecutive grid lines is 1,000,000 meters or 1,000 kilometers.\nFigure 7.24: US counties in WGS84 and US Atlas projections\n\n\n10.10.2 Vector layer reprojection\nReprojection is the transformation of geometry coordinates, from one CRS to another. It is an important part of spatial analysis workflow, since we often need to:\n\nTransform several layers into the same projection, so that they can be displayed one on top of the other (e.g., Figure 7.22) or so that they can be subject to a spatial operator (e.g., Figure 7.7)\nSwitch between geographic and projected CRS\n\nA vector layer can be reprojected with st_transform. The st_transform function has two important parameters:\n\nx—The layer to be reprojected\ncrs—The target CRS\n\n\nWhy don't we need to specify the origin CRS in st_transform?\n\nAs mentioned above, the CRS can be specified in one of four ways, using an EPSG code, a PROJ4 string, a WKT string, or a crs object (Section 7.2.3). Where can we find EPSG codes or WKT definitions of different projections?\n\nWe can use CRS databases on the internet, such as http://spatialreference.org or http://epsg.io/, to look up CRS definitions for a given country, of CRS name, using the search box.\nWe can use the make_EPSG function from the rgdal package in R, which returns a data.frame of CRS definitions. The data.frame can be filtered to locate the CRS of interest. For example, the following expressions return the information on CRS where the description contains the word \"Israel.\"\n\nlibrary(rgdal) dat = make_EPSG() dat[grepl(\"Israel\", dat$note), ] ##       code                             note ## 86    4141                      Israel 1993 ## 1158  2039    Israel 1993 / Israeli TM Grid ## 2527 28193 Palestine 1923 / Israeli CS Grid ## 5458  6984                  Israeli Grid 05 ## 5459  6991               Israeli Grid 05/12 ##                                                                                                                                                       prj4 ## 86                                                                                                           +proj=longlat +ellps=GRS80 +no_defs +type=crs ## 1158      +proj=tmerc +lat_0=31.7343936111111 +lon_0=35.2045169444444 +k=1.0000067 +x_0=219529.584 +y_0=626907.39 +ellps=GRS80 +units=m +no_defs +type=crs ## 2527 +proj=cass +lat_0=31.7340969444444 +lon_0=35.2120805555556 +x_0=170251.555 +y_0=1126867.909 +a=6378300.789 +b=6356566.435 +units=m +no_defs +type=crs ## 5458      +proj=tmerc +lat_0=31.7343936111111 +lon_0=35.2045169444444 +k=1.0000067 +x_0=219529.584 +y_0=626907.39 +ellps=GRS80 +units=m +no_defs +type=crs ## 5459      +proj=tmerc +lat_0=31.7343936111111 +lon_0=35.2045169444444 +k=1.0000067 +x_0=219529.584 +y_0=626907.39 +ellps=GRS80 +units=m +no_defs +type=crs ##               prj_method ## 86                (null) ## 1158 Transverse Mercator ## 2527     Cassini-Soldner ## 5458 Transverse Mercator ## 5459 Transverse Mercator\nIn this book, we are going to encounter five different projections: WGS84, Sinusoidal, UTM 36N, ITM and US National Atlas (Table 7.4). We are going to specify them (e.g., in st_transform) using their EPSG codes, which is the easiest method.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 7.4: Projections used in this book\n\n\nName\nType\nArea\nUnits\nEPSG code\n\n\nWGS84\nGeographic\nWorld\ndegrees\n4326\n\n\nSinusoidal\nProjected\nWorld\nmeters\n-\n\n\nUTM 36N\nProjected\nIsrael\nmeters\n32636\n\n\nITM\nProjected\nIsrael\nmeters\n2039\n\n\nUS National Atlas\nProjected\nUSA\nmeters\n2163\n\n\n\nNow, let's see how we can use the st_transform function to repriject layers, in practice. The county and airports are currently in WGS84 (EPSG:4326) (How can we check?). Suppose that we would like to reproject those layers to the the US National Atlas Equal Area projection (EPSG:2163). The following expressions implement the reprojection:\ncounty = st_transform(county, 2163) airports = st_transform(airports, 2163)\nThe modified layers are shown in Figure 7.25. We can clearly see that the layer orientation has changes (also see Figure 7.24).\nplot(st_geometry(county), border = \"grey\") plot(st_geometry(airports), col = \"red\", add = TRUE)\nFigure 7.25: The county and airports layers in the US National Atlas Projection (EPSG=2163)\nExamining the layer coordinates also shows that, indeed, the coordinates have changed with reprojecton:\nst_coordinates(st_transform(airports, 4326))  # WGS84 coordinates ##           X        Y ## 1 -106.6169 35.04807 ## 2 -106.7947 35.15559 ## 3 -106.0892 35.61621\nst_coordinates(st_transform(airports, 2163))  # US National Atlas coordinates ##           X        Y ## 1 -603868.2 -1081605 ## 2 -619184.5 -1068431 ## 3 -551689.8 -1022366\n\nCreate a subset of county with the counties of New-Mexico, Arizona and Texas only, and plot the result (Figure 7.26).\n\nFigure 7.26: Subset of three states from the county layer"
  },
  {
    "objectID": "ch7.html#writing-vector-layers",
    "href": "ch7.html#writing-vector-layers",
    "title": "10  Vector layers",
    "section": "10.11 Writing vector layers",
    "text": "10.11 Writing vector layers\nWriting an sf object to a file can be done with st_write. Before writing the rainfall layer to disk, let's calculate a new column called annual with the annual rainfall (Section 4.5):\nm = c(\"sep\", \"oct\", \"nov\", \"dec\", \"jan\", \"feb\", \"mar\", \"apr\", \"may\") rainfall$annual = apply(st_drop_geometry(rainfall[, m]), 1, sum)\n\nIn the last expression, why did we use st_drop_geometry(rainfall[, m]) as the first argument in apply, instead of rainfall[, m]?\n\nThe sf object can be written to a Shapefile with st_write, as follows:\nst_write(rainfall, \"rainfall_pnt.shp\")\nThe format is automatically determined based on the .shp file extension. To overwrite an existing file, use delete_dsn=TRUE."
  },
  {
    "objectID": "ch8.html#aims",
    "href": "ch8.html#aims",
    "title": "11  Geometric operations with vector layers",
    "section": "11.1 Aims",
    "text": "11.1 Aims\nOur aims in this chapter are:\n\nLearn how to join data to a vector layer, by attributes or by location\nLearn to make geometric calculations with vector layers\n\nWe will use the following R packages:\n\nsf\nunits"
  },
  {
    "objectID": "ch8.html#join-by-location",
    "href": "ch8.html#join-by-location",
    "title": "11  Geometric operations with vector layers",
    "section": "11.2 Join by location",
    "text": "11.2 Join by location\nFor most of the examples in this Chapter, we are going to use the US counties and three airports layers (Section 7.7):\nlibrary(sf) airports = st_read(\"airports.geojson\") county = st_read(\"USA_2_GADM_fips.shp\")\ntransformed to the US National Atlas projection (Section 7.9.2):\nairports = st_transform(airports, 2163) county = st_transform(county, 2163)\nJoin by spatial location, or spatial join, is one of the most common operations in spatial analysis. In a spatial join we are \"attaching\" attributes from one layer to another, based on their spatial relations. In ArcGIS this is done using \"Join data from another layer based on spatial location\" Figures 8.1–8.2.\nFigure 8.1: Join by location in ArcGIS (Step 1)\nFigure 8.2: Join by location in ArcGIS (Step 2)\nFor simplicity, we will create a subset of the counties of New Mexico only, since all three airports are located in that state:\nnm = county[county$NAME_1 == \"New Mexico\", ]\nFigure 8.3 shows the geometry of the nm and airports layers. Note that the pch parameter determines point shape (see ?points), while cex determines point size (Section 7.8):\nplot(st_geometry(nm)) plot(st_geometry(airports), col = \"red\", pch = 16, cex = 2, add = TRUE)\nFigure 8.3: The nm and airports layers\nGiven two layers x and y, a function call of the form st_join(x, y) returns the x layer along with matching attributes from y. The default join type is by intersection, meaning that two geometries are considered matching if they intersect. Other join types can be specified using the join parameter (see ?st_join).\nFor example, the following expression joins the airports layer with the matching nm attributes. The resulting layer contains all three airports with their original geometry and name attribute, plus the NAME_1, NAME_2, TYPE_2 and FIPS of the nm feature that each airport intersects with:\nst_join(airports, nm) ## Simple feature collection with 3 features and 5 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -619184.5 ymin: -1081605 xmax: -551689.8 ymax: -1022366 ## Projected CRS: US National Atlas Equal Area ##                        name     NAME_1     NAME_2 TYPE_2  FIPS ## 1 Albuquerque International New Mexico Bernalillo County 35001 ## 2           Double Eagle II New Mexico Bernalillo County 35001 ## 3        Santa Fe Municipal New Mexico   Santa Fe County 35049 ##                     geometry ## 1 POINT (-603868.2 -1081605) ## 2 POINT (-619184.5 -1068431) ## 3 POINT (-551689.8 -1022366)\n\nWhat do you think will happen if we reverse the order of the arguments, as in st_join(nm, airports)? How many features is the result going to have, and why?"
  },
  {
    "objectID": "ch8.html#subsetting-by-location",
    "href": "ch8.html#subsetting-by-location",
    "title": "11  Geometric operations with vector layers",
    "section": "11.3 Subsetting by location",
    "text": "11.3 Subsetting by location\nIn Section 7.6 we learned how to subset sf vector layers based on their attributes, just like an ordinary data.frame (Section 4.1.5). We can also subset an sf layer based on its intersection with another layer. Subsetting by location uses the same [ operator, only using a layer as the \"index.\" Namely, an expression of the form x[y, ]—where x and y are vector layers—returns a subset of x features that intersect with y.\nFor example, the following expression returns only those nm counties that intersect with the airports layer:\nnm1 = nm[airports, ]\nThe subset is shown in light blue in Figure 8.4:\nplot(st_geometry(nm)) plot(st_geometry(nm1), col = \"lightblue\", add = TRUE) plot(st_geometry(airports), col = \"red\", pch = 16, cex = 2, add = TRUE)\nFigure 8.4: Subset of the nm layer based on intersection with airports\n\nWhat will be the result of airports[nm, ]?\n\n\nWhat will be the result of nm[nm[20, ], ]?"
  },
  {
    "objectID": "ch8.html#geometric-calculations",
    "href": "ch8.html#geometric-calculations",
    "title": "11  Geometric operations with vector layers",
    "section": "11.4 Geometric calculations",
    "text": "11.4 Geometric calculations\n\n11.4.1 Introduction\nGeometric operations on vector layers can conceptually be divided into three groups, according to their output:\n\nNumeric values (Section 8.3.2)—Functions that summarize geometrical properties of:\n\nA single layer—e.g., area, length (Section 8.3.2.2)\nA pair of layers—e.g., distance (Section 8.3.2.3)\n\nLogical values (Section 8.3.3)—Functions that evaluate whether a certain condition holds true, regarding:\n\nA single layer—e.g., geometry is valid\nA pair of layers—e.g., feature A intersects feature B (Section 8.3.3)\n\nSpatial layers (Section 8.3.4)—Functions that create a new layer based on:\n\nA single layer—e.g., centroid, buffer (Sections 8.3.4.2, 8.3.4.4, 8.3.4.5, 8.3.4.7)\nA pair of layers—e.g., intersection area (Section 8.3.4.6)\n\n\nThe following three sections elaborate and give examples of numeric (Section 8.3.2), logical (Section 8.3.3) and spatial (Section 8.3.4) geometric calculations on vector layers.\n\n\n11.4.2 Numeric geometric calculations\n\n11.4.2.1 Introduction\nThere are several functions to calculate numeric geometric properties of vector layers in package sf:\n\nst_bbox—Section 7.5.2\nst_area—Section 8.3.2.2\nst_distance—Section 8.3.2.3\nst_length—Section 11.4.6\nst_dimension\n\nFunctions st_bbox, st_area, st_length and st_dimension are operation applicable for individual geometries. The st_distance function is applicable to pairs of geometries. The next two sections give an example from each category: st_area for individual geometries (Section 8.3.2.2) and st_distance for pairs of geometries (Section 8.3.2.3).\n\n\n11.4.2.2 Area\nThe st_area function returns the area of each feature or geometry. For example, we can use st_area to calculate the area of each feature in the county layer (i.e., each county):\ncounty$area = st_area(county) county$area[1:6] ## Units: [m^2] ## [1]  2451875694  1941109814  1077788608  1350475635 16416571545  2626706989\nThe result is an object of class units, which is basically a numeric vector associated with the units of measurement:\nclass(county$area) ## [1] \"units\"\nCRS units (e.g., meters) are used by default in length, area and distance calculations. For example, the units of measurement in the US National Atlas CRS are meters, which is why the area values are returned in m2�2 units.\nWe can convert units objects to different units, with set_units from package units29. Note that the units package needs to be loaded to do that. For example, here is how we can convert the area column from m2�2 to km2��2:\nlibrary(units) county$area = set_units(county$area, \"km^2\") county$area[1:6] ## Units: [km^2] ## [1]  2451.876  1941.110  1077.789  1350.476 16416.572  2626.707\nDealing with units, rather than numeric values has several advantages:\n\nWe don't need to remember the coefficients for conversion between one unit to another, avoiding conversion mistakes.\nWe don't need to remember, or somehow encode, the units of measurement (e.g., rename the area column to area_m2) since they are already binded with the values.\nWe can keep track of the units when making numeric calculations. For example, if we divide a numeric value by km2��2, the result is going to be associated with units of density, km−2��−2 (Section 8.5).\n\nNevertheless, if necessary, we can always convert units to an ordinary numeric vector with as.numeric:\nas.numeric(county$area[1:6]) ## [1]  2451.876  1941.110  1077.789  1350.476 16416.572  2626.707\nThe calculated county area attribute values are visualized in Figure 8.5:\nplot(county[, \"area\"])\nFigure 8.5: Calculated area attribute\n\n\n11.4.2.3 Distance\nAn example of a numeric operator on a pair of geometries is geographical distance. Distances can be calculated using function st_distance. For example, the following expression calculates the distance between each feature in airports and each feature in nm:\nd = st_distance(airports, nm)\nThe result is a matrix of units values:\nd[, 1:6] ## Units: [m] ##          [,1]     [,2]      [,3]      [,4]      [,5]      [,6] ## [1,] 266778.9 140470.5 103328.22 140913.62 175353.34 121934.94 ## [2,] 275925.0 120879.9  93753.25 141511.80 177624.40 125327.45 ## [3,] 197540.4 145580.9  34956.53  62231.01  96549.17  43630.68\nIn the distance matrix resulting from st_distance(x,y):\n\nRows refer to features of x, e.g., airports\nColumns refer to features of y, e.g., nm\n\nTherefore, the matrix dimensions are equal to c(nrow(x), nrow(y)):\nc(nrow(airports), nrow(nm)) ## [1]  3 33\ndim(d) ## [1]  3 33\nJust like areas (Section 8.3.2.2), distances can be converted to different units with set_units. For example, the following expression converts the distance matrix d from m� to km��:\nd = set_units(d, \"km\") d[, 1:6] ## Units: [km] ##          [,1]     [,2]      [,3]      [,4]      [,5]      [,6] ## [1,] 266.7789 140.4705 103.32822 140.91362 175.35334 121.93494 ## [2,] 275.9250 120.8799  93.75325 141.51180 177.62440 125.32745 ## [3,] 197.5404 145.5809  34.95653  62.23101  96.54917  43.63068\nTo work with the distance matrix, it can be convenient to set row and column names. We can use any of the unique attributes of x and y, such as airport names and county names:\nrownames(d) = airports$name colnames(d) = nm$NAME_2 d[, 1:6] ## Units: [km] ##                              Union San Juan Rio Arriba      Taos    Colfax ## Albuquerque International 266.7789 140.4705  103.32822 140.91362 175.35334 ## Double Eagle II           275.9250 120.8799   93.75325 141.51180 177.62440 ## Santa Fe Municipal        197.5404 145.5809   34.95653  62.23101  96.54917 ##                                Mora ## Albuquerque International 121.93494 ## Double Eagle II           125.32745 ## Santa Fe Municipal         43.63068\nOnce row and column names are set, it is more convenient to find out the distance between a specific airport and a specific county:\nd[\"Santa Fe Municipal\", \"Santa Fe\", drop = FALSE] ## Units: [km] ##                    Santa Fe ## Santa Fe Municipal        0\n\n\n\n11.4.3 Logical geometric calculations\nGiven two sets of geometries, or layers, x and y, the following logical geometric functions check whether each of the geometries in x maintains the specified relation with each of the geometries in y:\n\nst_contains_properly\nst_contains\nst_covered_by\nst_covers\nst_crosses\nst_disjoint\nst_equals_exact\nst_equals\nst_intersects\nst_is_within_distance\nst_overlaps\nst_touches\nst_within\n\nIn this book we mostly use the first function in the above list, st_intersects. The st_intersects function detects intersection, which is the simplest and most useful type of relation. Two geometries intersect when they share at least one point in common. However, it is important to be aware of the many other relations that can be evaluated using the other 12 functions.\nBy default, the above functions return a list, which takes less memory but is less convenient to work with. When specifying sparse=FALSE the functions return a logical matrix which is more convenient to work with. Each element i,j in the matrix is TRUE when f(x[i], y[j]) is TRUE. For example, the following expression creates a matrix of intersection relations between counties in nm:\nint = st_intersects(nm, nm, sparse = FALSE) int[1:4, 1:4] ##       [,1]  [,2]  [,3]  [,4] ## [1,]  TRUE FALSE FALSE FALSE ## [2,] FALSE  TRUE  TRUE FALSE ## [3,] FALSE  TRUE  TRUE  TRUE ## [4,] FALSE FALSE  TRUE  TRUE\nFigure 8.6 shows two matrices of spatial relations between counties in New Mexico: st_intersects (left) and st_touches (right).\nFigure 8.6: Spatial relations between counties in New Mexico, st_intersects (left) and st_touches (right)\n\nHow can we calculate airports count per county in nm, using st_intersects (Figure 8.7)?\n\nFigure 8.7: Airport count per county in New Mexico\n\n\n11.4.4 Spatial geometric calculations\n\n11.4.4.1 Introduction\nThe sf package provides common geometry-generating functions applicable to individual geometries, such as:\n\nst_centroid—Section 8.3.4.2\nst_buffer—Section 8.3.4.5\nst_convex_hull—Section 8.3.4.7\nst_voronoi\nst_sample\n\nWhat each function does is illustrated in Figure 8.8.\nFigure 8.8: Geometry-generating operations on individual layers. The input geometries are shown in red, the output geometries are shown in black.\nAdditionally, the st_cast function is used to transform geometries from one type to another (Figure 7.6), which can also be considred as geometry generation (Section 8.3.4.4). The st_union and st_combine functions are used to combine multiple geometries into one, possibly dissolving their borders (Section 8.3.4.3).\nFinally, geometry-generating functions which operate on pairs of geometries (Section 8.3.4.6) include:\n\nst_intersection\nst_difference\nst_sym_difference\nst_union\n\nWe elaborate on these functions in the following Sections 8.3.4.2–8.3.4.7.\n\n\n11.4.4.2 Centroids\nA centroid is the geometric center of a geometry, i.e., its center of mass, represented as a point. For example, the following expression uses st_centroid to create the centroid of each polygon in county:\nctr = st_centroid(nm)\nThe nm layer along with the calculated centroids is shown in Figure 8.9:\nplot(st_geometry(nm), border = \"grey\") plot(st_geometry(ctr), col = \"red\", pch = 3, add = TRUE)\nFigure 8.9: Centroids of New Mexico counties\n\n\n11.4.4.3 Combining and dissolving\nThe st_combine and st_union functions can be used to combine multiple geometries into a single one. The difference is that st_combine only combines the geometries into one, just like the c function combines sfg objects into one sfg (Section 7.2.2), while st_union also dissolves internal borders.\nTo understand the difference between st_combine and st_union, let's examine the result of applying each of them on nm:\nst_combine(nm) ## Geometry set for 1 feature  ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -863763.9 ymin: -1478601 xmax: -267074.1 ymax: -845634.3 ## Projected CRS: US National Atlas Equal Area ## MULTIPOLYGON (((-267074.1 -884175.1, -267309.2 ...\nst_union(nm) ## Geometry set for 1 feature  ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: -863763.9 ymin: -1478601 xmax: -267074.1 ymax: -845634.3 ## Projected CRS: US National Atlas Equal Area ## POLYGON ((-852411.9 -1350402, -850603.1 -133127...\nThe results are plotted in Figure 8.10:\nplot(st_combine(nm), main = \"st_combine(nm)\") plot(st_union(nm), main = \"st_union(nm)\")\nFigure 8.10: Combining (st_combine) and dissolving (st_union) polygons\n\nWhat is the class of the resulting objects? Why? What happened to the original nm attributes?\n\n\nWhy did st_combine return a MULTIPOLYGON, while st_union returned a POLYGON?\n\n\nWhy do you think there are internal \"patches\" in the result of st_union(nm) (Figure 8.10)30?\n\nLet's solve a geometric question to practice some of the functions we learned so far. What is the distance between the centroids of California and New Jersey, in kilometers? Using [, st_union, st_centroid and st_distance, we can calculate the distance as follows:\n# Subsetting ca = county[county$NAME_1 == \"California\", ] nj = county[county$NAME_1 == \"New Jersey\", ]  # Union ca = st_union(ca) nj = st_union(nj)  # Calculating centroids ca_ctr = st_centroid(ca) nj_ctr = st_centroid(nj)  # Calculating distance d = st_distance(ca_ctr, nj_ctr)  # Converting to km set_units(d, \"km\") ## Units: [km] ##         [,1] ## [1,] 3846.64\nNote that we are using st_union to combine the county polygons into a single geometry, so that we can calculate the centroid of the state polygon, as a whole.\nTo plot the centroids more conveniently, we can use the c function to combine two sfc (geometry columns) into one, long, geometry column. Recall that this is unlike what the c function does when given sfg (geometries), in which case the geometries are combined to one (multi- or collection) geometry (Section 7.2.2).\np = c(ca_ctr, nj_ctr) p ## Geometry set for 2 features  ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -1707694 ymin: -667480.7 xmax: 2111204 ymax: -206332.8 ## Projected CRS: US National Atlas Equal Area ## POINT (-1707694 -667480.7) ## POINT (2111204 -206332.8)\nThe centroids we calculated can be displayed as follows (Figure 8.11):\nplot(st_geometry(county), border = \"grey\") plot(p, col = \"red\", pch = 16, cex = 2, add = TRUE)\nFigure 8.11: California and New Jersey centroids\nHow can we draw a line line between the centroids, corresponding to the distance we just calculated (Figure 8.12)?\nFirst, we can use st_combine to transform the points into a single MULTIPOINT geometry. Remember, the st_combine function is similar to st_union, but only combines and does not dissolve.\np = st_combine(p) p ## Geometry set for 1 feature  ## Geometry type: MULTIPOINT ## Dimension:     XY ## Bounding box:  xmin: -1707694 ymin: -667480.7 xmax: 2111204 ymax: -206332.8 ## Projected CRS: US National Atlas Equal Area ## MULTIPOINT ((-1707694 -667480.7), (2111204 -206...\n\nDo you think the results of st_union(p) and st_combine(p) will be different, and if so in what way?\n\nWhat is left to be done is to transform the MULTIPOINT geometry to a LINESTRING geometry, which is what we learn next (Section 8.3.4.4).\n\n\n11.4.4.4 Geometry casting\nSometimes we need to convert a given geometry to a different type, to express different aspects of the geometries in our analysis. For example, we would have to convert the county MULTIPOLYGON geometries to MULTILINESTRING geometries to calculate the perimeter of each county, using st_length (Section 8.3.2).\nThe st_cast function can be used to convert between different geometry types. The st_cast function accepts:\n\nThe input sfg, sfc or sf\nThe target geometry type\n\nFor example, we can use st_cast to convert our MULTIPOINT geometry p (Figure 8.11), which we calculated in Section 8.3.4.3, to a LINESTRING geometry l:\nl = st_cast(p, \"LINESTRING\") l ## Geometry set for 1 feature  ## Geometry type: LINESTRING ## Dimension:     XY ## Bounding box:  xmin: -1707694 ymin: -667480.7 xmax: 2111204 ymax: -206332.8 ## Projected CRS: US National Atlas Equal Area ## LINESTRING (-1707694 -667480.7, 2111204 -206332.8)\nEach MULTIPOINT geometry is replaced with a LINESTRING geometry, comprising a line that goes through all points from first to last. In this case, p contains just one MULTIPOINT geometry that contains two points. Therefore, the resulting geometry column l contains one LINESTRING geometry with a straight line.\nThe line we calculated is shown in Figure 8.12:\nplot(st_geometry(county), border = \"grey\") plot(st_geometry(ca_ctr), col = \"red\", pch = 16, cex = 2, add = TRUE) plot(st_geometry(nj_ctr), col = \"red\", pch = 16, cex = 2, add = TRUE) plot(l, col = \"red\", add = TRUE)\nFigure 8.12: California and New Jersey centroids, with a line\nIt is worth mentioning that not every conversion operation between geometry types is possible. Meaningless st_cast operations will fail with an error message. For example, a LINESTRING composed of just two points cannot be converted to a POLYGON:\nst_cast(l, \"POLYGON\") ## Error in FUN(X[[i]], ...): polygons require at least 4 points\n\n\n11.4.4.5 Buffers\nAnother example of a function that generates new geometries based on individual input geometries is st_buffer. The st_buffer function calculates buffers, polygons encompassing all point up to the specified distance from a given geometry.\nFor example, here is how we can calculate 100 km�� buffers around the airports. Note that the st_buffer requires buffer distance (dist), which can be passed as numeric, in which case CRS units are assumed, or as units, in which case we can use any distance unit we wish. The following two expressions are equivalent, in both cases resulting in a layer of 100 km�� buffers named airports_100:\n# Buffer distance as 'numeric' airports_100 = st_buffer(airports, dist = 100 * 10^3)\n# Buffer distance as 'units' airports_100 = st_buffer(airports, dist = set_units(100, \"km\"))\nThe airports_100 layer with the airport buffers is shown in Figure 8.13:\nplot(st_geometry(nm)) plot(st_geometry(airports_100), add = TRUE)\nFigure 8.13: airports buffered by 100 km\n\n\n11.4.4.6 Geometry generation from pairs\nIn addition to geometry-generating functions that operate on individual geometries, such as st_centroid (Section 8.3.4.2) and st_buffer (Section 8.3.4.5), there are four geometry-generating functions that operate on pairs of input geometries. These are:\n\nst_intersection\nst_difference\nst_sym_difference\nst_union\n\nFigure 8.14 shows what each of these four functions does. Note that st_intersection, st_sym_difference, st_union are symmetrical meaning that the order of the two inputs x and y does not matter. The st_difference function is not symmetrical: it returns the area of x, minus the intersection of x and y.\nFigure 8.14: Geometry-generating operations on pairs of layers\nFor example, suppose that we need to calculate the area that is within 100 km�� range of all three airports at the same time? We can find the area of intersection of the three airports, using st_intersection. Since st_intersection accepts two geometries at a time, this can be done in two steps:\ninter1 = st_intersection(airports_100[1, ], airports_100[2, ]) inter2 = st_intersection(inter1, airports_100[3, ])\nThe resulting polygon inter2 is shown, in blue, in Figure 8.15:\nplot(st_geometry(nm)) plot(st_geometry(airports_100), add = TRUE) plot(inter2, col = \"lightblue\", add = TRUE)\nFigure 8.15: The intersection of three airports buffers\nHow can we calculate the area that is within 100 km�� range of at least one of the three airports? We can use exactly the same technique, only replacing st_intersection with st_union, as follows:\nunion1 = st_union(airports_100[1, ], airports_100[2, ]) union2 = st_union(union1, airports_100[3, ])\nAs shown in Section 8.3.4.3, st_union can be applied on an individual layer, in which case it returns the (dissolved) union of all geometries. Therefore we can get to the same result with just one expression, as follows:\nunion2 = st_union(airports_100)\nThe resulting polygon union2 is shown, in blue, in Figure 8.16:\nplot(st_geometry(nm)) plot(union2, col = \"lightblue\", add = TRUE)\nFigure 8.16: The union of three airports buffers\n\n\n11.4.4.7 Convex hull\nThe Convex Hull of a set X� of points is the smallest convex polygon that contains X�. The convex hull may be visualized as the shape resulting when stretching a rubber band around X�, then releasing it until it shrinks to minimal size (Figure 8.17).\nFigure 8.17: Convex Hull: elastic-band analogy (https://en.wikipedia.org/wiki/Convex_hull)\nThe st_convex_hull function is used to calculate the convex hull of the given geometry or geometries. For example, the following expression calculates the convex hull (per feature) in nm1:\nh = st_convex_hull(nm1)\nThe resulting layer is shown in red in Figure 8.18:\nplot(st_geometry(nm1)) plot(st_geometry(h), add = TRUE, border = \"red\")\nFigure 8.18: Convex hull polygons for two counties in New Mexico\n\nHow can we calculate the convex hull of all polygons in nm1 (Figure 8.19)?\n\nFigure 8.19: Convex Hull of multiple polygons\nHere is another question to practice the geometric operations we learned in this chapter. Suppose we build a tunnel, 10 km�� wide, between the centroids of \"Harding\" and \"Sierra\" counties in New Mexico. Which counties does the tunnel go through? The following code gives the result. Take a moment to go over it and make sure you understand what happens in each step:\nw = nm[nm$NAME_2 %in% c(\"Harding\", \"Sierra\"), ] w_ctr = st_centroid(w) w_ctr_buf = st_buffer(w_ctr, dist = 5000) w_ctr_buf_u = st_combine(w_ctr_buf) w_ctr_buf_u_ch = st_convex_hull(w_ctr_buf_u) nm_w = nm[w_ctr_buf_u_ch, ] nm_w$NAME_2 ## [1] \"Harding\"    \"San Miguel\" \"Guadalupe\"  \"Torrance\"   \"Socorro\"    ## [6] \"Lincoln\"    \"Sierra\"\nFigure 8.20 shows the calculated tunnel geometry and highlights the counties that the tunnel goes through. The 4th expression uses the text function to draw text labels. The text function accepts the matrix of coordinates, where labels should be drawn (in this case, county centroid coordinates), and the corresponding character vector of lables. In this case, the labels are county names (nm_w$NAME_2). (Note that in case the labels are numeric, such as in Figure 8.7, then we must convert them to character using as.character for them to be displayed using the text function.)\nplot(st_geometry(nm_w), border = NA, col = \"lightblue\") plot(st_geometry(nm), add = TRUE) plot(st_geometry(w_ctr_buf_u_ch), add = TRUE) text(st_coordinates(st_centroid(nm_w)), nm_w$NAME_2)\nFigure 8.20: Tunnel between \"Sierra\" and \"Harding\" county centroids\nHow is the area of the \"tunnel\" divided between the various counties that it crosses? We can use st_intersection (Section 8.3.4.6) to calculate all intersections between the tunnel polygon w_ctr_buf_u_ch, and the county polygons nm_w. Since we already know that the tunnel (w_ctr_buf_u_ch) intersects with each of the seven polygons in nm_w, the result of the intersection is of the same length, and in the same order, as the corresponding geometries in nm_w:\nint = st_intersection(w_ctr_buf_u_ch, nm_w) int ## Geometry set for 7 features  ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: -677075.1 ymin: -1293982 xmax: -340138.8 ymax: -1002634 ## Projected CRS: US National Atlas Equal Area ## First 5 geometries: ## POLYGON ((-359510.4 -1013406, -348484.4 -100391... ## POLYGON ((-430575.6 -1074562, -359510.4 -101340... ## POLYGON ((-484643 -1121091, -430575.6 -1074562,... ## POLYGON ((-545452.3 -1173421, -484643 -1121091,... ## POLYGON ((-638440.3 -1253443, -546193.4 -117405...\nTherefore, we can divide the area (Section 8.3.2.2) of each county intersection, by the total area of the tunnel, to get the proportion of tunnel area in each county:\narea = st_area(int) area ## Units: [m^2] ## [1]  199064581  872145769  813577715  702562404 1119738156  108077571  575538789\nprop = area / sum(area) prop ## Units: [1] ## [1] 0.04533773 0.19863456 0.18529546 0.16001130 0.25502469 0.02461508 0.13108118\nThe proportions can be displayed as text labels, using the text function (Figure 8.21):\nplot(st_geometry(nm_w), border = \"darkgrey\") plot(int, col = hcl.colors(7, \"Set3\"), border = \"grey\", add = TRUE) text(st_coordinates(st_centroid(int)), paste0(round(prop, 2)*100, \"%\"))\nFigure 8.21: Proportion of tunnel area within each county"
  },
  {
    "objectID": "ch8.html#vector-layer-aggregation",
    "href": "ch8.html#vector-layer-aggregation",
    "title": "11  Geometric operations with vector layers",
    "section": "11.5 Vector layer aggregation",
    "text": "11.5 Vector layer aggregation\nWe don't always want to dissolve all features into a single geometry (Section 8.3.4.3). Sometimes, we need to dissolve each group of geometries, whereas groups are specified by attribute or by location. To demonstrate dissolving by attribute, also known as aggregation, let's take a subset of county with the counties of just Arizona and Utah states:\ns = county[county$NAME_1 %in% c(\"Arizona\", \"Utah\"), ]\nThe selected counties are shown in Figure 8.22:\nplot(s[, \"NAME_1\"], key.width = lcm(3))\nFigure 8.22: Subset of two states from county\nAs shown previously (Section 8.3.4.3), we can dissolve all features into a single geometry with st_union:\ns1 = st_union(s) s1 ## Geometry set for 1 feature  ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: -1389076 ymin: -1470784 xmax: -757960.3 ymax: -235145.7 ## Projected CRS: US National Atlas Equal Area ## POLYGON ((-852411.9 -1350402, -852611 -1352512,...\nThe dissolved geometry is shown in Figure 8.23:\nplot(s1)\nFigure 8.23: Union of all counties in s\nAggregating/dissolving by attributes can be done with aggregate31, which accepts the following arguments:\n\nx—The sf layer being dissolved\nby—A corresponding data.frame determining the groups\nFUN—The function to be applied on each attribute in x\n\nFor example, the following expression dissolves the layer s, summing the area attribute, by state:\ns2 = aggregate(s[, \"area\"], st_drop_geometry(s[, \"NAME_1\"]), sum) s2 ## Simple feature collection with 2 features and 2 fields ## Attribute-geometry relationship: 0 constant, 1 aggregate, 1 identity ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: -1389076 ymin: -1470784 xmax: -757960.3 ymax: -235145.7 ## Projected CRS: US National Atlas Equal Area ##    NAME_1            area                       geometry ## 1 Arizona 295423.1 [km^2] POLYGON ((-852411.9 -135040... ## 2    Utah 219634.4 [km^2] POLYGON ((-1011317 -819521....\nThe result is shown in Figure 8.24:\nplot(s2[, \"area\"])\nFigure 8.24: Union by state name of s"
  },
  {
    "objectID": "ch8.html#join-by-attributes",
    "href": "ch8.html#join-by-attributes",
    "title": "11  Geometric operations with vector layers",
    "section": "11.6 Join by attributes",
    "text": "11.6 Join by attributes\nAttaching new attributes to a vector layer from a table, based on common attribute(s), is known as a non-spatial join, or join by attributes. Joining by attributes works exactly the same way as a join between two tables, e.g., using the merge function (Section 4.6). The difference is just that the \"left\" table, x, is an sf layer, instead of a data.frame. Using merge to join an sf layer with a data.frame is analogous to the \"Join attributes from a table\" workflow in ArcGIS (Figure 8.25).\nFigure 8.25: Join by attributes in ArcGIS\nIn the next example we will join county-level demographic data, from CO-EST2012-Alldata.csv, with the county layer. The join will be based on the common Federal Information Processing Standards (FIPS) code of each county.\nFirst, let's read the CO-EST2012-Alldata.csv file into a data.frame named dat. This file contains numerous demographic variables, on the county level, in the US:\ndat = read.csv(\"CO-EST2012-Alldata.csv\")\nNext, we subset the columns we are interested in, so that it is easier to display the table:\n\nSTATE—State code\nCOUNTY—County code\nCENSUS2010POP—Population size in 2010\n\nThe first two columns, STATE and COUNTY, contain the state and county components of the FIPS code, which we will use to join the data. The third column, CENSUS2010POP, contains our variable of interest, which we want to attach to the county layer.\ndat = dat[, c(\"STATE\", \"COUNTY\", \"CENSUS2010POP\")] head(dat) ##   STATE COUNTY CENSUS2010POP ## 1     1      0       4779736 ## 2     1      1         54571 ## 3     1      3        182265 ## 4     1      5         27457 ## 5     1      7         22915 ## 6     1      9         57322\nRecords where COUNTY code is 0 are state sums, i.e. sub-totals. We need to remove the state sums and keep just the county-level records:\ndat = dat[dat$COUNTY != 0, ] head(dat) ##   STATE COUNTY CENSUS2010POP ## 2     1      1         54571 ## 3     1      3        182265 ## 4     1      5         27457 ## 5     1      7         22915 ## 6     1      9         57322 ## 7     1     11         10914\nThe FIPS code in the county layer is a character value with five digits, where the first two digits are the state code and the last three digits are the county code. When necessary, leading zeros are added. For example, state code 9 and county code 5 is encoded as \"09005\".\ncounty$FIPS[1:6] ## [1] \"09005\" \"09003\" \"09013\" \"09015\" \"06093\" \"06015\"\nwhile the dat table contains separate state and county codes as numeric values:\ndat$STATE[1:10] ##  [1] 1 1 1 1 1 1 1 1 1 1\ndat$COUNTY[1:10] ##  [1]  1  3  5  7  9 11 13 15 17 19\nTo get the corresponding county FIPS codes in dat, we need to:\n\nStandardize the state code to a two-digit code\nStandardize the county code to three-digit code\nPaste the state code and the county code, to obtain the five-digit FIPS code\n\nThe formatC function can be used to format numeric values into different formats, using different \"scenarios.\" The \"add leading zeros\" scenario is specified using width=n, where n is the required number of digits, and flag=\"0\". Therefore:\ndat$STATE = formatC(dat$STATE, width = 2, flag = \"0\") dat$COUNTY = formatC(dat$COUNTY, width = 3, flag = \"0\") dat$FIPS = paste0(dat$STATE, dat$COUNTY)\nNow we have a column named FIPS, with FIPS codes in exactly the same format as in the county layer:\nhead(dat) ##   STATE COUNTY CENSUS2010POP  FIPS ## 2    01    001         54571 01001 ## 3    01    003        182265 01003 ## 4    01    005         27457 01005 ## 5    01    007         22915 01007 ## 6    01    009         57322 01009 ## 7    01    011         10914 01011\nThis means we can join the county layer with the dat table, based on the common column named FIPS:\ncounty = merge(county, dat[, c(\"FIPS\", \"CENSUS2010POP\")], by = \"FIPS\", all.x = TRUE) county ## Simple feature collection with 3103 features and 6 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -2031903 ymin: -2116922 xmax: 2516534 ymax: 732304.6 ## Projected CRS: US National Atlas Equal Area ## First 10 features: ##     FIPS  NAME_1   NAME_2 TYPE_2            area CENSUS2010POP ## 1  01001 Alabama  Autauga County 1562.805 [km^2]         54571 ## 2  01003 Alabama  Baldwin County 4247.589 [km^2]        182265 ## 3  01005 Alabama  Barbour County 2330.135 [km^2]         27457 ## 4  01007 Alabama     Bibb County 1621.356 [km^2]         22915 ## 5  01009 Alabama   Blount County 1692.125 [km^2]         57322 ## 6  01011 Alabama  Bullock County 1623.924 [km^2]         10914 ## 7  01013 Alabama   Butler County 2013.066 [km^2]         20947 ## 8  01015 Alabama  Calhoun County 1591.091 [km^2]        118572 ## 9  01017 Alabama Chambers County 1557.054 [km^2]         34215 ## 10 01019 Alabama Cherokee County 1549.770 [km^2]         25989 ##                          geometry ## 1  MULTIPOLYGON (((1225972 -12... ## 2  MULTIPOLYGON (((1200268 -15... ## 3  MULTIPOLYGON (((1408158 -13... ## 4  MULTIPOLYGON (((1207082 -12... ## 5  MULTIPOLYGON (((1260171 -11... ## 6  MULTIPOLYGON (((1370531 -12... ## 7  MULTIPOLYGON (((1280245 -13... ## 8  MULTIPOLYGON (((1313695 -11... ## 9  MULTIPOLYGON (((1374433 -12... ## 10 MULTIPOLYGON (((1333380 -10...\nNote that we are using a left join, therefore the county layer retains all of its records, whether or not there is a match in the dat table (Section 4.6.2). Features in county that do not have a matching FIPS value in dat get NA in the new CENSUS2010POP column.\nA map of the new CENSUS2010POP attribute, using the default equal breaks, is shown in Figure 8.26:\nplot(county[, \"CENSUS2010POP\"])\nFigure 8.26: Population size per county in the US (equal breaks)\nAlmost all counties fall into the first category, therefore the map is uniformely colored and not very informative. A map using quantile breaks (Figure 8.27) reveals the spatial pattern of population sizes more clearly:\nplot(county[, \"CENSUS2010POP\"], breaks = \"quantile\")\nFigure 8.27: Population size per county in the US (quantile breaks)\nAnother issue with the map is that county population size also depends on county area, which can make the pattern misleading in case when county area sizes are variable (which they are). To safely compare the counties we need to standardize population size by county area. In other words, we need to calculate population density:\ncounty$density = county$CENSUS2010POP / county$area\nNote how the measurement units (km−2��−2, i.e., number of people per km2��2) for the new column are automatically determined based on the inputs:\nhead(county$density) ## Units: [1/km^2] ## [1] 34.91863 42.91023 11.78344 14.13323 33.87575  6.72076\nThe map of population densities per county is shown in Figure 8.28:\nplot(county[, \"density\"], breaks = \"quantile\")\nFigure 8.28: Population density in the US, quantile breaks\n\nHow many features in county did not have a matching FIPS code in dat? What are their names?\n\n\nHow many features in dat do not have a matching FIPS code in county?\n\nWe can also calculate the average population density in the US, by dividing the total population by the total area:\nsum(county$CENSUS2010POP, na.rm = TRUE) / sum(county$area) ## 39.2295 [1/km^2]\nThis is close to the population density in 2010 according to Wikipedia, which is 40.015.\nSimply averaging the density column gives an overestimation, because all counties get equal weight while in reality the smaller counties are more dense:\nmean(county$density, na.rm = TRUE) ## 93.87977 [1/km^2]"
  },
  {
    "objectID": "ch8.html#recap-main-data-structures",
    "href": "ch8.html#recap-main-data-structures",
    "title": "11  Geometric operations with vector layers",
    "section": "11.7 Recap: main data structures",
    "text": "11.7 Recap: main data structures\nTable 8.1 summarizes the main data structures we learn in this book.\n\n\n\n\n\nTable 8.1: Main data structures in the book\n\n\nCategory\nClass\nChapter\n\n\nVector\nnumeric, character, logical\n2\n\n\nDate\nDate\n3\n\n\nTable\ndata.frame\n4\n\n\nMatrix\nmatrix\n5\n\n\nArray\narray\n5\n\n\nRaster\nstars\n5\n\n\nVector layer\nsfg, sfc, sf\n7\n\n\nUnits\nunits\n8\n\n\nList\nlist\n11\n\n\nGeostatistical model\ngstat\n12\n\n\nVariogram model\nvariogramModel\n12"
  },
  {
    "objectID": "ch9.html#aims",
    "href": "ch9.html#aims",
    "title": "12  Geometric operations with rasters",
    "section": "12.1 Aims",
    "text": "12.1 Aims\nOur aims in this chapter are:\n\nMake changes in the geometric component of rasters:\n\nMosaicking\nResampling\nReprojecting\n\nApply focal filters on a raster\n\nWe will use the following R packages:\n\nstars\nunits"
  },
  {
    "objectID": "ch9.html#mosaicking-rasters",
    "href": "ch9.html#mosaicking-rasters",
    "title": "12  Geometric operations with rasters",
    "section": "12.2 Mosaicking rasters",
    "text": "12.2 Mosaicking rasters\nIn the next few examples, we will prepare a Digital Elevation Model (DEM) raster of Haifa, by mosaicking, subsetting and reprojecting (Section 9.3).\nWe start with two 5°×5°5°×5° tiles of elevation data from the Shuttle Radar Topography Mission (SRTM) dataset. The tiles are included as two .tif files in the sample files (Appendix A):\nlibrary(stars) dem1 = read_stars(\"srtm_43_06.tif\") dem2 = read_stars(\"srtm_44_06.tif\")\nAs shown in Figure 9.1, the tiles cover the area of northern Israel, including Haifa:\nplot(dem1, breaks = \"equal\", col = terrain.colors(10), axes = TRUE) plot(dem2, breaks = \"equal\", col = terrain.colors(10), axes = TRUE)\nFigure 9.1: Two elevation tiles from the SRTM dataset\nUsing the st_bbox and dim functions (Section 5.3.8.3), we can see that the two rasters indeed comprise two tiles of the same \"large\" dataset. First, we can see that the dimensions (number of rows and columns) of the two rasters are identical:\ndim(dem1) ##    x    y  ## 6000 6000 dim(dem2) ##    x    y  ## 6000 6000\nSecond, we can see that their extents of the rasters are aligned. The y-axis (i.e., latitude) extent of the rasters is the same (30-35). The x-axis (i.e., longitude) extents of the rasters are side-by-side (30-35 and 35-40):\nst_bbox(dem1) ## xmin ymin xmax ymax  ##   30   30   35   35 st_bbox(dem2) ## xmin ymin xmax ymax  ##   35   30   40   35\nRasters can be mosaicked using the st_mosaic function. The st_mosaic function accepts two or more stars objects—such as dem1 and dem2—and returns a combined raster:\ndem = st_mosaic(dem1, dem2) names(dem) = \"elevation\"\nNote that the st_moisaic function can be used to combine rasters even if they are not aligned, such as in this example. In case the rasters are not aligned, resampling (Section 9.2) take place.\nThe mosaicked DEM is shown in Figure 9.2:\nplot(dem, axes = TRUE, breaks = \"equal\", col = terrain.colors(10))\nFigure 9.2: Mosaicked raster\nThe extent of the resulting raster covers the extents of both inputs:\nst_bbox(dem) ## xmin ymin xmax ymax  ##   30   30   40   35\nFor the next examples, we \"crop\" the dem raster according to an extent of 0.25°×0.25°0.25°×0.25° around Haifa (Figure 9.3).\nFigure 9.3: An 0.25°×0.25°0.25°×0.25° rectangular extent\nThe [ operator can be used to crop the raster (Section 6.2):\ndem = dem[, 5687:6287, 2348:2948]\nThe result is shown in Figure 9.4:\nplot(dem, axes = TRUE, breaks = \"equal\", col = terrain.colors(10))\nFigure 9.4: Cropped raster\nNote that in this example, we needed to know in advance the row and column indices of the extent we are interested in cropping. Later on (Section 10.1), we are going to learn how to crop a raster based on an existing vector layer, such as the bounding box of a buffer of 0.125°0.125° around a point layer representing the city of Haifa, which is a much more practical approach."
  },
  {
    "objectID": "ch9.html#raster-resampling",
    "href": "ch9.html#raster-resampling",
    "title": "12  Geometric operations with rasters",
    "section": "12.3 Raster resampling",
    "text": "12.3 Raster resampling\n\n12.3.1 The st_warp function\nRaster resampling is the process of transferring raster values from the original grid to a different grid (Figure 9.5). Resampling is onften required for:\n\nAligning several input rasters that come from different sources to the same grid, so that they can be subject to spatial operators such as raster algebra (Sections 6.4 and 6.6.1)\nReducing the resolution of very detailed rasters, so that they are more convenient to work with in terms of processing time and memory use\n\nFigure 9.5: Raster resampling (https://www.safe.com/transformers/raster-resampler/)\nTo demonstrate resampling, we will create a custom stars grid, using the same extent as the dem raster (st_bbox(dem)), but a coarser resolution. The new resolution is 0.002°0.002°, which is ~2.4 times the original resolution of 0.00083°0.00083°. The grid is created using st_as_stars:\ngrid = st_as_stars(st_bbox(dem), dx = 0.002, dy = 0.002) grid ## stars object with 2 dimensions and 1 attribute ## attribute(s): ##     values   ##  Min.   :0   ##  1st Qu.:0   ##  Median :0   ##  Mean   :0   ##  3rd Qu.:0   ##  Max.   :0   ## dimension(s): ##   from  to  offset  delta refsys point values x/y ## x    1 251 34.7383  0.002 WGS 84    NA   NULL [x] ## y    1 251 33.0442 -0.002 WGS 84    NA   NULL [y]\nRecall that we already used the st_as_stars function to convert a matrix to a stars raster (Section 6.3.3). What we do here is another mode of operation of the st_as_stars function, creating an empty raster given a bbox and the x- and y-axis resolutions dx and dy.\nWe can resample a raster using the st_warp function. The first two parameters of st_warp are:\n\nThe raster to be resampled, where the values come from\nThe raster defining the new grid\n\nHere is the expression to resample the values of the dem raster into the new raster grid:\ndem1 = st_warp(dem, grid)\n\nWhich one of the rasters in Figure 9.5 represents the role of dem and grid, in our case?\n\n\nTry resampling dem to a different grid with an even coarser resulution, such as 0.02, and plot the result\n\nThe original DEM is shown along with the resampled one in Figure 9.6.\nplot(dem, breaks = \"equal\", col = terrain.colors(10), main = \"input (delta=0.0008)\") plot(dem1, breaks = \"equal\", col = terrain.colors(10), main = \"output (delta=0.002)\")\nFigure 9.6: DEM resampled by a factor of 2.4, from 0.0008 (left) to 0.002 (right) resolution\nWhen resampling, the computer needs to decide which pixel value(s) to transfer to each of the \"new\" pixels, defined by the new grid. There are several possible options, known as resampling algorithms or methods. In the next three sections, we are going to demonstrate three common options:\n\nNearest neighbor resampling (the default) (Section 9.2.2)\nBilinear resampling (Section 9.2.3)\nAverage resampling (Section 9.2.4)\n\n\n\n12.3.2 Nearest neighbor resampling\nThe st_warp expression from Section 9.2.1 actually used the nearest neighbor resampling method (method=\"near\"), which is the default:\ndem1 = st_warp(dem, grid, method = \"near\")\nTo understand what actually happens in nearest neighbor resampling, let's take a look at a small part of the raster \"before\" and \"after\" images (Figure 9.7). If you look closely, you can see that the values of the original raster are passed to the resampled raster. What happens when there is more than one pixel of the original raster coinciding with a single pixel in the new grid? How can we decide which value is going to be passed? In nearest neighbor resampling, the new raster pixels get the value from the nearest pixel of the original raster. Note that some of the values may be \"lost\" this way, since they were not passed on to the new raster32.\nFigure 9.7: Nearest neighbor resampling\n\n\n12.3.3 Bilinear resampling\nBilinear resampling is another resampling method. In bilinear resampling, each new raster cell gets a weighted average of four nearest cells from the input, rather than just one. Bilinear resampling is specified with method=\"bilinear\" in st_warp. Note that use_gdal=TRUE needs to be specified when using any method other than method=\"near\", otherwise the method argument is ignored:\ndem1 = st_warp(dem, grid, method = \"bilinear\", use_gdal = TRUE)\nWith bilinear resampling, the output raster is \"smoothed,\" containing new values which are averages of (some of) the values in the original raster (Figure 9.8).\nFigure 9.8: Bilinear resampling\n\n\n12.3.4 Average resampling\nAnother useful method is the average resampling method, where each new cell gets the weighted average of all overlapping input cells:\ndem1 = st_warp(dem, grid, method = \"average\", use_gdal = TRUE)\nThe result of average resampling is shown in Figure 9.9:\nFigure 9.9: Average resampling\nIn addition to \"near\", \"bilinear\", and \"average\", the st_warp function supports other resampling methods, including: \"cubic\", \"cubicspline\", \"lanczos\", \"mode\", \"max\", \"min\", \"med\", \"q1\" and \"q3\".\nBilinear resampling may be preferred when the result is primarily used for visualization, because the result appears smoother. Nearest neighbor resampling, however, is preferable when we are using the result for further analysis, because the original values are preserved. When the input raster is categorical, such as a raster with land cover classes 1, 2, 3, etc., nearest neighbor resampling is the only valid resampling option, because averaging category IDs makes no sense.\n\nIn what situations do you think the \"average\" resampling method is mostly appropriate, while \"near\" and \"bilinear\" are not?"
  },
  {
    "objectID": "ch9.html#raster-reprojection",
    "href": "ch9.html#raster-reprojection",
    "title": "12  Geometric operations with rasters",
    "section": "12.4 Raster reprojection",
    "text": "12.4 Raster reprojection\nRaster reprojection is more complex than vector layer reprojection (Section 7.9.2). In addition to transforming (pixel) coordinates, like in vector layer reprojection, raster reprojection requires a resampling step in order to \"arrange\" the transformed values back into a regular grid (Figure 9.14).\nIn terms of code, the st_warp function, which we used for resampling (Section 9.2), is used for raster reprojection too. The only difference is that, in raster reprojection, the \"destination\" grid is specified in a different CRS.\nFor example, the following expression reprojects the DEM of Haifa from WGS84 (4326) to UTM (32636), using the nearest neighbor resampling method. Note that, in this example, we are not passing a stars object with the destination grid. Instead, we are letting the function to automatically generate the new grid, only specifying the destination CRS (crs=32636) and resolution (cellsize=90):\ndem = st_warp(dem, crs = 32636, cellsize = 90)\nThe original raster (in WGS84) and the reprojected one (in UTM) are shown in Figure 9.10.\nFigure 9.10: Original (left, in WGS84) and reprojected (right, in UTM) dem raster\nNote that the coordinate units in the reprojected raster (Figure 9.10) are no longer degrees, but meters. Also, the area contaning non-missing values is slightly rotated compared to the input, because the WGS84 and UTM systems are not parallel, at least in this particular location.\nA zoomed-in view (Figure 9.11) of the original raster and the new grid demonstrates that the two are not parallel. Again, note that this time the new grid is in a different CRS, which is why the two grids are not parallel to each other (Figure 9.7–9.9).\nFigure 9.11: The reprojected raster grid (UTM, black) and the original raster grid (WGS84, in red), displayed in UTM\nAs another example, let's reproject the MOD13A3_2000_2019.tif, from its sinusoidal projection to a projection more suitable for the specific region, such as ITM (Table 7.4). First, let's import the raster from the GeoTIFF file:\nr = read_stars(\"MOD13A3_2000_2019.tif\") names(r) = \"NDVI\"\nThen, we can reproject the raster using st_warp. This time we specify just the destination CRS (crs=2039), letting the function automatically determine the resolution:\nr_itm = st_warp(r, crs = 2039)\nThe original and reprojected rasters are shown in Figure 9.12:\nplot(r[,,,1,drop=TRUE], key.pos = 4, axes = TRUE, col = hcl.colors(11, \"Spectral\"), main = \"input (Sinusoidal)\") plot(r_itm[,,,1,drop=TRUE], key.pos = 4, axes = TRUE, col = hcl.colors(11, \"Spectral\"), main = \"output (ITM)\")\nFigure 9.12: Reprojection of the MODIS NDVI raster from Sinusoidal (left) to ITM (right)\nTo see the process of reprojection more clearly, let's examine a small subset of the NDVI raster:\nu = r[, 100:105, 200:207, 2, drop = TRUE] u_itm = st_warp(u, crs = 2039)\nThe original and reprojected raster subsets are shown in Figure 9.13.\nFigure 9.13: Reprojection of a small subset of the MODIS NDVI raster (left) to ITM (right)\nWhat happens in the reprojection can be thought of as a two-step process (Figure 9.14). In the first step, the pixel outlines are reprojected as if they were polygons (Section 7.9.2), which results in an irregular grid. The grid is then resampled (Section 9.2) to form a regular grid, so that it can be represented by a raster once again.\nFigure 9.14: Reprojection process: the original raster (left), the reprojected raster cells as polygons (middle) and the resampled reprojected raster (right)"
  },
  {
    "objectID": "ch9.html#focal-filters",
    "href": "ch9.html#focal-filters",
    "title": "12  Geometric operations with rasters",
    "section": "12.5 Focal filters",
    "text": "12.5 Focal filters\n\n12.5.1 Introduction\nSo far, we only dealt with arithmetic operations that address the values of each per pixel in isolation from neighboring pixels, such as in raster algebra (Sections 6.4 and 6.6.1). Another class of raster operations is where the calculation of each pixels depends on values of neighboring cells.\nThe most prominent example of a raster calculation based on neighboring cells is moving window calculations, also known as applying a focal filter. With a moving window calculation, raster values are transformed based on the values from a neighborhood surrounding each pixel. The functions applied on the neighborhood are varied, from simple functions such as mean for a low-pass filter (Section 9.4.2) to more complex functions, such as those used to calculate topographic slope and aspect (Section 9.4.4–9.4.5).\nFor example, a 3×33×3 mean filter applied on a raster results in a new raster, where the values are averages of 3×33×3 neighborhoods centered on that pixel. In Figure 9.15, the highlghted value in the output on the right (18.7) is the average of the highlighted 3×33×3 neighborhood of the input on the left:\nmean(c(27, 8, 22, 16, 21, 16, 6, 44, 8)) ## [1] 18.66667\nFigure 9.15: Focal filter (http://courses.washington.edu/gis250/lessons/raster_analysis1/index.html)\n\n\n12.5.2 Low pass filter\n\n12.5.2.1 What is a low pass filter?\nThe purpose of the mean, or low-pass, filter (Figure 9.15) is to produce a smoothed image, where extreme values (possibly noise) are cacelled out. For example, the result of applying a 3×33×3 mean filter on a uniform image with one extreme value is shown in Figure 9.16.\nFigure 9.16: Low pass filter excample (http://desktop.arcgis.com/en/arcmap/10.3/tools/spatial-analyst-toolbox/how-filter-works.htm)\n\nHow was the value of 5.4 obtained, in the result shown in Figure 9.16?\n\nThe stars package does not, at the moment, contain a function for focal filtering33. As an exercise, we are going to create our own function for focal filtering. For simplicity, we will restrict ourselves to the case where the focal \"window\" is 3×33×3 pixels—which is the most common case.\nOur working plan is as follows:\n\nWrite a function named get_neighbors that accepts a position of the focal cell (row & column) in a matrix, and returns the 9 values of its 3×33×3 pixel neighborhood\nWrite another function named focal2 that accepts a two-dimensional stars object and a function fun, iterates over the cells and applies fun on all 3×33×3 pixel neighborhoods extracted using get_heighbors\n\n\n\n12.5.2.2 The get_neighbors function\nWe start with a function that accepts a position (row & column) in a matrix and returns a numeric vector with the 3×33×3 neighborhood, hereby named get_neighbors. The function accepts a matrix m and a position pos. The pos argument is a vector of length two, of the form c(row,column). The function extracts the 9 values in the respective 3×33×3 neighborhood and returns them as a vector of length 9:\nget_neighbors = function(m, pos) {   i = (pos[1]-1):(pos[1]+1)   j = (pos[2]-1):(pos[2]+1)   as.vector(t(m[i, j])) }\nFor example, suppose we have a 5×55×5 matrix m:\nm = matrix(1:25, ncol = 5, nrow = 5) m ##      [,1] [,2] [,3] [,4] [,5] ## [1,]    1    6   11   16   21 ## [2,]    2    7   12   17   22 ## [3,]    3    8   13   18   23 ## [4,]    4    9   14   19   24 ## [5,]    5   10   15   20   25\nUsing get_neighbors, we can get the values of just about any 3×33×3 neighborhood except for the outermost rows and columns (see below). For example, the following expression returns the values of the neighborhood centered on row 3, column 4:\nget_neighbors(m, c(3, 4)) ## [1] 12 17 22 13 18 23 14 19 24\nHow does the get_neighbors function work? The function first calculates the required range of rows and columns:\npos = c(3, 4)\ni = (pos[1]-1):(pos[1]+1)  # Rows i ## [1] 2 3 4\nj = (pos[2]-1):(pos[2]+1)  # Columns j ## [1] 3 4 5\nThen, the function extracts the corresponding matrix subset:\nm[i, j] ##      [,1] [,2] [,3] ## [1,]   12   17   22 ## [2,]   13   18   23 ## [3,]   14   19   24\ntransposes it:\nt(m[i, j]) ##      [,1] [,2] [,3] ## [1,]   12   13   14 ## [2,]   17   18   19 ## [3,]   22   23   24\nand converts to a vector:\nas.vector(t(m[i, j])) ## [1] 12 17 22 13 18 23 14 19 24\nTransposing is necessary so that the matrix values are returned by row, rather than the default by column (Section 5.1.4.1).\nNote that out function is not designed to operate on the matrix edges, where the 3×33×3 neighborhood is incomplete. For example, the following expression produces an error:\nget_neighbors(m, c(1, 5)) ## Error in m[i, j]: subscript out of bounds\n\n\n12.5.2.3 The focal2 function\nNow, let's see how we can use the get_neighbors function to apply a focal filter on a raster. We will use the dem.tif small DEM for demonstration:\nx = read_stars(\"dem.tif\")\nFirst, we create a copy of the raster, named template. The template raster will be used as a \"template\" when converting the filtered matrix back to a stars object:\ntemplate = x\nNext, we extract the raster values as a matrix:\ninput = t(template[[1]])\nNote that the function relies on the fact that the stars object has just two dimensions (x and y), in which case input is going to be a matrix. The matrix is transposed, using t, to maintain the right orientation of the values matrix (Figure 6.11). This is important when using functions that distinguish between the north-south and east-west directions, topographic aspect (Section 9.4.5).\nNext, we create another matrix to hold the output values. The values are initially set to NA:\noutput = matrix(NA, nrow = nrow(input), ncol = ncol(input))\nNow comes the actual computation. We are using two for loops to go over all raster cells, excluding the first and last rows and columns. For each cell, we:\n\nextract the 3×33×3 neighborhood [i,j],\napply a function—such as mean, in this case—on the vector of extracted values, and\nplace the result into the corresponding cell [i,j] in the output.\n\nThe complete code of the for loops is as follows:\nfor(i in 2:(nrow(input) - 1)) {   for(j in 2:(ncol(input) - 1)) {     v = get_neighbors(input, c(i, j))     output[i, j] = mean(v, na.rm = TRUE)   } }\nNote that the function starts at row i=2 and ends at row i=nrow(input)-1. Similarly, it starts at column j=2 and ends at j=ncol(input)-1.\nIn the end, when both for loops have been completed, the output matrix contains the new, filtered, raster values. What is left to be done is to put the matrix of new values into the template, to get back a stars object. We are using t once again, to transform the matrix back into the \"stars\" arrangement (Figure 6.11):\ntemplate[[1]] = t(output)\nThe original image (x) and the filtered image (template) are shown in Figure 9.17. The figure highlights one 3×33×3 neighborhood in the input, and the corresponding average of that neighborhood in the output34.\ncol = terrain.colors(5) plot(x, text_values = TRUE, col = col, key.pos = 4, reset = FALSE, main = \"input\") plot(st_geometry(st_as_sf(x, na.rm = FALSE)), border = \"grey\", add = TRUE) plot(st_geometry(st_as_sf(x[,4:6,6:8])), lwd = 2, add = TRUE) plot(round(template, 1), text_values = TRUE, col = col, key.pos = 4, reset = FALSE, main = \"output\") plot(st_geometry(st_as_sf(template, na.rm = FALSE)), border = \"grey\", add = TRUE) plot(st_geometry(st_as_sf(template[,5,7])), lwd = 2, add = TRUE)\nFigure 9.17: Focal filter with the mean function (left: input, right: result)\n\nWhy do the outermost rows and columns in Figure 9.17 appear empty? Which value do these pixels contain, and where did it come from?\n\nLet's manually check the calculation of the 3×33×3 neighborhood highlighted in Figure 9.17:\nt(x[[1]][4:6,6:8]) ##      [,1] [,2] [,3] ## [1,]  146    6    6 ## [2,]  340  163   13 ## [3,]  383  448  152\nmean(t(x[[1]][4:6,6:8])) ## [1] 184.1111\n\nWhy do you think we got NaN values in some of the cells? Can you simulate the situation to see how an NaN values is produced? What can we do to get NA, instead, in those pixes that get NaN?\n\nWrapping up out code in a function, called focal2, can be done as follows. The input raster and the function are replaced with parameters named r and fun, respectively:\nfocal2 = function(r, fun) {   template = r   input = t(template[[1]])   output = matrix(NA, nrow = nrow(input), ncol = ncol(input))   for(i in 2:(nrow(input) - 1)) {     for(j in 2:(ncol(input) - 1)) {       v = get_neighbors(input, c(i, j))       output[i, j] = fun(v)     }   }   template[[1]] = t(output)   return(template) }\nHow can we pass additional parameters to the function we use, such as na.rm=TRUE for mean? The special dots ... argument is used for that. Now, any additional argument(s) passed to focal2 (such as na.rm=TRUE) will be passed on as additional argument(s) to fun:\nfocal2 = function(r, fun, ...) {   template = r   input = t(template[[1]])   output = matrix(NA, nrow = nrow(input), ncol = ncol(input))   for(i in 2:(nrow(input) - 1)) {     for(j in 2:(ncol(input) - 1)) {       v = get_neighbors(input, c(i, j))       output[i, j] = fun(v, ...)     }   }   template[[1]] = t(output)   return(template) }\nNow that we have a custom focal filter function focal2, let's try to apply a different filter, such as a maximum filter:\nx_max = focal2(x, max, na.rm = TRUE) ## Warning in fun(v, ...): no non-missing arguments to max; returning -Inf  ## Warning in fun(v, ...): no non-missing arguments to max; returning -Inf\nThe reason for the warnings produced by the above expression is that max applied on an empty vector gives -Inf.\nt(x_max[[1]]) ##       [,1] [,2] [,3] [,4] [,5] [,6] [,7] ##  [1,]   NA   NA   NA   NA   NA   NA   NA ##  [2,]   NA -Inf -Inf    6    9    9   NA ##  [3,]   NA   61   61    9   10   16   NA ##  [4,]   NA  132  132  132   11   27   NA ##  [5,]   NA  254  254  254  146   27   NA ##  [6,]   NA  254  340  340  340  163   NA ##  [7,]   NA  254  383  448  448  448   NA ##  [8,]   NA  253  383  448  448  448   NA ##  [9,]   NA  253  383  448  448  448   NA ## [10,]   NA   NA   NA   NA   NA   NA   NA\nTo get NA instead, we can use a slightly more complex function that first checks if particular neighborhood contains any non-NA values, any only then applies max:\nf = function(x) if(all(is.na(x))) NA else max(x, na.rm = TRUE) x_max = focal2(x, f)\nRecall that we used the same principle when applying the min and max functions with st_apply (Section 6.6.1.4).\nThe resulting raster x_max is shown in Figure 9.18. Indeed, every pixel value in the output raster is the maximal value among the values in its 3×33×3 neighborhood:\ncol = terrain.colors(10) plot(x, text_values = TRUE, breaks = \"equal\", col = col, key.pos = 4, reset = FALSE, main = \"input\") plot(st_geometry(st_as_sf(x, na.rm = FALSE)), border = \"grey\", add = TRUE) plot(st_geometry(st_as_sf(x[,4:6,6:8])), lwd = 2, add = TRUE) plot(x_max, breaks = \"equal\", text_values = TRUE, col = col, key.pos = 4, reset = FALSE, main = \"output\") plot(st_geometry(st_as_sf(x_max, na.rm = FALSE)), border = \"grey\", add = TRUE) plot(st_geometry(st_as_sf(x_max[,5,7])), lwd = 2, add = TRUE)\nFigure 9.18: Focal filter with the max function (left: input, right: result)\nLet's try the focal2 function on another, bigger raster. For example, we can apply a low pass (i.e., mean) filter on the first layer of the MODIS NDVI raster, as follows:\nr_itm1 = r_itm[,,,1,drop=TRUE] r_itm1_mean = focal2(r_itm1, mean, na.rm = TRUE)\nThe original image and the filtered result are shown in Figure 9.19:\nplot(r_itm1, col = hcl.colors(11, \"Spectral\"), main = \"input\") plot(r_itm1_mean, col = hcl.colors(11, \"Spectral\"), main = \"output\")\nFigure 9.19: Low pass filter result\n\nWhy are there NA areas in the raster, even though we used na.rm=TRUE?\n\n\n\n\n12.5.3 Maximum filter\nFor another example, let's reconstruct the l_rec raster (Section 6.5):\nl = read_stars(\"landsat_04_10_2000.tif\") red = l[,,,3, drop = TRUE] nir = l[,,,4, drop = TRUE] ndvi = (nir - red) / (nir + red) names(ndvi) = \"NDVI\" l_rec = ndvi l_rec[l_rec &lt; 0.2] = 0 l_rec[l_rec &gt;= 0.2] = 1\nGiven a raster with 0 and 1 values, such as l_rec, we may want to convert all 0 cells neighboring to a 1 cell to become 1. That way, for instance, the areas of the planted forests we see in the center of the image will be come more continuous, which will make it easier to transform those areas into polygons (Section 10.3.2). This can be achieved with a focal filter and the max function:\nl_rec_focal = focal2(l_rec, max)\nThe original raster and the filtered result are shown in Figure 9.20:\nplot(l_rec, col = c(\"grey90\", \"darkgreen\"), main = \"input\") plot(l_rec_focal, col = c(\"grey90\", \"darkgreen\"), main = \"output\")\nFigure 9.20: \"Buffering\" 1 values in a raster with 0s and 1s, using a focal filter with max\n\n\n12.5.4 Topographic slope\nSo far we saw examples where the focal function is a simple built-in one, such as mean or max. In some cases, it is required to use a more complex function. For example, topographic indices such as slope and aspect employ complex functions where direction matters: each of the nine pixels in the 3×33×3 neignborhood is treated differently. For example, to calculate topographic slope based on elevation values in a 3×33×3 neignborhood, the following function can be used. Note that the slope calulation also depends on raster resolution, which is passed as an additional parameter named res:\nslope = function(x, res) {   dzdx = ((x[3] + 2*x[6] + x[9]) - (x[1] + 2*x[4] + x[7])) / (8 * res)   dzdy = ((x[7] + 2*x[8] + x[9]) - (x[1] + 2*x[2] + x[3])) / (8 * res)   atan(sqrt(dzdx^2 + dzdy^2)) * (180 / pi) }\nWe will not go into details on how the function works. You may refer to the How slope works article in the ArcGIS documentation for an explanation.\nFor example:\nx = c(50, 45, 50, 30, 30, 30, 8, 10, 10) res = 5 slope(x, res)  # 75.25762 ## [1] 75.25766\nThe slope function can be passed to focal2 to apply the slope calculation on the entire dem raster:\ndem_slope = focal2(dem, slope, res = st_dimensions(dem)$x$delta) names(dem_slope) = \"slope\"\nIt is also convenient to set raster units with set_units (Section 8.3.2.2). The units of slope are decimal degrees (°):\nlibrary(units) dem_slope[[1]] = set_units(dem_slope[[1]], \"degree\")\nThe resulting topographic slope raster is shown in the left panel in Figure 9.21.\n\n\n12.5.5 Topographic aspect\nAnother function, as shown below, can be used to calculate topographic aspect:\naspect = function(x, res) {   dzdx = ((x[3] + 2*x[6] + x[9]) - (x[1] + 2*x[4] + x[7])) / 8   dzdy = ((x[7] + 2*x[8] + x[9]) - (x[1] + 2*x[2] + x[3])) / 8   a = (180 / pi) * atan2(dzdy, -dzdx)   if(is.na(a)) return(NA)   if (a &lt; 0) a = 90 - a else      if (a &gt; 90) a = 360 - a + 90 else        a = 90 - a   return(a) }\nFor details on how the function works, see the How aspect works article in the ArcGIS documentation.\nFor example:\nx = c(101, 92, 85, 101, 92, 85, 101, 91, 84) aspect(x)  # 92.64 ## [1] 92.64255\nAgain, the aspect function can be passed to focal2 to apply it on the entire raster:\ndem_aspect = focal2(dem, aspect) names(dem_aspect) = \"aspect\" dem_aspect[[1]] = set_units(dem_aspect[[1]], \"degree\")\nThe resulting topographic aspect raster is shown in the right panel in Figure 9.21:\nplot(dem_slope, breaks = \"equal\", col = rev(hcl.colors(11, \"Spectral\"))) plot(dem_aspect, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"))\nFigure 9.21: Topographic slope (left) and topographic aspect (right)\nNote that our custom focal2+get_neighbors functions are quite minimal, and can be improved in several ways:\n\nBeing able to set neighbor sizes other than 3×33×3\nDealing with the first/last rows and and columns (see Section G)\nDealing with rasters that have more than two dimensions (separate filter per dimension? a three-dimensional filter?)\nMaking the calculation more efficient (e.g., using C/C++ code inside R or using parallel computation)"
  },
  {
    "objectID": "ch10.html#aims",
    "href": "ch10.html#aims",
    "title": "13  Combining rasters and vector layers",
    "section": "13.1 Aims",
    "text": "13.1 Aims\nOur aims in this chapter are to learn how to:\n\nCrop and mask a raster according to a vector layer\nSwitch from vector to raster representation, and vice versa\nCalculate a raster of distances to nearest point\nExtract raster values from locations defined by a vector layer\n\nWe will use the following R packages:\n\nsf\nstars\nunits"
  },
  {
    "objectID": "ch10.html#masking-and-cropping-rasters",
    "href": "ch10.html#masking-and-cropping-rasters",
    "title": "13  Combining rasters and vector layers",
    "section": "13.2 Masking and cropping rasters",
    "text": "13.2 Masking and cropping rasters\n\n13.2.1 Introduction\nMasking a raster means turning pixels values outside of a an area of interest—defined using a polygonal layer—into NA (Figure 10.1). Cropping a raster means deleting whole rows and/or columns, so that raster extent is reduced to a new (smaller) rectangular shape, also according to the extent of a vector layer. The [ operator can be used for masking or masking and cropping (the default).\nFigure 10.1: Masking a raster (http://rpubs.com/etiennebr/visualraster)\n\n\n13.2.2 Masking and cropping\nFor an example of masking and cropping, we will prepare a raster of average NDVI over the period 2000-2019, based on MOD13A3_2000_2019.tif. The following code section combines what we learned in Sections 6.3.2, 6.6.1.3 and 9.3:\nlibrary(stars) r = read_stars(\"MOD13A3_2000_2019.tif\") names(r) = \"NDVI\" r = st_warp(r, crs = 32636) r_avg = st_apply(r, 1:2, mean, na.rm = TRUE) names(r_avg) = \"NDVI\" dates = read.csv(\"MOD13A3_2000_2019_dates2.csv\") dates$date = as.Date(dates$date) r = st_set_dimensions(r, \"band\", values = dates$date, names = \"time\")\nWe will also read a Shapefile with a polygon of Israel borders, named israel_borders.shp:\nborders = st_read(\"israel_borders.shp\")\nFigure 10.2 shows the average NDVI raster and the borders polygon:\nplot(r_avg, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"), reset = FALSE) plot(st_geometry(borders), add = TRUE)\nFigure 10.2: Raster and crop/mask geometry\nMasking and cropping a raster, based on an sf layer, can be done with the [ operator, as follows:\nr_avg = r_avg[borders]\nAs we can see in Figure 10.3, all pixels that were outside of the polygon are now NA (this is called masking). It's difficult to see, but the raster extent is also slightly reduced according to the extent of borders (this is called cropping):\nplot(r_avg, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"), reset = FALSE) plot(st_geometry(borders), add = TRUE)\nFigure 10.3: Raster after cropping and masking\nZooming in on a small portion of the masked raster demonstrates the masking algorithm: pixels whose centroid does not intersect with the polygon are converted to NA (Figure 10.4).\nFigure 10.4: A small portion of the raster r_avg, brefore (left) after (right) cropping and masking\n\n\n13.2.3 Masking-only\nIn case we need the output to keep the same extent as the input, we can mask a raster without cropping. Masking-only is done with the same operator ([), using the (non-default) argument crop=FALSE. To demonstrate the difference between masking+cropping (which we just did) and masking only, consider the following example where r_avg is masked and cropped (r_avg1), or just masked (r_avg2), according to the \"Negev\" administrative area. First we prepare the polygon used for masking and cropping, obtained from a Shapefile named nafot.shp:\nnafot = st_read(\"nafot.shp\") nafot = st_transform(nafot, st_crs(r)) pol = nafot[nafot$name_eng == \"Be'er Sheva\", ]\nThen we produce the masked+cropped (r_avg1) and masked (r_avg2) rasters:\nr_avg1 = r_avg[pol] r_avg2 = r_avg[pol, crop = FALSE]\nAs we can see in Figure 10.5, masking transforms pixel values to NA (left panel) while cropping reduces raster extent by deleting whole rows and columns (right panel).\nplot(r_avg1, key.pos = NULL, reset = FALSE, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"), axes = TRUE, main = \"mask+crop (crop=TRUE, default)\") plot(st_geometry(pol), add = TRUE) plot(st_as_sfc(st_bbox(r_avg1)), border = \"grey\", add = TRUE) plot(r_avg2, key.pos = NULL, reset = FALSE, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"), axes = TRUE, main = \"mask (crop=FALSE)\") plot(st_geometry(pol), add = TRUE) plot(st_as_sfc(st_bbox(r_avg2)), border = \"grey\", add = TRUE)\nFigure 10.5: Cropping and masking (left) vs. masking (right), raster extent is shown in grey\nNote that for plotting the raster extents (grey boxes in Figure 10.5), the above code section uses a combination of st_bbox and st_as_sfc. The combination returns the bounding box of a stars (or sf) layer as an sfc (geometry) object. For example, the following expression returns a geometry column with a single polygon, which is the bounding box of r_avg1:\nst_as_sfc(st_bbox(r_avg1)) ## Geometry set for 1 feature  ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 620563.9 ymin: 3262755 xmax: 735425.7 ymax: 3487847 ## Projected CRS: WGS 84 / UTM zone 36N ## POLYGON ((620563.9 3262755, 735425.7 3262755, 7..."
  },
  {
    "objectID": "ch10.html#vector-layer-raster",
    "href": "ch10.html#vector-layer-raster",
    "title": "13  Combining rasters and vector layers",
    "section": "13.3 Vector layer → raster",
    "text": "13.3 Vector layer → raster\n\n13.3.1 10.2.1 The st_rasterize function\nThe st_rasterize function converts a vector layer to a raster, given two arguments:\n\nsf—The vector layer to convert\ntemplate—A raster \"template\" (if missing, it can be generated automatically)\n\nThe resulting raster retains the original values, from the template, in pixels that do not overlap with the vector layer (Figure 10.6). For pixels that do overlap with the vector layer, the value of the (first) vector layer attribute is \"burned\" into the pixels. The default meaning of the term \"overlap\" in the context of point, line, or polygon geometries, is:\n\nPixels that a point intersects with\nPixels chosen using Bresenham's line algorithm\nPixels whose centroid intersects with the polygon\n\nThe additional parameter options=\"ALL_TOUCHED=TRUE\" can be passed to st_rasterize so that all pixels intersecting with the geometry are considered \"overlapping\" (Figure 10.6).\nFigure 10.6: Rasterizing points, lines and polygons to raster with st_rasterize, using the default algorithms (top) and options=\"ALL_TOUCHED=TRUE\" (bottom).\nBy default, the values are burned sequentially, according to the order of features. Therefore, when there are more than one vector features coinciding with the same pixel, the attribute value of the last feature \"wins.\" Alternatively, we can add up all values of coinciding geometries, using the argument options=\"MERGE_ALG=ADD\" (Section 10.2.3).\n\n\n13.3.2 Rasterizing polygon attributes\nFor an example of rasterizing a polygon layer, let's convert the nafot vector layer to a raster, using r_avg as the template. The attribute which will be \"burned\" into the raster is the Id of the administrative area:\ns = st_rasterize(nafot[, \"Id\"], r_avg)\nThe resulting raster s has the same dimensions of r_avg but different values, as shown in Figure 10.7. We can see that those areas not covered by the nafot layer retained their original value (average NDVI). All pixels that were covered by nafot got the Id attribute value.\nplot(nafot[, \"Id\"], pal = function(n) rep(NA, n), main = 'nafot[, \"Id\"]', border = NA, reset = FALSE, key.pos = NULL, axes = TRUE) plot(nafot[, \"Id\"], pal = function(n) hcl.colors(n, \"Spectral\"), key.pos = NULL, add = TRUE) plot(nafot[, \"Id\"], pal = function(n) rep(NA, n), main = NA, border = NA, reset = FALSE, key.pos = NULL, axes = TRUE) plot(r_avg, breaks = \"equal\", col = hcl.colors(15, \"Spectral\"), main = \"r_avg\", add = TRUE) plot(nafot[, \"Id\"], pal = function(n) rep(NA, n), main = NA, border = NA, reset = FALSE, key.pos = NULL, axes = TRUE) plot(s, breaks = \"equal\", col = hcl.colors(15, \"Spectral\"), main = 'st_rasterize(nafot[, \"Id\"], r_avg)', add = TRUE)\nFigure 10.7: Rasterizing the Id of the nafot administrative areas layer into the average NDVI raster\nInstead of retaining the original values, typically we want to start with an empty template, so that the only values in the resulting raster are those coming from the vector layer. For example, we can use a copy of the r_avg raster, where all of the pixel values are replaced with NA, as the template:\ntemplate = r_avg template[[1]][] = NA s = st_rasterize(nafot[, \"Id\"], template)\nThe result is shown in Figure 10.8:\nplot(nafot[, \"Id\"], pal = function(n) hcl.colors(n, \"Spectral\"), main = 'nafot[, \"Id\"]', key.pos = NULL, axes = TRUE) plot(nafot[, \"Id\"], pal = function(n) rep(NA, n), main = \"template\", border = NA, reset = FALSE, key.pos = NULL, axes = TRUE) plot(nafot[, \"Id\"], pal = function(n) rep(NA, n), main = NA, border = NA, reset = FALSE, key.pos = NULL, axes = TRUE) plot(s, breaks = \"equal\", col = hcl.colors(15, \"Spectral\"), main = 'st_rasterize(nafot[, \"Id\"], template)', add = TRUE)\nFigure 10.8: Rasterizing into an empty template\n\n\n13.3.3 Rasterizing point counts\nSometimes we want to add up attribute values from overlapping features coinciding with the same pixel, rather that take the last value. This is useful, for instance, when calculating a point density raster. For example, let's read the plants.shp and reserve.shp Shapefiles. These Shapefiles contain a point layer of rare plants observations and a polygon with the borders of Negev Mountains Nature Reserve, the largest nature reserve in Israel, respectively:\nplants = st_read(\"plants.shp\") reserve = st_read(\"reserve.shp\")\nWe will also reproject both layers to UTM, so that all pixels correspond to equal area size, which is more appropriate for density calculations:\nplants = st_transform(plants, 32636) reserve = st_transform(reserve, 32636)\nFigure 10.9 shows both layers—the polygonal layer reserve and the point layer plants:\nplot(st_geometry(reserve)) plot(st_geometry(plants), add = TRUE, col = \"red\")\nFigure 10.9: Nature reserve and rare plants observations\nHow can we calculate a raster expressing the density of plants points across the nature reserve? First, we set up a empty template raster, where all pixels within the area of interest—the nature reserve—are given an initial value of zero. Note that we are hereby using r_avg as template, but, if necessary, we can prepare a new template with resolution of our choice, using st_as_stars (Section 9.2.1).\ntemplate = r_avg template[[1]][] = 0 template = template[reserve]\nFigure 10.10 shows the template:\nplot(template, text_values = TRUE, col = \"lightgrey\", reset = FALSE) ## Warning in plot.stars(template, text_values = TRUE, col = \"lightgrey\", reset ## = FALSE): breaks=\"quantile\" leads to a single class; maybe try breaks=\"equal\" ## instead? plot(st_geometry(reserve), add = TRUE)\nFigure 10.10: Template for calculating point density\nThen, we create a new attrubute named count, with a value of 1 for each plant observation:\nplants$count = 1\nFinally, we rasterize the \"count\" attribute into the template raster, with an additional option options=\"MERGE_ALG=ADD\" (Section 10.2.1). The \"MERGE_ALG=ADD\" option acts as a flag instructing st_rasterize to add up any overlapping attributes \"burned\" into the same pixel:\ns = st_rasterize(plants[, \"count\"], template, options = \"MERGE_ALG=ADD\")\nThe resulting raster values reflect the sum of the count attribute from all overlapping points per pixel, i.e., the number of rare plant observations per pixel (Figure 10.11):\nplot(s, text_values = TRUE, breaks = \"equal\", col = grey.colors(10, start = 0.6, rev = TRUE), reset = FALSE) plot(st_geometry(reserve), add = TRUE)\nFigure 10.11: Density (observations per pixel) of rare plants in the nature reserve\nThe raster coloring is almost uniform, because the distribution is highly skewed. Namely, there are a lot of pixels with zero count, and few pixels with high count (try running hist(s[[1]]) to see that). We can use a logarithmic scale to visualize the density pattern more clearly (Figure 10.12). Now we can see which parts of the reserve were characterized by higher occurence of rare plants.\nb = c(0, 10^(seq(0, 2.5, 0.5))) plot(s, breaks = b, reset = FALSE, col = hcl.colors(length(b)-1, \"Reds\", rev = TRUE)) plot(st_geometry(reserve), add = TRUE)\nFigure 10.12: Density (observations per pixel) of rare plants in the nature reserve, with a logarithmic scale\n\n\n13.3.4 Standardizing density units\nIn the observation density raster s (Section 10.2.3), the units of measurement are plants per pixel. Since a pixel happens to have an area of 0.86 km2��2 (see below), raster values are, in fact, counts per 0.86 km2��2.\nHow do we know that the area of a pixel is 0.86 km2��2? We can apply the st_area function to calculate pixel area sizes. Recall that, when applied on a vector layer, st_area returns a vectot of units values, with the corresponding areas of all geometries (Section 8.3.2.2). When st_area is applied on a raster, it returns a raster of area values per pixel:\na = st_area(s) a ## stars object with 2 dimensions and 1 attribute ## attribute(s): ##    area [m^2]     ##  Min.   :858040   ##  1st Qu.:858040   ##  Median :858040   ##  Mean   :858040   ##  3rd Qu.:858040   ##  Max.   :858040   ## dimension(s): ##   from to  offset    delta                refsys point values x/y ## x    1 44  645574  926.305 WGS 84 / UTM zone 36N FALSE   NULL [x] ## y    1 54 3395217 -926.305 WGS 84 / UTM zone 36N FALSE   NULL [y]\nAs usual, the area values are given in CRS units (in this case, m2�2). We can transform the matrix with the entire raster values (a[[1]]) from m2�2 to km2��2 units, using set_units (Section 8.3.2.2):\nlibrary(units) a[[1]] = set_units(a[[1]], \"km^2\") a ## stars object with 2 dimensions and 1 attribute ## attribute(s): ##   area [km^2]    ##  Min.   :0.858   ##  1st Qu.:0.858   ##  Median :0.858   ##  Mean   :0.858   ##  3rd Qu.:0.858   ##  Max.   :0.858   ## dimension(s): ##   from to  offset    delta                refsys point values x/y ## x    1 44  645574  926.305 WGS 84 / UTM zone 36N FALSE   NULL [x] ## y    1 54 3395217 -926.305 WGS 84 / UTM zone 36N FALSE   NULL [y]\nFinally, we can examine one of the raster values. It doesn't matter which one, since all pixels have exactly the same area. For example, the following expression gives the top-left corner value from the stars values matrix:\na[[1]][1,1] ## 0.8580405 [km^2]\nLet's return to the density raster s. It is more convenient to work with counts per standard area unit, such as plants per 1 km2��2. To do that, we can divide the plants count raster s, by pixel area raster a:\ns = s / a names(s) = \"density\"\nThe result is a raster with counts per unit area, in this case plant observations per km2:\ns ## stars object with 2 dimensions and 1 attribute ## attribute(s): ##  density [1/km^2]   ##  Min.   :  0.0000   ##  1st Qu.:  0.0000   ##  Median :  0.0000   ##  Mean   :  0.8035   ##  3rd Qu.:  0.0000   ##  Max.   :269.2181   ##  NA's   :1191       ## dimension(s): ##   from to  offset    delta                refsys point values x/y ## x    1 44  645574  926.305 WGS 84 / UTM zone 36N FALSE   NULL [x] ## y    1 54 3395217 -926.305 WGS 84 / UTM zone 36N FALSE   NULL [y]\nThe result is shown in Figure 10.13:\nb = c(0, 10^(seq(0, 2.5, 0.5))) plot(s, breaks = b, reset = FALSE, col = hcl.colors(length(b)-1, \"Reds\", rev = TRUE)) plot(st_geometry(reserve), add = TRUE)\nFigure 10.13: Density (observations per km2��2) of rare plants in the nature reserve, with a logarithmic scale\nWe now move on to the opposite operation, converting a raster to a vector layer. As we will see, there are three variants of this conversion:\n\nRaster to polygons (Section 10.3)\nRaster to points (Section 10.4)\nRaster to contour (Section 10.6)"
  },
  {
    "objectID": "ch10.html#raster-polygons",
    "href": "ch10.html#raster-polygons",
    "title": "13  Combining rasters and vector layers",
    "section": "13.4 Raster → Polygons",
    "text": "13.4 Raster → Polygons\n\n13.4.1 Raster to polygons conversion\nThe st_as_sf function makes the raster to polygons conversion, when using the (default) as_points=FALSE argument. The st_as_sf function ignores pixels that have a NA values in all layers35. A useful option merge=TRUE dissolves all adjacent polygons that have the same raster value (in the first layer) into a single feature. The dissolve algorithm can be specified with the connect8 parameter: 4d, which is the default (connect8=FALSE) or 8d (connect8=TRUE). The attribute table of the polygon layer contains the raster values—with a separate attribute for each layer.\nFor example, let's take a small subset of the raster r:\nu = r[, 200:202, 100:102, 1:2]\nWe will replace some of the pixel values with NA:\nu[[1]][2,3,] = NA u[[1]][3,2,1] = NA\nand round the values to one digit:\nu = round(u, 1)\nThe resulting small raster u is visualized in Figure 10.14. Note that the raster has one pixel with NA in both layers, and another pixel with NA in the first layer only.\nplot(round(u, 2), text_values = TRUE, col = hcl.colors(4, \"Spectral\"))\nFigure 10.14: Sample raster\nNow, let's try using st_as_sf to transform the small raster u to a polygon layer p:\np = st_as_sf(u)\nThe resulting polygonal layer p has eight polygons, even though the raster u had nine pixels. This is because one of the pixels had NA in all layers, and therefore it was not converted to a polygon:\np ## Simple feature collection with 8 features and 2 fields ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 727089 ymin: 3610119 xmax: 729867.9 ymax: 3612898 ## Projected CRS: WGS 84 / UTM zone 36N ##   2000-02-01 2000-03-01                       geometry ## 1        0.7        0.7 POLYGON ((727089 3612898, 7... ## 2        0.7        0.8 POLYGON ((728015.3 3612898,... ## 3        0.6        0.7 POLYGON ((728941.6 3612898,... ## 4        0.8        0.9 POLYGON ((727089 3611972, 7... ## 5        0.7        0.8 POLYGON ((728015.3 3611972,... ## 6         NA        0.7 POLYGON ((728941.6 3611972,... ## 7        0.8        0.8 POLYGON ((727089 3611046, 7... ## 8        0.7        0.8 POLYGON ((728941.6 3611046,...\nThe resulting layer p, which has eight features and two attributes, is shown in Figure 10.15:\nplot(p)\nFigure 10.15: Polygon layer created from a raster\nLet's try the merge=TRUE option. Since merging is only affected by the first layer, it makes sense to transform each of the layers separately:\np1 = st_as_sf(u[,,,1], merge = TRUE) p2 = st_as_sf(u[,,,2], merge = TRUE)\nAs a result, we have two separate polygonal layers p1 and p2:\np1 ## Simple feature collection with 4 features and 1 field ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 727089 ymin: 3610119 xmax: 729867.9 ymax: 3612898 ## Projected CRS: WGS 84 / UTM zone 36N ##   NDVI                       geometry ## 1  0.7 POLYGON ((727089 3612898, 7... ## 2  0.6 POLYGON ((728941.6 3612898,... ## 3  0.8 POLYGON ((727089 3611972, 7... ## 4  0.7 POLYGON ((728941.6 3611046,...\np2 ## Simple feature collection with 6 features and 1 field ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 727089 ymin: 3610119 xmax: 729867.9 ymax: 3612898 ## Projected CRS: WGS 84 / UTM zone 36N ##   NDVI                       geometry ## 1  0.7 POLYGON ((727089 3612898, 7... ## 2  0.8 POLYGON ((728015.3 3612898,... ## 3  0.7 POLYGON ((728941.6 3612898,... ## 4  0.9 POLYGON ((727089 3611972, 7... ## 5  0.8 POLYGON ((727089 3611046, 7... ## 6  0.8 POLYGON ((728941.6 3611046,...\nFigure 10.16 displays both p1 and p2:\nplot(p1, main = paste0(colnames(p)[1], \" (\", nrow(p1), \")\")) plot(p2, main = paste0(colnames(p)[2], \" (\", nrow(p2), \")\"))\nFigure 10.16: Polygon layer created from a raster\n\nDo you think there will there be a difference if we use connect8=TRUE?\n\n\n\n13.4.2 Segmentation\nOne example of a use case of raster to polygon conversion is the delineation of distinct inter-connected groups of pixels, sharing the same (or a similar) value. This operationis also known as segmentation. In it's simplest form—detecting segments with exactly the same value—segmentation can be done using st_as_sf with merge=TRUE.\nFor example, we can derive segments of NDVI&gt;0.2 in the reclassified NDVI raster l_rec_focal from Section 9.4.3. First, let's recreate the l_rec_focal raster:\nl = read_stars(\"landsat_04_10_2000.tif\") red = l[,,,3,drop=TRUE] nir = l[,,,4,drop=TRUE] ndvi = (nir - red) / (nir + red) names(ndvi) = \"NDVI\" l_rec = ndvi l_rec[l_rec &lt; 0.2] = 0 l_rec[l_rec &gt;= 0.2] = 1 get_neighbors = function(m, pos) {   i = (pos[1]-1):(pos[1]+1)   j = (pos[2]-1):(pos[2]+1)   as.vector(t(m[i, j])) } focal2 = function(r, fun, ...) {   template = r   input = t(template[[1]])   output = matrix(NA, nrow = nrow(input), ncol = ncol(input))   for(i in 2:(nrow(input) - 1)) {     for(j in 2:(ncol(input) - 1)) {       v = get_neighbors(input, c(i, j))       output[i, j] = fun(v, ...)     }   }   template[[1]] = t(output)   return(template) } l_rec_focal = focal2(l_rec, max)\nSegments in the l_rec_focal raster represent distinct continuous areas with NDVI&gt;0.2����&gt;0.2. To detect them, we can convert the raster to polygons using st_as_sf with the merge=TRUE:\npol = st_as_sf(l_rec_focal, merge = TRUE)\nThen, we filter only those segments where raster value was 1:\npol = pol[pol$NDVI == 1, ]\nThe result is a polygon layer where each feature represents a single continuous area where NDVI&gt;0.2����&gt;0.2:\npol ## Simple feature collection with 536 features and 1 field ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 663975 ymin: 3459405 xmax: 687645 ymax: 3488145 ## Projected CRS: WGS 84 / UTM zone 36N ## First 10 features: ##    NDVI                       geometry ## 1     1 POLYGON ((675615 3488145, 6... ## 2     1 POLYGON ((676455 3488145, 6... ## 5     1 POLYGON ((681945 3488145, 6... ## 8     1 POLYGON ((684765 3488145, 6... ## 12    1 POLYGON ((687195 3488145, 6... ## 13    1 POLYGON ((686985 3488085, 6... ## 17    1 POLYGON ((686505 3488145, 6... ## 18    1 POLYGON ((665865 3488145, 6... ## 23    1 POLYGON ((685545 3488145, 6... ## 26    1 POLYGON ((686835 3487905, 6...\nFigure 10.17 shows the segments on top of the NDVI raster:\nplot(ndvi, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"), reset = FALSE) plot(st_geometry(pol), add = TRUE)\nFigure 10.17: Segments with NDVI&gt;0.2\n\nWhat is the exact number of segments in pol? If we ran the st_as_sf function on l_rec instead of l_rec_focal, do you think the number of segments would be higher or lower?"
  },
  {
    "objectID": "ch10.html#raster-points",
    "href": "ch10.html#raster-points",
    "title": "13  Combining rasters and vector layers",
    "section": "13.5 Raster → Points",
    "text": "13.5 Raster → Points\nThe Raster→Points transformation is done using function st_as_sf with the as_points=TRUE option. Pixel centers—except for pixels with NA in all layers—become points. Just like in a conversion to polygons (Section 10.3), the attribute table of the resulting point layer contains the raster values.\nFor example, here is how we can transform the small raster u to a point layer:\np = st_as_sf(u, as_points = TRUE)\nOnce again (Section 10.3), the resulting point layer p has eight points, even though the raster has nine pixels, because one of the pixels had NA in all layers and therefore was not converted to a point36:\np ## Simple feature collection with 8 features and 2 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 727552.1 ymin: 3610583 xmax: 729404.8 ymax: 3612435 ## Projected CRS: WGS 84 / UTM zone 36N ##   2000-02-01 2000-03-01                 geometry ## 1        0.7        0.7 POINT (727552.1 3612435) ## 2        0.7        0.8 POINT (728478.4 3612435) ## 3        0.6        0.7 POINT (729404.8 3612435) ## 4        0.8        0.9 POINT (727552.1 3611509) ## 5        0.7        0.8 POINT (728478.4 3611509) ## 6         NA        0.7 POINT (729404.8 3611509) ## 7        0.8        0.8 POINT (727552.1 3610583) ## 8        0.7        0.8 POINT (729404.8 3610583)\nThe point layer p is shown in Figure 10.18:\nplot(p, pch = 16, cex = 3)\nFigure 10.18: Point layer created from a raster"
  },
  {
    "objectID": "ch10.html#distance-to-nearest-point",
    "href": "ch10.html#distance-to-nearest-point",
    "title": "13  Combining rasters and vector layers",
    "section": "13.6 Distance to nearest point",
    "text": "13.6 Distance to nearest point\nAnother example of a spatial operator involving a raster and a vector layer is the calculation of a raster of distances to nearest point. For example, we may be interested in mapping the distances to the nearest meteorological stations in Israel, to evaluate where coverage is too sparse and reliable meteorological data are missing.\nWe are already familiar with the st_distance function for calculating distances (Section 8.3.2.3). However, st_distance expects two vector layers as input, not a vector layer and a raster. Therefore, to calculate a raster of distances from nearest point, we first need to convert the \"template\" raster to a point later (Section 10.4). In this example, our template for the distances raster, hereby named grid, is the 926×926926×926 m2�2 raster r_avg (though we could use any other raster template). The NDVI attribute is discarded, since it is irrelevant for the distance calculation:\ngrid = st_as_sf(r_avg, as_points = TRUE) grid$NDVI = NULL grid ## Simple feature collection with 32858 features and 0 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 616395.6 ymin: 3262292 xmax: 770162.2 ymax: 3692097 ## Projected CRS: WGS 84 / UTM zone 36N ## First 10 features: ##                    geometry ## 1  POINT (757193.9 3691171) ## 2  POINT (758120.2 3691171) ## 3  POINT (759046.5 3691171) ## 4  POINT (753488.7 3690245) ## 5    POINT (754415 3690245) ## 6  POINT (755341.3 3690245) ## 7  POINT (756267.6 3690245) ## 8  POINT (757193.9 3690245) ## 9  POINT (758120.2 3690245) ## 10 POINT (759046.5 3690245)\nLet's also import the point layer of meteorological stations (Section 7.4):\nrainfall = read.csv(\"rainfall.csv\") rainfall = st_as_sf(rainfall, coords = c(\"x_utm\", \"y_utm\"), crs = 32636)\nNow we can use st_distance to calculate pairwise distances between every grid point (grid) and meteorological station (rainfall):\ndistance = st_distance(grid, rainfall)\nThe result is a distance matrix named distance. Its rows correspond to grid points and its columns correspond to rainfall points. This is a very large matrix, due to the large number of grid points:\ndim(distance) ## [1] 32858   169\nIn this example, we are interested in the minimal distance, per grid point, among the distances to the 169 meteorological stations. Therefore we apply the min function on the distance matrix rows (Section 4.5), which refer to grid points. The result is a numeric vector of minimal distances, which we assign as an attribute in grid:\ngrid$distance = apply(distance, 1, min)\nIt is also convenient to convert the distances from from m� to km��. Since apply returns numeric, thus \"losing\" the units of measurement, we first need to convert the distances to units and only then make the conversion:\ngrid$distance = set_units(grid$distance, \"m\") grid$distance = set_units(grid$distance, \"km\")\nThe grid point layer now has a distance attribute, with the distance to nearest meteorological station, in km��:\ngrid ## Simple feature collection with 32858 features and 1 field ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 616395.6 ymin: 3262292 xmax: 770162.2 ymax: 3692097 ## Projected CRS: WGS 84 / UTM zone 36N ## First 10 features: ##                    geometry      distance ## 1  POINT (757193.9 3691171) 15.72760 [km] ## 2  POINT (758120.2 3691171) 16.40858 [km] ## 3  POINT (759046.5 3691171) 17.11260 [km] ## 4  POINT (753488.7 3690245) 12.55666 [km] ## 5    POINT (754415 3690245) 13.14112 [km] ## 6  POINT (755341.3 3690245) 13.76317 [km] ## 7  POINT (756267.6 3690245) 14.41792 [km] ## 8  POINT (757193.9 3690245) 15.10113 [km] ## 9  POINT (758120.2 3690245) 15.80911 [km] ## 10 POINT (759046.5 3690245) 16.53868 [km]\nThe result is shown in Figure 10.19:\nplot(grid)\nFigure 10.19: Distance to nearest meteorological station (point grid)\nTo have the results back as a raster, we can rasterize the points (Section 10.2). We use the same raster which we started with as template—this guarantees that every point corresponds exactly to one pixel:\ndistance = st_rasterize(grid[, \"distance\"], r_avg)\nThe final raster with distances to the nearest stations is shown in Figure 10.20. The locations of the meteorological stations and contour lines are shown on top of the raster, to emphasize the distance gradient:\nplot(distance, breaks = \"equal\", col = terrain.colors(10), reset = FALSE) plot(st_geometry(rainfall), add = TRUE, pch = 3, cex = 0.4) contour(distance, add = TRUE)\nFigure 10.20: Distance to nearest meteorological station (raster)"
  },
  {
    "objectID": "ch10.html#raster-lines-contours",
    "href": "ch10.html#raster-lines-contours",
    "title": "13  Combining rasters and vector layers",
    "section": "13.7 Raster → Lines (contours)",
    "text": "13.7 Raster → Lines (contours)\nWe already saw how a raster can be converted to polygons (Section 10.3) or to points (Section 10.4), which simply results in a layer of cell outlines or centroids, respectively. Another common transformation is to calculate contour lines of equal raster values.\nTo illustrate contour lines calculation, we will reconstruct the Haifa DEM at 90 m� resolution (Section 9.3):\ndem1 = read_stars(\"_book/data/srtm_43_06.tif\") dem2 = read_stars(\"_book/data/srtm_44_06.tif\") dem = st_mosaic(dem1, dem2) names(dem) = \"elevation\" dem = dem[, 5687:6287, 2348:2948] dem = st_warp(src = dem, crs = 32636, cellsize = 90)\nRaster contours can be calculated using the st_contour function. The function can accept a breaks argument, which determines the break points where contours are generated. Another parameter named contour_lines determines whether contours are returned as a line layer (TRUE) or polygon layer (FALSE, the default).\nTo decide on breaks values we are interested in, it is useful to examine the range of values in the raster:\nrange(dem[[1]], na.rm = TRUE) ## [1] -14 541\nAccording to the above result, we will use breaks from -100 to 600 meters, in steps of 50 meters:\nb = seq(-100, 600, 50) dem_contour = st_contour(dem, breaks = b, contour_lines = TRUE)\nThe result, dem_contour, is a LINESTRING layer with one feature per contour line:\ndem_contour ## Simple feature collection with 612 features and 1 field ## Geometry type: LINESTRING ## Dimension:     XY ## Bounding box:  xmin: 678607.1 ymin: 3602252 xmax: 710107.1 ymax: 3658412 ## Projected CRS: WGS 84 / UTM zone 36N ## First 10 features: ##    elevation                       geometry ## 1        150 LINESTRING (704500.1 365832... ## 2        150 LINESTRING (704680.1 365832... ## 3        200 LINESTRING (707113.3 365841... ## 4        100 LINESTRING (701332.1 365823... ## 5        350 LINESTRING (708883.5 365841... ## 6        150 LINESTRING (706102.1 365802... ## 7        100 LINESTRING (702198.3 365823... ## 8         50 LINESTRING (700342.1 365746... ## 9        200 LINESTRING (704932.1 365719... ## 10       450 LINESTRING (709117.1 365728...\nThe contours are shown in Figure 10.21:\nplot(dem, breaks = b, col = terrain.colors(length(b)-1), key.pos = 4, reset = FALSE) plot(st_geometry(dem_contour), add = TRUE)\nFigure 10.21: Contour lines"
  },
  {
    "objectID": "ch10.html#extracting-raster-values",
    "href": "ch10.html#extracting-raster-values",
    "title": "13  Combining rasters and vector layers",
    "section": "13.8 Extracting raster values",
    "text": "13.8 Extracting raster values\n\n13.8.1 Introduction\nIt is often necessary to \"extract\" raster values according to overlapping vector features, such as points, lines or polygons (Figure 10.22). For example, given an NDVI raster, we may be interested to calculate the NDVI value observed in particular point locations, or the average NDVI observed over an administrative area polygon.\nFigure 10.22: Extracting raster values (http://rpubs.com/etiennebr/visualraster)\nWhen extracting values to liner or polygons, it is common to summarize the values that the geometry intersects with, using a function such as mean. That way, the values can \"fit\" into a new attribute or attributes. Extracting to points is simpler, since each geometry corresponds to one pixel, so there is nothing to summarize.\nExtracting to points can be accompished with the st_extract function, while extracting to lines or to polygons can be accomplished with the aggregate function. In the next few sections, we will see examples of the most common extract scenarios:\n\nFrom single-band raster to points (Section 10.7.2)\nFrom multi-band raster to points (Section 10.7.3)\nFrom single-band raster to polygons (Section 10.7.4)\nFrom multi-band raster to polygons (Section 10.7.5)\n\n\n\n13.8.2 Extracting to points: single-band\n\n13.8.2.1 NDVI in meteorological stations\nRaster values can be extracted to points using the st_extract function. The function accepts:\n\nx—a stars raster\npts—a sf point layer\n\nand returns a new sf layer, with an additional attribute containing the values from x from the matching pixel for each point in pts.\nFor example, we can determine the average NDVI (r_avg) in the pixel where each meteorological station (rainfall) falls in, as follows:\nx = st_extract(r_avg, rainfall) x ## Simple feature collection with 169 features and 1 field ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 629301.4 ymin: 3270290 xmax: 761589.2 ymax: 3681163 ## Projected CRS: WGS 84 / UTM zone 36N ## First 10 features: ##         NDVI                 geometry ## 1  0.4357747 POINT (696533.1 3660837) ## 2  0.3544532 POINT (697119.1 3656748) ## 3  0.3196541 POINT (696509.3 3652434) ## 4  0.4238691 POINT (696541.7 3641332) ## 5  0.3745760 POINT (697875.3 3630156) ## 6         NA POINT (687006.2 3633330) ## 7  0.4580601 POINT (689553.7 3626282) ## 8  0.3732974 POINT (694694.5 3624388) ## 9  0.5153764 POINT (686489.5 3619716) ## 10 0.4521039 POINT (683148.4 3616846)\nThe extracted values can be attached to the rainfall layer, using assignment:\nrainfall$NDVI = x$NDVI\nAs a result, the rainfall layer now has an additional attribuite named NDVI:\nrainfall ## Simple feature collection with 169 features and 13 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 629301.4 ymin: 3270290 xmax: 761589.2 ymax: 3681163 ## Projected CRS: WGS 84 / UTM zone 36N ## First 10 features: ##       num altitude sep oct nov dec jan feb mar apr may              name ## 1  110050       30 1.2  33  90 117 135 102  61  20 6.7 Kfar Rosh Hanikra ## 2  110351       35 2.3  34  86 121 144 106  62  23 4.5              Saar ## 3  110502       20 2.7  29  89 131 158 109  62  24 3.8             Evron ## 4  111001       10 2.9  32  91 137 152 113  61  21 4.8       Kfar Masrik ## 5  111650       25 1.0  27  78 128 136 108  59  21 4.7     Kfar Hamakabi ## 6  120202        5 1.5  27  80 127 136  95  49  19 2.7        Haifa Port ## 7  120630      450 1.9  36  93 161 166 128  71  21 4.9  Haifa University ## 8  120750       30 1.6  31  91 163 170 146  76  22 4.9             Yagur ## 9  120870      210 1.1  32  93 147 147 109  61  16 4.3        Nir Etzyon ## 10 121051       20 1.8  32  85 147 142 102  56  13 4.5         En Carmel ##                    geometry      NDVI ## 1  POINT (696533.1 3660837) 0.4357747 ## 2  POINT (697119.1 3656748) 0.3544532 ## 3  POINT (696509.3 3652434) 0.3196541 ## 4  POINT (696541.7 3641332) 0.4238691 ## 5  POINT (697875.3 3630156) 0.3745760 ## 6  POINT (687006.2 3633330)        NA ## 7  POINT (689553.7 3626282) 0.4580601 ## 8  POINT (694694.5 3624388) 0.3732974 ## 9  POINT (686489.5 3619716) 0.5153764 ## 10 POINT (683148.4 3616846) 0.4521039\nThe attribute values are shown as text labels in Figure 10.23:\nplot(r_avg, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"), reset = FALSE) text(st_coordinates(rainfall), as.character(round(rainfall$NDVI, 2)), cex = 0.5)\nFigure 10.23: Raster values extracted to points\nNow that we know the average NDVI for each meteorological station location, we can examine, for instance, the association between NDVI and rainfall in December (Figure 10.24):\nplot(rainfall$dec, rainfall$NDVI, xlab = \"Rainfall (mm)\", ylab = \"NDVI\")\nFigure 10.24: Average NDVI as function of average rainfall in December\n\nWhat is the number and proportion of rainfall points that have an NA value in the NDVI attribute? Why did those stations get NA?\n\n\n\n\n13.8.3 Extracting to points: multi-band\nAs another example, we can extract the NDVI values for different dates from the multi-band raster r. For simplicity, let's create a subset rainfall1, with just three meteorological stations from the rainfall layer:\nsel = c(\"Horashim\", \"Beer Sheva\", \"Yotveta\") rainfall1 = rainfall[rainfall$name %in% sel, ] rainfall1 ## Simple feature collection with 3 features and 13 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 671364.1 ymin: 3307819 xmax: 717491.2 ymax: 3648872 ## Projected CRS: WGS 84 / UTM zone 36N ##        num altitude sep oct nov dec jan feb mar apr  may       name ## 77  212168      825 3.4  37 122 202 238 190 114  38 12.2   Horashim ## 141 251690      280 0.5   9  18  38  48  40  29   9  3.6 Beer Sheva ## 168 345005       80 0.4   2   2   6   5   4   5   2  0.4    Yotveta ##                     geometry      NDVI ## 77  POINT (717491.2 3648872) 0.5041712 ## 141 POINT (671364.1 3458877) 0.1699691 ## 168 POINT (700626.3 3307819)        NA\nNow, let's extract the NDVI values from a subset with the first five bands of r, into rainfall1:\nrainfall1 = st_extract(r[,,,1:5], rainfall1)\nThis time, since extraction from a multi-band raster took place, the result is a stars object and not an sf object. Moreover, this is a special type of a stars object, with one dimension for the vector geometries (geometry) and another dimension for the raster layers (time):\nrainfall1 ## stars object with 2 dimensions and 1 attribute ## attribute(s): ##      NDVI         ##  Min.   :0.1092   ##  1st Qu.:0.1300   ##  Median :0.1564   ##  Mean   :0.2614   ##  3rd Qu.:0.4442   ##  Max.   :0.5396   ##  NA's   :1        ## dimension(s): ##          from to offset delta                refsys point ## geometry    1  3     NA    NA WGS 84 / UTM zone 36N  TRUE ## time        1  5     NA    NA                  Date    NA ##                                                                          values ## geometry POINT (717491 3648872), POINT (671364 3458877), POINT (700626 3307819) ## time                                                  2000-02-01,...,2000-06-01\nTo work with the data, it is often more convenient to transform the stars object to an sf layer. This can be done with st_as_sf:\nrainfall1 = st_as_sf(rainfall1) rainfall1 ## Simple feature collection with 3 features and 5 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 671364.1 ymin: 3307819 xmax: 717491.2 ymax: 3648872 ## Projected CRS: WGS 84 / UTM zone 36N ##   2000-02-01 2000-03-01 2000-04-01 2000-05-01 2000-06-01 ## 1     0.4314     0.4485     0.5396     0.5234     0.4772 ## 2         NA     0.1587     0.1618     0.1541     0.1489 ## 3     0.1440     0.1254     0.1251     0.1122     0.1092 ##                   geometry ## 1 POINT (717491.2 3648872) ## 2 POINT (671364.1 3458877) ## 3 POINT (700626.3 3307819)\nIn case we are interested only in the extracted values, not the geometries, the latter can be discarded with st_drop_geometry:\nrainfall1 = st_drop_geometry(rainfall1) rainfall1 ##   2000-02-01 2000-03-01 2000-04-01 2000-05-01 2000-06-01 ## 1     0.4314     0.4485     0.5396     0.5234     0.4772 ## 2         NA     0.1587     0.1618     0.1541     0.1489 ## 3     0.1440     0.1254     0.1251     0.1122     0.1092\nFinally, we can rely on the fact that row and column order matches the vector layer feature and raster layer order, respectively, to assign names. For example, rainfall1 rows correspond to the selected station names, therefore we can assign the station names into rownames:\nrownames(rainfall1) = sel rainfall1 ##            2000-02-01 2000-03-01 2000-04-01 2000-05-01 2000-06-01 ## Horashim       0.4314     0.4485     0.5396     0.5234     0.4772 ## Beer Sheva         NA     0.1587     0.1618     0.1541     0.1489 ## Yotveta        0.1440     0.1254     0.1251     0.1122     0.1092\n\nColumns in rainfall1 are already named according to image dates. Where did these names come from?\n\nThe analogous operation in ArcGIS is the \"Extract Multi Values to Points\" tool (Figures 10.25–10.26).\nFigure 10.25: \"Extract Multi Values to Points\" tool in ArcGIS\nFigure 10.26: \"Extract Multi Values to Points\" tool in ArcGIS\n\n\n13.8.4 Extracting to polygons: single-band\nExtracting raster values to polygons (or to lines) is different from extracting to points. When extracting raster values to polygons (or to lines), each vector feature is potentially associated with more than one pixel value (Figure 10.22). Moreover, the number of pixels may vary between features. For example, a large polygon may cover many more pixels than a small polygon. Therefore, it is often convenient to summarize the raster values per polygon feauture by applying a function on them and obtaining a single number, such as the average. This is done by aggregating the raster based on a vector layer using function aggregate37.\nWhen summarizing raster values per polygon feature, the aggregate function accepts38:\n\nx—The stars raster to summarize\nby—An sf layer determining areas\nFUN—The function to be applied on each set of extracted pixel values from x\n\nFor example, we can calculate the average (mean) NDVI value (r_avg) per administrative area (nafot) as follows. Any additional arguments, such as na.rm=TRUE, are passed to the function, in this case so that mean excludes NA values:\nndvi_nafot = aggregate(r_avg, nafot, mean, na.rm = TRUE)\nThe result is, again (Section 10.7.3), a special type of a stars object, with just one dimension for the vector geometries:\nndvi_nafot ## stars object with 1 dimensions and 1 attribute ## attribute(s): ##      NDVI         ##  Min.   :0.1263   ##  1st Qu.:0.3376   ##  Median :0.3845   ##  Mean   :0.3554   ##  3rd Qu.:0.4001   ##  Max.   :0.4317   ## dimension(s): ##          from to offset delta                refsys point ## geometry    1 15     NA    NA WGS 84 / UTM zone 36N FALSE ##                                                                     values ## geometry POLYGON ((739780.1 3686007,...,...,POLYGON ((674110.3 3549169,...\nIt can be converted to the more familiar sf structure using st_as_sf:\nndvi_nafot = st_as_sf(ndvi_nafot)\nNow we have a polygon layer of the administrative areas, with an NDVI attribute containing the average NDVI value according to the r_avg raster:\nndvi_nafot ## Simple feature collection with 15 features and 1 field ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 620662.1 ymin: 3263494 xmax: 770624.4 ymax: 3691834 ## Projected CRS: WGS 84 / UTM zone 36N ## First 10 features: ##         NDVI                       geometry ## 1  0.4208889 POLYGON ((739780.1 3686007,... ## 2  0.3845475 POLYGON ((672273.8 3518394,... ## 3  0.3093089 POLYGON ((745560 3649860, 7... ## 4  0.3874892 POLYGON ((702283.1 3628046,... ## 5  0.4317472 POLYGON ((702725.9 3630513,... ## 6  0.4051780 POLYGON ((759304.4 3691202,... ## 7  0.3949261 POLYGON ((701391.6 3631170,... ## 8  0.4124200 POLYGON ((706537.1 3602188,... ## 9  0.3937370 POLYGON ((692687.3 3583974,... ## 10 0.3468470 POLYGON ((672841.5 3544808,...\nThe result can be visualized as follows (Figure 10.27):\nplot(ndvi_nafot, pal = function(x) hcl.colors(x, \"Spectral\"), reset = FALSE, key.pos = 4) text(st_coordinates(st_centroid(ndvi_nafot)), as.character(round(ndvi_nafot$NDVI, 2)))\nFigure 10.27: Average NDVI per \"Nafa\"\n\n\n13.8.5 Extracting to polygons: multi-band\nExtracting raster values from a multi-band raster works the same way as extracting from a multi-band raster. The difference is that the resulting stars object has two dimensions: one for the geometries and one for the input raster bands.\nFor example, the following expression calculates the average r value for each nafot feature over five months starting from 2000-02-01, based on the first five layers of r:\nndvi_nafot = aggregate(r[,,,1:5], nafot, mean, na.rm = TRUE) ndvi_nafot ## stars object with 2 dimensions and 1 attribute ## attribute(s): ##      NDVI         ##  Min.   :0.1083   ##  1st Qu.:0.3148   ##  Median :0.4408   ##  Mean   :0.4023   ##  3rd Qu.:0.4873   ##  Max.   :0.5906   ## dimension(s): ##          from to offset delta                refsys point ## geometry    1 15     NA    NA WGS 84 / UTM zone 36N FALSE ## time        1  5     NA    NA                  Date    NA ##                                                                     values ## geometry POLYGON ((739780.1 3686007,...,...,POLYGON ((674110.3 3549169,... ## time                                             2000-02-01,...,2000-06-01\nWhen transformed to an sf layer, the values extracted from each raster layer are placed in separate attributes:\nndvi_nafot = st_as_sf(ndvi_nafot) ndvi_nafot ## Simple feature collection with 15 features and 5 fields ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 620662.1 ymin: 3263494 xmax: 770624.4 ymax: 3691834 ## Projected CRS: WGS 84 / UTM zone 36N ## First 10 features: ##    2000-02-01 2000-03-01 2000-04-01 2000-05-01 2000-06-01 ## 1   0.5061847  0.5270644  0.5319248  0.4432705  0.3478298 ## 2   0.4692342  0.4604232  0.4568367  0.3757161  0.3096993 ## 3   0.5395486  0.5398781  0.4491296  0.3011687  0.2440450 ## 4   0.5616802  0.5826193  0.5475469  0.3978501  0.3062216 ## 5   0.4718739  0.4840480  0.4993016  0.4304506  0.3796581 ## 6   0.5518223  0.5851435  0.5905808  0.4905159  0.2675451 ## 7   0.4593590  0.4520991  0.4388301  0.3730517  0.3468060 ## 8   0.5061774  0.5087029  0.4809899  0.3971890  0.3509476 ## 9   0.5104205  0.4970106  0.4763348  0.3797437  0.3421975 ## 10  0.4709000  0.4675206  0.4407848  0.3536589  0.2844259 ##                          geometry ## 1  POLYGON ((739780.1 3686007,... ## 2  POLYGON ((672273.8 3518394,... ## 3  POLYGON ((745560 3649860, 7... ## 4  POLYGON ((702283.1 3628046,... ## 5  POLYGON ((702725.9 3630513,... ## 6  POLYGON ((759304.4 3691202,... ## 7  POLYGON ((701391.6 3631170,... ## 8  POLYGON ((706537.1 3602188,... ## 9  POLYGON ((692687.3 3583974,... ## 10 POLYGON ((672841.5 3544808,...\nThe result reflects the average NDVI, for the first five months in the MODIS NDVI series, for each \"Nafa\" (Figure 10.28):\nplot(ndvi_nafot, pal = function(x) hcl.colors(x, \"Spectral\"))\nFigure 10.28: NDVI per \"Nafa\" for five months"
  },
  {
    "objectID": "ch11.html#aims",
    "href": "ch11.html#aims",
    "title": "14  Processing spatio-temporal data",
    "section": "14.1 Aims",
    "text": "14.1 Aims\nOur aims in this chapter are:\n\nLearn to work with list objects\nPresent several characteristics of spatio-temporal data\nDemonstrate spatio-temporal data processing:\n\nAggregation of raster spatio-temporal data\nReshaping of vector trajectory data\n\n\nWe will use the following R packages:\n\nstars\ndplyr\ndata.table\nsf\nunits"
  },
  {
    "objectID": "ch11.html#lists",
    "href": "ch11.html#lists",
    "title": "14  Processing spatio-temporal data",
    "section": "14.2 Lists",
    "text": "14.2 Lists\n\n14.2.1 The list class\nA list is a collection of objects of any class. There are no restrictions as for the class and dimensions of each list element. Lists are therefore the most flexible of the base R data structures.\nA list can be created by passing individual objects to the list function. For example, the following expression creates a list object named x, which contains the three vectors c(1,3), c(4,5,6) and 8:\nx = list(c(1, 3), c(4, 5, 6), 8)\nUsing the class function we can make sure that x is indeed a list:\nclass(x) ## [1] \"list\"\nPrinting a list shows the internal objects it contains. In an unnamed list, the elements are marked with indices inside double square brackets ([[):\nx ## [[1]] ## [1] 1 3 ##  ## [[2]] ## [1] 4 5 6 ##  ## [[3]] ## [1] 8\nList element names can be accessed with names:\nnames(x) ## NULL\nand modified by assignment to names:\nnames(x) = c(\"a\", \"b\", \"c\")\nAs a result of the above expression, x is now a named list. When printing a named list, elements are marked with $ symbols followed by element names:\nx ## $a ## [1] 1 3 ##  ## $b ## [1] 4 5 6 ##  ## $c ## [1] 8\n\n\n14.2.2 List subsetting\nThe [ operator gives a list subset, as a new list. Numeric indices or element names (in case the list is named) can be used. For example, either of the following expression returns a list with just the first two elements of x:\nx[1:2] ## $a ## [1] 1 3 ##  ## $b ## [1] 4 5 6\nx[c(\"a\", \"b\")] ## $a ## [1] 1 3 ##  ## $b ## [1] 4 5 6\nEither of the following expressions returns a list with just the third element of x:\nx[3] ## $c ## [1] 8\nx[\"c\"] ## $c ## [1] 8\nThe [[ or $ operators return the contents of an individual list element (Figure 11.1). For example, either of the following expressions returns the second element of x, which is a numeric vector:\nx[[2]] ## [1] 4 5 6\nx[[\"b\"]] ## [1] 4 5 6\nx$b ## [1] 4 5 6\nNote that the [[ operator can be used with either numeric or character indices (in quotes), while the $ operator only works with character indices (without quotes).\nFigure 11.1: The difference between the [ and [[ operators when subsetting a list (http://r4ds.had.co.nz/vectors.html)\nList element names can be removed by assigning NULL to the names property:\nnames(x) = NULL\n\n\n14.2.3 The lapply function\nOne of the most useful functions when working with list objects is lapply. The lapply function is used to \"do something\" with each list element, getting back a matching list of results. The lapply function:\n\n\"Splits\" a list to individual elements\nCalls a function on each element\nCombines the results back to a new list\n\nThe lapply function is therefore conceptually similar to apply (Section 4.5), only operating on list elements, rather than the rows or the columns of a matrix or a data.frame (Figure 11.2).\nFigure 11.2: apply and lapply\nFor example, the following expressions apply the mean (Figure 11.2), range and is.na functions on each element in the list x. In each case, the returned object from lapply a new list with the results:\nlapply(x, mean) ## [[1]] ## [1] 2 ##  ## [[2]] ## [1] 5 ##  ## [[3]] ## [1] 8\nlapply(x, range) ## [[1]] ## [1] 1 3 ##  ## [[2]] ## [1] 4 6 ##  ## [[3]] ## [1] 8 8\nlapply(x, is.na) ## [[1]] ## [1] FALSE FALSE ##  ## [[2]] ## [1] FALSE FALSE FALSE ##  ## [[3]] ## [1] FALSE\n\n\n14.2.4 The split function\nThe split function can be used to split a data.frame to a list of data.frame subsets, according to unique values of the given vector (Figure 11.3).\nFigure 11.3: The split function\nFor the next example, let's ctreate a small data.frame named dat:\ndat = data.frame(   y = c(3, 5, 1, 4, 5),   g = c(\"f\", \"m\", \"f\", \"f\", \"m\") ) dat ##   y g ## 1 3 f ## 2 5 m ## 3 1 f ## 4 4 f ## 5 5 m\nand a vector named a which matches the number of rows in dat:\na = c(\"a\", \"a\", \"b\", \"a\", \"b\") a ## [1] \"a\" \"a\" \"b\" \"a\" \"b\"\nUsing split, we can \"split\" dat to a list of subsets, with the corresponding rows to all levels in the vector a (Figure 11.3):\nsplit(dat, a) ## $a ##   y g ## 1 3 f ## 2 5 m ## 4 4 f ##  ## $b ##   y g ## 3 1 f ## 5 5 m\n\nWhat type of object will be the result of split(dat, dat$y)? How many elements will it have?\n\n\n\n14.2.5 The do.call function\nThe do.call function can be used to pass a list of function arguments to another function. For example, instead of the following hypothetical function call of f with arguments a, b, c and d:\nf(a, b, c, d)\nwe can use the following equivalent expression with do.call:\ndo.call(f, list(a, b, c, d))\nThe do.call function is useful when we want to call a function with a large or variable number of arguments—passed as list elements—without having to specify them by name.\nFor example, suppose we want to combine all internal vectors in the list x to a single vector, using the c function. Instead of specifying each and every element:\nc(x[[1]], x[[2]], x[[3]]) ## [1] 1 3 4 5 6 8\nwe can use do.call:\ndo.call(c, x) ## [1] 1 3 4 5 6 8\nNow that we know how to work with list objects, we move on to defining spatio-temporal data (Section 11.2) and using the list class for spatio-temporal data processing (Sections 11.3–11.4)."
  },
  {
    "objectID": "ch11.html#spatio-temporal-data",
    "href": "ch11.html#spatio-temporal-data",
    "title": "14  Processing spatio-temporal data",
    "section": "14.3 Spatio-temporal data",
    "text": "14.3 Spatio-temporal data\nIt can be argued that all data are spatio-temporal, since they were measured in certain location(s) and time(s), even if the locations and times were not recorded and/or are irrelevant for analysis. However, we usually refer to data as spatio-temporal when the locations and times of observation were recorded and are relevant for analysis. Here are some examples of spatio-temporal data:\n\nTime-series of satellite images\nTemperature measurements in meteorological stations over time\nVoting results in administrative units during several election campaigns\nMovement tracks of people or animals, with or without associated measurements (heart rate, activity type, etc.)\nSpatial pattern of epidemic disease outbreak\nVolcanic eruption event locations over time\n\nMethods and tools for processing and analyzing spatio-temporal data are generally less developed than methods for working with spatial or temporal data. R has numeroud specialized packages for analyzing spatio-temporal data. The important ones are listed in the Handling and Analyzing Spatio-Temporal Data task view.\nConceptually, we can classify types of spatio-temporal data according to the arrangement of observations in space-time (Figure 11.4). For example, spatio-temporal data may form a regular or irregular \"grid,\" depending on whether the observations were repeatedly measured at the same locations and times or whether each observations has a unique space-time \"stamp.\" Trajectories are distinguised by the fact that observations usually refer to an individual object (or few objects) observed in consecutive times.\nFigure 11.4: Space-time dataset types (https://www.jstatsoft.org/article/view/v051i07)\nFor example, meteorological data (Figure 11.5) and satellite data (Figure 11.6) form regular grids of points or pixels collectively measured at the same time.\nFigure 11.5: Grid layout: PM point measurements (https://edzer.github.io/UseR2016/)\nFigure 11.6: Grid layout: Satellite image time series (Appel, Marius, and Edzer Pebesma. \"On-Demand Processing of Data Cubes from Satellite Image Collections with the gdalcubes Library.\" Data 4, no. 3 (2019): 92.)\nTweet (Figure 11.7) and disease case (Figure 11.8) locations comprise irregular grids, since each observation is associated with a unique location and timestamp.\nFigure 11.7: Irregular layout: Tweets (http://onlinelibrary.wiley.com/doi/10.1111/j.1467-9671.2012.01359.x/abstract)\nFigure 11.8: Irregular layout: Coral disease cases (http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0004993)\nFlickr image records per user over time (Figure 11.9) and storm tracks (Figure 11.10) are examples of trajectory data.\nFigure 11.9: Trajectory: Flickr user paths\nFigure 11.10: Trajectory: Storm paths (https://www.r-spatial.org/r/2017/08/28/nest.html)"
  },
  {
    "objectID": "ch11.html#aggregation-of-spatio-temporal-rasters",
    "href": "ch11.html#aggregation-of-spatio-temporal-rasters",
    "title": "14  Processing spatio-temporal data",
    "section": "14.4 Aggregation of spatio-temporal rasters",
    "text": "14.4 Aggregation of spatio-temporal rasters\n\n14.4.1 11.3.1 Introduction\nProcessing and visualization of spatio-temporal data are challenging, because of their three-dimensional nature. One of the basic approaches for working with spatio-temporal data is to simplify them using aggregation, in the spatial and/or temporal dimension, to help with visualization and exploratory analysis.\nTo demonstrate spatio-temporal aggregation, let's go back to the MOD13A3_2000_2019.tif raster, which is an example of spatio-temporal data forming a regular grid (Figure 11.4):\nlibrary(stars) r = read_stars(\"MOD13A3_2000_2019.tif\") dates = read.csv(\"MOD13A3_2000_2019_dates2.csv\") borders = st_read(\"israel_borders.shp\") names(r) = \"NDVI\" dates$date = as.Date(dates$date) r = st_set_dimensions(r, \"band\", values = dates$date, names = \"time\") r = st_warp(r, crs = 32636) r = r[borders]\n\n\n14.4.2 Aggregating time periods\nTo aggregate a raster on the temporal dimension (the raster layer), we need to:\n\nSplit the raster to subsets of raster layers (e.g., images captured in the different seasons)\nUse raster algebra to summarize each subset into a single layer (e.g., mean per pixel)\nCombine the results into a new multi-band raster (e.g., seasonal mean images)\n\nWe already learned how to subset raster layers using a numeric vector of indices (Section 6.2). Combined with which (Section 2.4.2), we can use this method to subset raster layers using a logical vector specifying which layers to keep. For example, here how we can get a subset of just the NDVI images taken in January:\nr[,,,which(dates$month == 1)] ## stars object with 3 dimensions and 1 attribute ## attribute(s), summary of first 1e+05 cells: ##      NDVI        ##  Min.   :-0.18   ##  1st Qu.: 0.12   ##  Median : 0.35   ##  Mean   : 0.33   ##  3rd Qu.: 0.50   ##  Max.   : 0.89   ##  NA's   :60579   ## dimension(s): ##      from  to  offset    delta                refsys point ## x      80 246  542754  926.305 WGS 84 / UTM zone 36N    NA ## y      14 478 3704603 -926.305 WGS 84 / UTM zone 36N    NA ## time    1  19      NA       NA                  Date    NA ##                                                   values x/y ## x                                                   NULL [x] ## y                                                   NULL [y] ## time [2001-01-01,2001-02-01),...,[2019-01-01,2019-02-01)\n\nHow can we create a subset of MOD13A3_2000_2019.tif with just the images taken during spring? How can we then calculate the \"average\" spring NDVI image?\n\nNow, let's use the same method to create a seasonal summary of average NDVI images, including each of the four seasons. We would like to create a raster named season_means, having 4 layers, where each layer is the average NDVI, excluding NA, per season:\n\n\"winter\"\n\"spring\"\n\"summer\"\n\"fall\"\n\nFirst, we create a vector of season names:\nseasons = c(\"winter\", \"spring\", \"summer\", \"fall\")\nThen, iterating on the season names with a for loop, for each season we:\n\nSubset the layers captured in that season only\nCalculate the mean NDVI per pixel\nCollect the result into a list\n\nThe following code section initializes an empty list named season_means, then runs a for loop that goes over the seasons and calculates seasons means:\nseason_means = list() for(i in seasons) {   sel = which(dates$season == i)   s = r[,,,sel]   season_means[[i]] = st_apply(s, 1:2, mean, na.rm = TRUE) }\nWhen the for loop ends, we get a list of seasonal mean rasters, named season_means.\n(Note that passing a vector of indices does not work inside a for loop, which is why we are creating a vector named sel as an intermediate step. This is a bug in the current version of stars which is resolved in the development version.)\nNext, we combine the list elements to a multi-band raster with do.call and c. The additional along=3 parameter makes sure the layers are \"stacked\" to form a third dimension:\nseason_means$along = 3 season_means = do.call(c, season_means)\nThis is basically a shortcut to the following alternative code, without using do.call, in which case we need to specify each and every one of the list items:\nseason_means = c(   season_means[[1]],   season_means[[2]],   season_means[[3]],   season_means[[4]],   along = 3 )\nEither way, we now have a four-band raster named season_mean with the seasonal means in r:\nseason_means ## stars object with 3 dimensions and 1 attribute ## attribute(s): ##      mean         ##  Min.   :-0.20    ##  1st Qu.: 0.11    ##  Median : 0.18    ##  Mean   : 0.23    ##  3rd Qu.: 0.33    ##  Max.   : 0.82    ##  NA's   :179251   ## dimension(s): ##         from  to  offset    delta                refsys point          values ## x         80 246  542754  926.305 WGS 84 / UTM zone 36N    NA            NULL ## y         14 478 3704603 -926.305 WGS 84 / UTM zone 36N    NA            NULL ## new_dim    1   4      NA       NA                    NA    NA winter,...,fall ##         x/y ## x       [x] ## y       [y] ## new_dim\nAll we have left to do is set the attribute name (\"NDVI\") and dimension names:\nnames(season_means) = \"NDVI\" season_means = st_set_dimensions(season_means, names = c(\"x\", \"y\", \"season\"))\nHere is the modified season_means raster:\nseason_means ## stars object with 3 dimensions and 1 attribute ## attribute(s): ##      NDVI         ##  Min.   :-0.20    ##  1st Qu.: 0.11    ##  Median : 0.18    ##  Mean   : 0.23    ##  3rd Qu.: 0.33    ##  Max.   : 0.82    ##  NA's   :179251   ## dimension(s): ##        from  to  offset    delta                refsys point          values ## x        80 246  542754  926.305 WGS 84 / UTM zone 36N    NA            NULL ## y        14 478 3704603 -926.305 WGS 84 / UTM zone 36N    NA            NULL ## season    1   4      NA       NA                    NA    NA winter,...,fall ##        x/y ## x      [x] ## y      [y] ## season\nNote that we do not need to set the layer dimention values, (i.e., the season names), since they are automatically populated with the names of the list elements in do.call.\nThe resulting season means raster is shown in Figure 11.11:\nplot(season_means, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"))\nFigure 11.11: Average NDVI per season\nIn case we need to summarize the seasonal NDVI in a different way, all we have to do is replace the aggregation function. For example, we can decide to have NA instead of less reliable pixels where &gt;10% of values are missing. In such case, instead of the previous function mean, we use a custom function named f_NA:\nf_NA = function(x) {if(mean(is.na(x)) &gt; 0.1) NA else mean(x, na.rm = TRUE)}\nThe aggregation code are exactly the same as in the last example, except for using f_NA—instead of mean—inside st_apply:\nseason_means = list() for(i in seasons) {   sel = which(dates$season == i)   s = r[,,,sel]   season_means[[i]] = st_apply(s, 1:2, f_NA) } season_means$along = 3 season_means = do.call(c, season_means) names(season_means) = \"NDVI\" season_means = st_set_dimensions(season_means, names = c(\"x\", \"y\", \"season\"))\nThe result is similar, only with some pixels replaced with NA:\nplot(season_means, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"))\nFigure 11.12: Average NDVI per season, pixels with &gt;25% NA excluded\nThe pattern of NA values can ne visualized by applying is.na on the result (Figure 11.13):\nplot(is.na(season_means)[borders], col = c(\"grey90\", \"red\"))\nFigure 11.13: Location of pixels with &gt;10% NA per season\n\nWhat is the purpose of the [borders] part in the above expression? What happens without it?\n\n\n\n14.4.3 Aggregating the \"x\" dimension\nOur second example demonstrates aggregation in one of the spatial dimensions, rather than in the layers dimension (Section 11.3.2). In this example, we will summarize the west-east gradient, i.e., the \"x\" dimension or raster columns, into a single value. That way, we will be able to visualize how NDVI changes acrosss the remaining spatial dimension \"y\", i.e., the north-south gradient, and over time.\nFirst, let's aggregate the \"x\" dimension for specific points in time, to visualize the north-south NDVI gradient during two time points only. This can be done by applying the mean function on all rows for particular layers, such as layers 1 and 7:\nx = st_apply(r[,,,1], \"y\", mean, na.rm = TRUE)[[1]]   # Winter y = st_apply(r[,,,7], \"y\", mean, na.rm = TRUE)[[1]]   # Summer\nThe resulting vectors can be plotted as follows (Figure 11.14):\nplot(x, type = \"l\", col = \"blue\", xlab = \"Row\", ylab = \"NDVI\") lines(y, col = \"red\")\nFigure 11.14: North-south NDVI gradient in two different months: February 2000 (blue) and August 2000 (red)\nNow we are going to repeat the operation for all layers of r, rather than two specific layers 1 and 7. In other words, we will calculate the north-south gradient for all time points (layers) in the raster r. We will create a raster s, where each column will contain the row means of one layer of r (Figure 11.15).\nFigure 11.15: Raster row means\nRaster s is going to have:\n\nThe same number of rows as r, i.e., 167 rows\nAs many columns as r layers, i.e., 233 columns\n\nTo create s, we aggregate on dimensions \"y\" and \"time\", so that we calculate the mean of each \"y\" and \"time\" combination, i.e., each row. Consequently, all values along \"x\" are averaged:\ns = st_apply(r, c(\"y\", \"time\"), mean, na.rm = TRUE) names(s) = \"NDVI\"\nThe resulting stars object s has two dimensions, \"y\" and \"time\", and its values are the average NDVI values for entire rows:\ns ## stars object with 2 dimensions and 1 attribute ## attribute(s): ##      NDVI          ##  Min.   :-0.1011   ##  1st Qu.: 0.1096   ##  Median : 0.1948   ##  Mean   : 0.2299   ##  3rd Qu.: 0.3214   ##  Max.   : 0.7447   ##  NA's   :733       ## dimension(s): ##      from  to  offset    delta                refsys point ## y      14 478 3704603 -926.305 WGS 84 / UTM zone 36N    NA ## time    1 233      NA       NA                  Date    NA ##                         values ## y                         NULL ## time 2000-02-01,...,2019-06-01\nThe arrangement of s is very convenient in case we want to work with the data as a matrix or as a data.frame. For example, transforming s to a data.frame results in a table where the NDVI value in each y and time combination is in a separate row:\ndat = as.data.frame(s) head(dat) ##         y       time      NDVI ## 1 3692561 2000-02-01       NaN ## 2 3691634 2000-02-01       NaN ## 3 3690708 2000-02-01       NaN ## 4 3689782 2000-02-01 0.1570333 ## 5 3688855 2000-02-01 0.2565000 ## 6 3687929 2000-02-01 0.3022000\nHowever, the s object does not have \"spatial\" x-y dimensions, which means that—striktly speaking—s is not a spatial raster. Therefore, it can't be simply displayed with plot:\nplot(s) ## Error in plot.stars(s): no raster, no features geometries: no default plot method set up yet!\nIn order to visualize s, we can modify its metadata so that:\n\nThe \"time\" and \"y\" dimensions are specified in the same units, e.g., in an arbitrary system with a resolution of 3×13×1, using the offset and delta parameters\nThe \"time\" and \"y\" dimensions are identified as \"spatial\" [y] and [x] dimensions, respectively, using the xy parameter\n\nIn the following code section, the first two expressions set the arbitrary coordinate system while the third expression identifies the dimensions as \"spatial\":\ns = st_set_dimensions(s, \"time\", offset = 0, delta = 3) s = st_set_dimensions(s, \"y\", offset = 0, delta = -1) s = st_set_dimensions(s, xy = c(\"time\", \"y\"))\nNow the s object can be plotted (Figure 11.16):\nplot(s, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"), axes = TRUE, reset = FALSE) contour(s, add = TRUE)\nFigure 11.16: Row means of r over time"
  },
  {
    "objectID": "ch11.html#processing-trajectory-data",
    "href": "ch11.html#processing-trajectory-data",
    "title": "14  Processing spatio-temporal data",
    "section": "14.5 Processing trajectory data",
    "text": "14.5 Processing trajectory data\n\n14.5.1 The storms dataset\nAs another example of how list, split and do.call can be useful when processing spatio-temporal data, we will transform a table of point locations over time to a line layer of trajectories. Our input data for this example is a data.frame object named storms (package dplyr):\nlibrary(dplyr) storms = as.data.frame(storms) vars = c(\"name\", \"year\", \"month\", \"day\", \"hour\", \"long\", \"lat\") storms = storms[, vars]\nThe storms table contains recorded storm locations at consecutive points over time:\nhead(storms) ##   name year month day hour  long  lat ## 1  Amy 1975     6  27    0 -79.0 27.5 ## 2  Amy 1975     6  27    6 -79.0 28.5 ## 3  Amy 1975     6  27   12 -79.0 29.5 ## 4  Amy 1975     6  27   18 -79.0 30.5 ## 5  Amy 1975     6  28    0 -78.8 31.5 ## 6  Amy 1975     6  28    6 -78.7 32.4\nFor each storm record, we have the storm name (name), time (year, month, day, hour) and location (long, lat). The majority of storm records are given in consecutive 6-hour intervals (0, 6, 12, 18).\n\n\n14.5.2 Setting storm IDs\nTo distinguish between individual storm tracks we need to have a unique ID variable. Our first pick could be to use storm name (name). However, storm name is not a good fit for an ID, because it is not unique. Many of the storm names are repeated for different storms in different years. For example, a storm named \"Josephine\" appears in several different years between 1984 and 2008:\nstorms$year[storms$name == \"Josephine\"] ##   [1] 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 ##  [16] 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 ##  [31] 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1984 1990 1990 1990 1990 ##  [46] 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 ##  [61] 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 ##  [76] 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 ##  [91] 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 1996 1996 ## [106] 1996 1996 1996 1996 1996 1996 1996 1996 1996 1996 1996 1996 1996 2002 2002 ## [121] 2002 2002 2002 2002 2002 2002 2008 2008 2008 2008 2008 2008 2008 2008 2008 ## [136] 2008 2008 2008 2008 2008 2008 2008 2008\nConsequently, we could choose to derive an ID that combines year (year) and storm name (name), so that each name/year combination is unique. However, a storm can be spread over two different years, e.g., if it starts in December and ends in January of the following year! For example, the storm named \"Zeta\" starts in December 30^th 2005 and ends in January 6^th 2006:\nhead(storms[storms$name == \"Zeta\", ]) ##      name year month day hour  long  lat ## 7372 Zeta 2005    12  30    0 -35.6 23.9 ## 7373 Zeta 2005    12  30    6 -36.1 24.2 ## 7374 Zeta 2005    12  30   12 -36.6 24.7 ## 7375 Zeta 2005    12  30   18 -37.0 25.2 ## 7376 Zeta 2005    12  31    0 -37.3 25.6 ## 7377 Zeta 2005    12  31    6 -37.6 25.7\ntail(storms[storms$name == \"Zeta\", ]) ##      name year month day hour  long  lat ## 7397 Zeta 2006     1   5    6 -46.6 21.9 ## 7398 Zeta 2006     1   5   12 -47.3 22.2 ## 7399 Zeta 2006     1   5   18 -47.9 22.7 ## 7400 Zeta 2006     1   6    0 -48.4 23.0 ## 7401 Zeta 2006     1   6    6 -49.0 23.1 ## 7402 Zeta 2006     1   6   12 -49.6 23.1\nUsing a name/year combination as an ID will wrongly split the storm in two parts: \"Zeta 2005\" and \"Zeta 2006\".\nWhat we really need is a unique ID for each consecutive sequence of storm names, assuming that no two consecutive storms will be given the same name. This type of IDs can be automatically generated using function rleid (Run Length Encoding ID) from the data.table package:\nlibrary(data.table) storms$id = rleid(storms$name)\nThe storms table now has a new column named id, which contains a unique index for each storm:\nhead(storms) ##   name year month day hour  long  lat id ## 1  Amy 1975     6  27    0 -79.0 27.5  1 ## 2  Amy 1975     6  27    6 -79.0 28.5  1 ## 3  Amy 1975     6  27   12 -79.0 29.5  1 ## 4  Amy 1975     6  27   18 -79.0 30.5  1 ## 5  Amy 1975     6  28    0 -78.8 31.5  1 ## 6  Amy 1975     6  28    6 -78.7 32.4  1\nFor example, using the id we can determine how many individual storms are there in the storms table (knowing that rleid produces IDs of consecutive numbers):\nmax(storms$id) ## [1] 425\n\n\n14.5.3 To points\nOur next step to to convert the storms table to a spatial point layer of the observed locations. The storms table can be converted to a point layer with st_as_sf, using the long and lat columns (Section 7.4):\nlibrary(sf) pnt = st_as_sf(storms, coords = c(\"long\", \"lat\"), crs = 4326)\nThe resulting object pnt is an sf point layer with 10010 points:\npnt ## Simple feature collection with 10010 features and 6 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -109.3 ymin: 7.2 xmax: -6 ymax: 51.9 ## Geodetic CRS:  WGS 84 ## First 10 features: ##    name year month day hour id           geometry ## 1   Amy 1975     6  27    0  1   POINT (-79 27.5) ## 2   Amy 1975     6  27    6  1   POINT (-79 28.5) ## 3   Amy 1975     6  27   12  1   POINT (-79 29.5) ## 4   Amy 1975     6  27   18  1   POINT (-79 30.5) ## 5   Amy 1975     6  28    0  1 POINT (-78.8 31.5) ## 6   Amy 1975     6  28    6  1 POINT (-78.7 32.4) ## 7   Amy 1975     6  28   12  1   POINT (-78 33.3) ## 8   Amy 1975     6  28   18  1     POINT (-77 34) ## 9   Amy 1975     6  29    0  1 POINT (-75.8 34.4) ## 10  Amy 1975     6  29    6  1   POINT (-74.8 34)\nThe point layer is shown in Figure 11.17:\nplot(pnt)\nFigure 11.17: The storms points\n\n\n14.5.4 Points to lines\nTo transform a point layer of object locations over time to a line layer of trajectories, we go through the following steps:\n\nSplit the point layer to subsets of points for each storm\nSort each group of points chronologically, earliest to latest\nTransform each of the point sequences to a line\nCombine the separate lines back to a single line layer\n\nFirst, we split the point layer by storm ID (id), using the split function (Section 11.1.4). Remember that the sf class is a special case of a data.frame (Section 7.1.4), which is why split works with sf the same way as with a data.frame:\nlines = split(pnt, pnt$id)\nWe now have a list of point sequences per storm. For example, the first list element contains 30 points for the first storm Amy in 1975:\nlines[[1]] ## Simple feature collection with 30 features and 6 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -79 ymin: 27.5 xmax: -51.6 ymax: 44.5 ## Geodetic CRS:  WGS 84 ## First 10 features: ##    name year month day hour id           geometry ## 1   Amy 1975     6  27    0  1   POINT (-79 27.5) ## 2   Amy 1975     6  27    6  1   POINT (-79 28.5) ## 3   Amy 1975     6  27   12  1   POINT (-79 29.5) ## 4   Amy 1975     6  27   18  1   POINT (-79 30.5) ## 5   Amy 1975     6  28    0  1 POINT (-78.8 31.5) ## 6   Amy 1975     6  28    6  1 POINT (-78.7 32.4) ## 7   Amy 1975     6  28   12  1   POINT (-78 33.3) ## 8   Amy 1975     6  28   18  1     POINT (-77 34) ## 9   Amy 1975     6  29    0  1 POINT (-75.8 34.4) ## 10  Amy 1975     6  29    6  1   POINT (-74.8 34)\nSorting the points, or making sure they are aready sorted, is essential to connect storm track points in chronological order. To sort the points we write a function that accepts a data.frame (or an sf) object and returns a sorted one based on the year, month, day and hour columns, in that order, using order (Section 4.6.2). The function is then applied on each storm, separately, using lapply (Section 11.1.3):\nf = function(x) x[order(x$year, x$month, x$day, x$hour), ] lines = lapply(lines, f)\nNow each list element is a series of points in chronological order:\nlines[[1]] ## Simple feature collection with 30 features and 6 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -79 ymin: 27.5 xmax: -51.6 ymax: 44.5 ## Geodetic CRS:  WGS 84 ## First 10 features: ##    name year month day hour id           geometry ## 1   Amy 1975     6  27    0  1   POINT (-79 27.5) ## 2   Amy 1975     6  27    6  1   POINT (-79 28.5) ## 3   Amy 1975     6  27   12  1   POINT (-79 29.5) ## 4   Amy 1975     6  27   18  1   POINT (-79 30.5) ## 5   Amy 1975     6  28    0  1 POINT (-78.8 31.5) ## 6   Amy 1975     6  28    6  1 POINT (-78.7 32.4) ## 7   Amy 1975     6  28   12  1   POINT (-78 33.3) ## 8   Amy 1975     6  28   18  1     POINT (-77 34) ## 9   Amy 1975     6  29    0  1 POINT (-75.8 34.4) ## 10  Amy 1975     6  29    6  1   POINT (-74.8 34)\nThe first sequence is shown on Figure 11.18. We can clearly see how the storm spans two different months and several different days (month and day panels).\nplot(lines[[1]])\nFigure 11.18: The storms points\n\n\n14.5.5 Trajectory data\nOur next step is to combine all POINT geometries to a single MULTIPOINT geometry. We use st_combine to do that (Section 8.3.4.3):\nlines = lapply(lines, st_combine)\nEach lines element is now a MULTIPOINT geometry (sfc):\nlines[[1]] ## Geometry set for 1 feature  ## Geometry type: MULTIPOINT ## Dimension:     XY ## Bounding box:  xmin: -79 ymin: 27.5 xmax: -51.6 ymax: 44.5 ## Geodetic CRS:  WGS 84 ## MULTIPOINT ((-79 27.5), (-79 28.5), (-79 29.5),...\n\nWhy do you think all point attributes are lost as a result of applying st_combine?\n\nThe way the first list item looks when plotted is shown in Figure 11.19:\nplot(lines[[1]])\nFigure 11.19: A point trajectory converted to MULTIPOINT\nNext, each of the MULTIPOINT geometries can be cast (Section 8.3.4.4) to LINESTRING. Note that the additional fixed to parameter is passed from lapply to each of the st_cast function calls:\nlines = lapply(lines, st_cast, to = \"LINESTRING\")\nPrinting the first lines element reveals that the geometry type was indeed changed from MULTIPOINT to LINESTRING:\nlines[[1]] ## Geometry set for 1 feature  ## Geometry type: LINESTRING ## Dimension:     XY ## Bounding box:  xmin: -79 ymin: 27.5 xmax: -51.6 ymax: 44.5 ## Geodetic CRS:  WGS 84 ## LINESTRING (-79 27.5, -79 28.5, -79 29.5, -79 3...\nAccordingly, plotting shows a line instead of points (Figure 11.20):\nplot(lines[[1]])\nFigure 11.20: The LINESTRING created from MULTIPOINT\nAt this stage, we have a list of 425 individual LINESTRING geometries, one for each storm. The list can be combined back to an sfc geometry column with do.call (Section 11.1.5):\ngeometry = do.call(c, lines)\nUnlike in the previous example (Section 11.3.2) where we had a list of four elements (season_means), doing the above without do.call is not a viable option as we would have to type 425 arguments:\ngeometry = c(   lines[[1]],   lines[[2]],   ...,   lines[[425]] )\nHere is the combined sfc:\ngeometry ## Geometry set for 425 features  ## Geometry type: LINESTRING ## Dimension:     XY ## Bounding box:  xmin: -109.3 ymin: 7.2 xmax: -6 ymax: 51.9 ## Geodetic CRS:  WGS 84 ## First 5 geometries: ## LINESTRING (-79 27.5, -79 28.5, -79 29.5, -79 3... ## LINESTRING (-69.8 22.4, -71.1 21.9, -72.5 21.6,... ## LINESTRING (-48.9 34.9, -49.1 35.2, -48.9 35.3,... ## LINESTRING (-72.8 26, -73 26.3, -73.4 26, -73.2... ## LINESTRING (-58 23, -58.1 23.7, -58.2 24.3, -58...\nWe now have a geometry column with one line per individual storm (Figure 11.21):\nplot(geometry)\nFigure 11.21: The LINESTRING geometries for all storms combined\nWhat if we want to get back the other attributes of each storm, such as its name? To do that, we first need to attach storm IDs back to the geometries. We can rely on the fact that list names contain the original variable that was used for splitting the point layer, namely the storm IDs:\nlayer = st_sf(geometry, data.frame(id = names(lines)))\nThe line layer is now an sf object with one attribute id:\nlayer ## Simple feature collection with 425 features and 1 field ## Geometry type: LINESTRING ## Dimension:     XY ## Bounding box:  xmin: -109.3 ymin: 7.2 xmax: -6 ymax: 51.9 ## Geodetic CRS:  WGS 84 ## First 10 features: ##    id                       geometry ## 1   1 LINESTRING (-79 27.5, -79 2... ## 2   2 LINESTRING (-69.8 22.4, -71... ## 3   3 LINESTRING (-48.9 34.9, -49... ## 4   4 LINESTRING (-72.8 26, -73 2... ## 5   5 LINESTRING (-58 23, -58.1 2... ## 6   6 LINESTRING (-88.4 26.9, -88... ## 7   7 LINESTRING (-80 32.8, -79 3... ## 8   8 LINESTRING (-62.9 26.9, -64... ## 9   9 LINESTRING (-97 25.7, -97.4... ## 10 10 LINESTRING (-90.4 25.3, -91...\nPlotting the layer shows the ID values per storm (Figure 11.22):\nplot(layer)\nFigure 11.22: The storms line layer with storm ID\nIn case we need to, we can join other pieces of information from the original storms table back to layer, using aggregation (why?) followed by an ordinary join (Section 4.6) using the common column id.\n\n\n14.5.6 Line length\nNow that each storm is represented by a line, we can calculate spatial properties of the trajectories. For example, line length reflects the overall distance that each storm has traveled. The line lengths can be calculated using the st_length function (Section 8.3.2):\nlayer$length = st_length(layer) layer ## Simple feature collection with 425 features and 2 fields ## Geometry type: LINESTRING ## Dimension:     XY ## Bounding box:  xmin: -109.3 ymin: 7.2 xmax: -6 ymax: 51.9 ## Geodetic CRS:  WGS 84 ## First 10 features: ##    id                       geometry        length ## 1   1 LINESTRING (-79 27.5, -79 2... 3510012.0 [m] ## 2   2 LINESTRING (-69.8 22.4, -71... 3177598.3 [m] ## 3   3 LINESTRING (-48.9 34.9, -49... 1469864.8 [m] ## 4   4 LINESTRING (-72.8 26, -73 2... 2148308.5 [m] ## 5   5 LINESTRING (-58 23, -58.1 2... 3226682.2 [m] ## 6   6 LINESTRING (-88.4 26.9, -88... 1600143.2 [m] ## 7   7 LINESTRING (-80 32.8, -79 3... 2145905.6 [m] ## 8   8 LINESTRING (-62.9 26.9, -64... 2392209.7 [m] ## 9   9 LINESTRING (-97 25.7, -97.4...  455724.8 [m] ## 10 10 LINESTRING (-90.4 25.3, -91...  953824.1 [m]\nLengths can be transformed to km�� units for convenience:\nlibrary(units) layer$length = set_units(layer$length, \"km\") layer ## Simple feature collection with 425 features and 2 fields ## Geometry type: LINESTRING ## Dimension:     XY ## Bounding box:  xmin: -109.3 ymin: 7.2 xmax: -6 ymax: 51.9 ## Geodetic CRS:  WGS 84 ## First 10 features: ##    id                       geometry         length ## 1   1 LINESTRING (-79 27.5, -79 2... 3510.0120 [km] ## 2   2 LINESTRING (-69.8 22.4, -71... 3177.5983 [km] ## 3   3 LINESTRING (-48.9 34.9, -49... 1469.8648 [km] ## 4   4 LINESTRING (-72.8 26, -73 2... 2148.3085 [km] ## 5   5 LINESTRING (-58 23, -58.1 2... 3226.6822 [km] ## 6   6 LINESTRING (-88.4 26.9, -88... 1600.1432 [km] ## 7   7 LINESTRING (-80 32.8, -79 3... 2145.9056 [km] ## 8   8 LINESTRING (-62.9 26.9, -64... 2392.2097 [km] ## 9   9 LINESTRING (-97 25.7, -97.4...  455.7248 [km] ## 10 10 LINESTRING (-90.4 25.3, -91...  953.8241 [km]\nThe result can be visualized using mapview as follows:\nlibrary(mapview) layer$length = drop_units(layer$length) mapview(layer, zcol = \"length\")"
  },
  {
    "objectID": "ch12.html#aims",
    "href": "ch12.html#aims",
    "title": "15  Spatial interpolation of point data",
    "section": "15.1 Aims",
    "text": "15.1 Aims\nOur aims in this chapter are:\n\nCalculate an empirical variogram\nFit a variogram model\nInterpolate using three methods:\n\nInverse Distance Weighted (IDW) interpolation\nOrdinary Kriging (OK)\nUniversal Kriging (UK)\n\nEvaluate interpolation accuracy using Leave-One-Out Cross Validation\n\nWe will use the following R packages:\n\nsf\nstars\ngstat\nautomap"
  },
  {
    "objectID": "ch12.html#what-is-spatial-interpolation",
    "href": "ch12.html#what-is-spatial-interpolation",
    "title": "15  Spatial interpolation of point data",
    "section": "15.2 What is spatial interpolation?",
    "text": "15.2 What is spatial interpolation?\n\n15.2.1 Interpolation models\nSpatial interpolation is the prediction of a given phenomenon in unmeasured locations (Figures 12.1–12.2). For that, we need a spatial interpolation model—a set of procedures to calculate predicted values of the variable of interest, given calibration data.\nFigure 12.1: Spatial interpolation (Input elevation point data, Interpolated elevation surface) (http://desktop.arcgis.com/en/arcmap/10.3/tools/spatial-analyst-toolbox/understanding-interpolation-analysis.htm)\nFigure 12.2: Spatial interpolation (Point locations of ozone monitoring stations, Interpolated prediction surface) (http://desktop.arcgis.com/en/arcmap/10.3/tools/spatial-analyst-toolbox/understanding-interpolation-analysis.htm)\nCalibrarion data usually include:\n\nField measurements—available for a limited number of locations, for example: rainfall data from meteorological stations\nCovariates—available for each and every location within the area of interest, for example: elevation from a DEM\n\nSpatial interpolation models can be divided into two general categories:\n\nDeterministic models—Models using arbitrary parameter values, for example: IDW\nStatistical models—Models using parameters chosen objectively based on the data, for example: Kriging\n\nKeep in mind that data structure does not imply meaning. It is technically possible to interpolate any numeric variable measured in a set of points, however it does not always make sense to do so. For example, it does not make sense to spatially interpolate point data when they refer to a localized phenomenon, such as amount of emissions per power plant (Figure 12.3).\nFigure 12.3: CO2��2 emissions from power plants: a localized phenomenon (https://edzer.github.io/UseR2016/)\nConveresly, it does not make sense to sum up point measurements of a continuous phenomenon (Figure 12.4).\nFigure 12.4: PM10��10 measurements: a continuous phenomenon (https://edzer.github.io/UseR2016/)\n\n\n15.2.2 12.1.2 The weighted average principle\nMany of the commonly used interpolation methods, including the ones we learn about in this Chapter (Nearest Neighbor, IDW, Kriging), are based on the same principle, where a predicted value is a weighted average of neighboring points. Weight are usually inveresely related to distance, i.e., as distance increases the weight (importance) of the point decreases. The predicted value for a particular point is calculated as a weighted average of measured values in other points (Equation (12.1)):\n[^Z(s0)=∑ni=1w(si)Z(si)∑ni=1w(si)(12.1)(12.1)�^(�0)=∑�=1��(��)�(��)∑�=1��(��)]{.underline}\nwhere:\n\n^Z(s0)�^(�0) is the predicted value at location s0�0\nw(si)�(��) is the weight of measured point i�\nZ(si)�(��) is the value of measured point i�\n\nThe weight w(si)�(��) of each measured point is a function of distance (Figure 12.5) from the predicted point.\nFigure 12.5: Distances between predicted point and all measured points (http://desktop.arcgis.com/en/arcmap/10.3/tools/spatial-analyst-toolbox/how-kriging-works.htm)\nIn IDW, the weight is the inverse of distance to the power of p� (Equation (12.2)):\nw(si)=1d(s0,si)p(12.2)(12.2)�(��)=1�(�0,��)�\nwhere:\n\nw(si)�(��) is the weight of measured point i�\nd(s0,si)�(�0,��) is the distance between predicted point s0�0 and measured point si��\n\nThe default value for p� is usually p=2�=2 (Equation (12.3)):\nw(si)=1d(s0,si)2(12.3)(12.3)�(��)=1�(�0,��)2\nThe p� parameter basically determines how steeply does weight increase with proximity. As a result, p� determines whether weights are more or less equally distributed among neighbors (low p�) or whether one point (the nearest) has overwhelmingly high weight and thus the predicted value will be strongly influenced by that point (high p�). In other words, when p� approaches zero, the predicted result will approach a uniform surface which is just an average of all measured points. When p� approaches infinity, the predicted result will approach nearest neighbor interpolation, which is the simplest spatial interpolation method there is: every predicted point gets the value of the nearest measured point (Figures 12.6–12.7).\nFigure 12.6: Spatial interpolation of annual rainfall using IDW with p=0.25�=0.25, p=2�=2 and p=16�=16\nFigure 12.7: Nearest Neighbor interpolation (left) and Voronoi polygons (right)\nIn Kriging, the weight is a particular function of distance known as the variogram model (Figure 12.8). The variogram model is fitted to characterize the autocorrelation structure in the measured data, based on the empirical variogram.\nFigure 12.8: Variogram models: spherical (left) and exponential (right) (http://desktop.arcgis.com/en/arcmap/10.3/tools/spatial-analyst-toolbox/how-kriging-works.htm)\nThere are two frequently used kriging methods: Ordinary Kriging (OK) and Universal Kriging (UK). Adding up the Inverse Distance Weighted (IDW) interpolation, we now mentioned three interpolation methods. We are going to cover those three methods (Figure 12.9), mostly from the practical point of view, in the next three sections (Sections 12.2–12.4).\nFigure 12.9: Spatial interpolation of annual rainfall using IDW, OK and UK\nFor the examples, we will load the rainfall.csv file (Section 4.4.3), calculate the annual column (Section 4.5) and convert it to a point layer (Section 7.4):\nlibrary(sf) rainfall = read.csv(\"rainfall.csv\") rainfall = st_as_sf(rainfall, coords = c(\"x_utm\", \"y_utm\"), crs = 32636) m = c(\"sep\", \"oct\", \"nov\", \"dec\", \"jan\", \"feb\", \"mar\", \"apr\", \"may\") rainfall$annual = apply(st_drop_geometry(rainfall[, m]), 1, sum)\nWe will also use a 1×11×1 km2��2 DEM raster of the area of interest (Sections 9.1, 9.3 and 10.1):\nlibrary(stars) dem1 = read_stars(\"srtm_43_06.tif\") dem2 = read_stars(\"srtm_44_06.tif\") dem = st_mosaic(dem1, dem2) borders = st_read(\"israel_borders.shp\") grid = st_as_sfc(st_bbox(borders)) grid = st_as_stars(grid, dx = 1000, dy = 1000) dem = st_warp(src = dem, grid, method = \"average\", use_gdal = TRUE) dem = dem[borders] names(dem) = \"elev_1km\"\nFinally, we subset the dem to include only the area to the north of 31 degrees latitude, where meteorological station density is relatively high:\ny = st_as_sf(dem, as_points = TRUE) y$lat = st_coordinates(st_transform(y, 4326))[,2] y = st_rasterize(y[, \"lat\"], dem) y[y &lt; 31] = NA y[!is.na(y)] = 1 y = st_as_sf(y, merge = TRUE) dem = dem[y]\nNext, we extract the elevation values (Section 10.7.2):\nrainfall = st_join(rainfall, st_as_sf(dem))\nand subset those stations that coincide with the raster:\nrainfall = rainfall[!is.na(rainfall$elev_1km), ]\nFigure 12.10 shows the dem elevation raster and the rainfall point layer:\nplot(dem, breaks = \"equal\", col = terrain.colors(11), reset = FALSE) plot(st_geometry(rainfall), add = TRUE)\nFigure 12.10: Rainfall data points and elevation raster"
  },
  {
    "objectID": "ch12.html#inverse-distance-weighted-interpolation",
    "href": "ch12.html#inverse-distance-weighted-interpolation",
    "title": "15  Spatial interpolation of point data",
    "section": "15.3 Inverse Distance Weighted interpolation",
    "text": "15.3 Inverse Distance Weighted interpolation\n\n15.3.1 The gstat object\nTo interpolate, we first need to create an object of class gstat, using a function of the same name: gstat. A gstat object contains all necessary information to conduct spatial interpolation, namely:\n\nThe model definition\nThe calibration data\n\nBased on its arguments, the gstat function \"understands\" what type of interpolation model we want to use:\n\nNo variogram model → IDW\nVariogram model, no covariates → Ordinary Kriging\nVariogram model, with covariates → Universal Kriging\n\nThe complete decision tree of gstat, including several additional methods which we are not going to use, is shown in Figure 12.11.\nFigure 12.11: gstat predict methods (Applied Spatial Data Analysis with R, 2013)\nWe are going to use three parameters of the gstat function:\n\nformula—The prediction \"formula\" specifying the dependent and the independent variables (covariates)\ndata—The calibration data\nmodel—The variogram model\n\nKeep in mind that we need to specify parameter names, because these three parameters are not the first three in the gstat function definition.\nFor example, to interpolate using the IDW method we create the following gstat object, specifying just the formula (Section 12.2.2 below) and data:\nlibrary(gstat) g = gstat(formula = annual ~ 1, data = rainfall)\n\n\n15.3.2 Working with formula objects\nIm R, formula objects are used to specify relation between objects, in particular—the role of different data columns in statistical models. A formula object is created using the ~ operator, which separates names of dependent variables (to the left of the ~ symbol) and independent variables (to the right of the ~ symbol). Writing 1 to the right of the ~ symbol, as in ~ 1, means that there are no independent variables39.\nFor example, in the following expression we create a formula object named f:\nf = annual ~ 1 f ## annual ~ 1\nChecking the class shows that f is indeed a formula object:\nclass(f) ## [1] \"formula\"\nWe can also convert character values to formula using the as.formula function. For example:\nf = as.formula(\"annual ~ 1\") class(f) ## [1] \"formula\"\nThe as.formula function is particularly useful when we want to construct different formulas as part of a for loop (Section 12.3.3).\n\n\n15.3.3 Making predictions\nNow that our model is defined, we can use the predict function to actually interpolate, i.e., to calculate predicted values. The predict function accepts:\n\nA raster—stars object, such as dem\nA model—gstat object, such as g\n\nThe raster serves for two purposes:\n\nSpecifying the locations where we want to make predictions (in all methods)\nSpecifying covariate values (in Universal Kriging only)\n\nFor example, the following expression interpolates annual values according to the model defined in g and the raster template defined in dem:\nz = predict(g, dem) ## [inverse distance weighted interpolation]\nThe resulting stars object has two attributes:\n\nvar1.pred—the predicted values\nvar1.var—the variance (for Kriging only)\n\nFor example:\nz ## stars object with 2 dimensions and 2 attributes ## attribute(s): ##    var1.pred        var1.var      ##  Min.   : 42.85   Min.   : NA     ##  1st Qu.:356.01   1st Qu.: NA     ##  Median :495.20   Median : NA     ##  Mean   :466.49   Mean   :NaN     ##  3rd Qu.:552.16   3rd Qu.: NA     ##  Max.   :946.31   Max.   : NA     ##  NA's   :20108    NA's   :39933   ## dimension(s): ##   from  to  offset delta                       refsys point values x/y ## x    1 153  616965  1000 +proj=utm +zone=36 +datum...    NA   NULL [x] ## y    1 261 3691819 -1000 +proj=utm +zone=36 +datum...    NA   NULL [y]\nWe can subset just the first attribute and rename it to \"annual\":\nz = z[\"var1.pred\",,] names(z) = \"annual\"\nThe interpolated annual rainfall raster, using IDW, is shown in Figure 12.12:\nb = seq(0, 1200, 100) plot(z, breaks = b, col = hcl.colors(length(b)-1, \"Spectral\"), reset = FALSE) plot(st_geometry(rainfall), pch = 3, add = TRUE) contour(z, breaks = b, add = TRUE)\nFigure 12.12: Predicted annual rainfall using Inverse Distance Weighted (IDW) interpolation"
  },
  {
    "objectID": "ch12.html#ordinary-kriging",
    "href": "ch12.html#ordinary-kriging",
    "title": "15  Spatial interpolation of point data",
    "section": "15.4 Ordinary Kriging",
    "text": "15.4 Ordinary Kriging\n\n15.4.1 Annual rainfall example\nKriging methods require a variogram model. The variogram model is an objective way to quantify the autocorrelation pattern in the data, and assign weights accordingly when making predictions (Section 12.1.2).\nAs a first step, we can calculate and examine the empirical variogram using the variogram function. The function requires two arguments:\n\nformula—Specifies the dependent variable and the covariates, just like in gstat\ndata—The point layer with the dependent variable and covariates as point attributes\n\nFor example, the following expression calculates the empirical variogram of annual, with no covariates:\nv_emp_ok = variogram(annual ~ 1, rainfall)\nUsing plot to examine it we can examine the variogram (Figure 12.13):\nplot(v_emp_ok)\nFigure 12.13: Empirical variogram\nThere are several ways to fit a variogram model to an empirical variogram. We will use the simplest one—automatic fitting using function autofitVariogram from package automap:\nlibrary(automap) v_mod_ok = autofitVariogram(annual ~ 1, as(rainfall, \"Spatial\"))\nThe function chooses the best fitting type of model, and also fine tunes its parameters. (Use show.vgms() to display variogram model types.) Note that the autofitVariogram function does not work on sf objects, which is why we convert the object to a SpatialPointsDataFrame (package sp).\nThe fitted model can be plotted with plot (Figure 12.14):\nplot(v_mod_ok)\nFigure 12.14: Variogram model\nThe resulting object is actually a list with several components, including the empirical variogram and the fitted variogram model. The $var_model component of the resulting object contains the actual model:\nv_mod_ok$var_model ##   model      psill    range kappa ## 1   Nug   451.9177     0.00     0 ## 2   Ste 23223.8370 34604.87     2\nThe variogram model can then be passed to the gstat function, and we can carry on with the Ordinary Kriging interpolation:\ng = gstat(formula = annual ~ 1, model = v_mod_ok$var_model, data = rainfall) z = predict(g, dem) ## [using ordinary kriging]\nAgain, we will subset the predicted values attribute and rename it:\nz = z[\"var1.pred\",,] names(z) = \"annual\"\nThe Ordinary Kriging predictions are shown in Figure 12.15:\nb = seq(0, 1200, 100) plot(z, breaks = b, col = hcl.colors(length(b)-1, \"Spectral\"), reset = FALSE) plot(st_geometry(rainfall), pch = 3, add = TRUE) contour(z, breaks = b, add = TRUE)\nFigure 12.15: Predicted annual rainfall using Ordinary Kriging\n\n\n15.4.2 Elevation example\nAnother example: suppose that we did not have a DEM for Israel, but only the elevation measurements at the meteorological stations. How can we produce an elevation raster using Ordinary Kriging?\nFirst, we prepare the gstat object:\nv = autofitVariogram(altitude ~ 1, as(rainfall, \"Spatial\")) g = gstat(formula = altitude ~ 1, model = v$var_model, data = rainfall)\nThen, we interpolate:\nz = predict(g, dem) ## [using ordinary kriging] z = z[\"var1.pred\",,] names(z) = \"elevation\"\nThe predicted elevation raster is shown in Figure 12.16:\nb = seq(-500, 1200, 100) plot(z, breaks = b, col = hcl.colors(length(b)-1, \"Spectral\"), reset = FALSE) plot(st_geometry(rainfall), pch = 3, add = TRUE) contour(z, breaks = b, add = TRUE)\nFigure 12.16: Ordinary Kriging prediction of elevation\n\n\n15.4.3 Monthly rainfall example\nIn the next example we use kriging inside a for loop, to make a series of predictions for different variables. Specifically, we will use Ordinary Kriging to predict monthly rainfall, i.e., sep through may columns in the rainfall layer.\nIn each for loop \"round,\" the formula is going to be re-defined according to the current month i. For example:\ni = \"may\" as.formula(paste0(i, \" ~ 1\")) ## may ~ 1\nFirst, we set up a vector with the column names of the variables we wish to interpolate, and a list where we \"collect\" the results:\nm = c(\"sep\", \"oct\", \"nov\", \"dec\", \"jan\", \"feb\", \"mar\", \"apr\", \"may\") result = list()\nSecond, we specify the for loop, as follows:\nfor(i in m) {   f = as.formula(paste0(i, \" ~ 1\"))   v = autofitVariogram(f, as(rainfall, \"Spatial\"))   g = gstat(formula = f, model = v$var_model, data = rainfall)   z = predict(g, dem)   z = z[\"var1.pred\",,]   result[[i]] = z } ## [using ordinary kriging] ## [using ordinary kriging] ## [using ordinary kriging] ## [using ordinary kriging] ## [using ordinary kriging] ## [using ordinary kriging] ## [using ordinary kriging] ## [using ordinary kriging] ## [using ordinary kriging]\nFinally, we combine the list of results per month into a single multi-band raster, using do.call and c (Section 11.3.2):\nresult$along = 3 result = do.call(c, result)\nThe interpolated montly rainfall amounts are shown in Figure 12.17:\nplot(result, breaks = \"equal\", col = hcl.colors(11, \"Spectral\"), key.pos = 4)\nFigure 12.17: Monthly rainfall predictions using Ordinary Kriging"
  },
  {
    "objectID": "ch12.html#universal-kriging",
    "href": "ch12.html#universal-kriging",
    "title": "15  Spatial interpolation of point data",
    "section": "15.5 Universal Kriging",
    "text": "15.5 Universal Kriging\nUniversal Kriging interpolation uses a model with one or more independent variables, i.e., covariates. The covariates need to be known for both:\n\nThe point layer, as an attribute such as elev_1km in rainfall\nThe predicted locations, as raster values such as dem values\n\nThe formula now specifies the name(s) of the covariate(s) to the right of the ~ symbol, separated by + if there are more than one. Also, we are using a subset of rainfall where elev_1km values were present:\nv_emp_uk = variogram(annual ~ elev_1km, rainfall) v_mod_uk = autofitVariogram(annual ~ elev_1km, as(rainfall, \"Spatial\"))\nComparing the Ordinary Kriging and Universal Kriging variogram models (Figure 12.18):\nplot(v_emp_ok, model = v_mod_ok$var_model, ylim = c(0, 25000), main = \"OK\") plot(v_emp_uk, model = v_mod_uk$var_model, ylim = c(0, 25000), main = \"UK\")\nFigure 12.18: OK and UK variogram models\nNext we create a gstat object, where the formula contains the covariate and the corresponding variogram model:\ng = gstat(formula = annual ~ elev_1km, model = v_mod_uk$var_model, data = rainfall)\nRemember that all of the variables that appear in the formula need to be present in the data. In this case we have two variables: a dependent variable (annual) and an independent variable (elev_1km).\nNow we can make predictions:\nz = predict(g, dem) ## [using universal kriging]\nand then subset and rename:\nz = z[\"var1.pred\",,] names(z) = \"annual\"\nUniversal Kriging predictions are shown in Figure 12.19:\nb = seq(0, 1200, 100) plot(z, breaks = b, col = hcl.colors(length(b)-1, \"Spectral\"), reset = FALSE) plot(st_geometry(rainfall), pch = 3, add = TRUE) contour(z, breaks = b, add = TRUE)\nFigure 12.19: Predicted annual rainfall using Universal Kriging"
  },
  {
    "objectID": "ch12.html#cross-validation",
    "href": "ch12.html#cross-validation",
    "title": "15  Spatial interpolation of point data",
    "section": "15.6 Cross-validation",
    "text": "15.6 Cross-validation\nIn Sections 12.2–12.4, we have calculated annual rainfall surfaces using three different methods: IDW, Ordinary Kriging and Universal Kriging. Although it is useful to examine and compare the results graphically (Figures 12.12, 12.15, and 12.19), we also need an objective way to evaluate interolation accuracy. That way, we can objectively choose the most accurate method among the various interpolation methods there are.\nPlainly speaking, to evaluate prediction accuracy we need to compare the predicted values with measured data in the same location. Since measured data are often sparse and expensive to produce, it makes little sense to collect more data merely for the sake of accuracy assessment. Instead, the available data are usually split to two parst, called training and test data. The training data are used to fit the model, while the test data are used to calculate prediction accuracy. The procedure is called cross validation. A specific, commonly used, type of cross validation is Leave-One-Out Cross Validation where all observations consecutively take the role of test data while the remaning observations take the role of training data. The separation of training and test data is important because evaluating a model based on the same data used to fit it gives the model an \"unfair\" advantage and therefore overestimates accuracy.\nIn Leave-One-Out Cross Validation we:\n\nTake out one point out of the calibration data\nMake a prediction for that point\nRepeat for all points\n\nIn the end, what we get is a table with an observed value and a predicted value for all points.\nWe can run Leave-One-Out Cross Validation using the gstat.cv function, which accepts a gstat object:\ncv = gstat.cv(g)\nThe gstat.cv function returns an object of class SpatialPointsDataFrame (package sp), which we can convert to an sf object with st_as_sf:\ncv = st_as_sf(cv) cv ## Simple feature collection with 160 features and 6 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 629301.4 ymin: 3435503 xmax: 761589.2 ymax: 3681163 ## CRS:           NA ## First 10 features: ##    var1.pred var1.var observed    residual       zscore fold ## 1   632.4635 951.6388    582.8 -49.6635206 -1.609909413    1 ## 2   614.6876 915.2690    608.5  -6.1876076 -0.204525930    2 ## 3   598.0584 907.7003    614.7  16.6415723  0.552361147    3 ## 4   609.5275 774.8052    562.7 -46.8274602 -1.682303431    4 ## 5   701.0174 913.6664    682.8 -18.2174496 -0.602689676    5 ## 6   610.4985 740.2553    705.5  95.0014929  3.491722024    6 ## 7   645.4771 824.3927    610.4 -35.0771011 -1.221677615    7 ## 8   581.9809 976.5117    583.3   1.3190893  0.042211954    8 ## 9   654.7017 705.9952    709.8  55.0983188  2.073659677    9 ## 10  654.6546 706.8918    654.8   0.1454226  0.005469598   10 ##                    geometry ## 1  POINT (697119.1 3656748) ## 2  POINT (696509.3 3652434) ## 3  POINT (696541.7 3641332) ## 4  POINT (697875.3 3630156) ## 5  POINT (689553.7 3626282) ## 6  POINT (694694.5 3624388) ## 7  POINT (686489.5 3619716) ## 8  POINT (683148.4 3616846) ## 9  POINT (696489.3 3610221) ## 10 POINT (693025.1 3608449)\nThe result of gstat.cv has the following attributes:\n\nvar1.pred—Predicted value\nvar1.var—Variance (only for Kriging)\nobserved—Observed value\nresidual—Observed-Predicted\nzscore—Z-score (only for Kriging)\nfold—Cross-validation ID\n\nA bubble plot is convenient to examine the residuals, since it shows positive and negative values in different color (Figure 12.20):\nbubble(as(cv[, \"residual\"], \"Spatial\"))\nFigure 12.20: Cross-validation residuals\nUsing the \"predicted\" and \"observed\" columns we can calculate prediction accuracy indices, such as the Root Mean Square Error (RMSE) (Equation (12.4)):\nRMSE=√∑ni=1(predi−obsi)2n(12.4)(12.4)����=∑�=1�(�����−����)2�\nwhere predi����� and obsi���� are predicted and observed values for point i�, respectively.\nFor example:\nsqrt(sum((cv$var1.pred - cv$observed)^2) / nrow(cv)) ## [1] 36.21741"
  },
  {
    "objectID": "ch13.html#introduction",
    "href": "ch13.html#introduction",
    "title": "\n16  High Frequency Data\n",
    "section": "\n16.1 Introduction",
    "text": "16.1 Introduction\nHigh-frequency ocean data for temperature, pH, and dissolved oxygen can be obtained through the use of oceanographic sondes. Sondes are instruments that are deployed in the ocean to collect continuous measurements of various parameters. When combined, temperature, pH, and dissolved oxygen data collected can provide valuable insights into oceanic conditions and help researchers study processes such as ocean warming, ocean acidification, and oxygen dynamics.\nIn this chapter, we will delve into the intricacies of processing and visualizing high frequency data. Our dataset has been sourced from the Pemba Channel, specifically in the vicinity of upwelling events. Our aim is to impart knowledge on the techniques required to analyze and interpret this data effectively. We will adopt a formal approach throughout this chapter to ensure that our readers gain a comprehensive understanding of the subject matter."
  },
  {
    "objectID": "ch13.html#packages-needed",
    "href": "ch13.html#packages-needed",
    "title": "\n16  High Frequency Data\n",
    "section": "\n16.2 Packages needed",
    "text": "16.2 Packages needed\nLet’s read the functions in the working directory.The require() function is used to load R packages into the current R session. When the require(tidyverse) code is executed, it checks if the tidyverse package is already installed. If it is not installed, it installs the package and then loads it into the session. If the package is already installed, it simply loads it.\n\nCoderequire(tidyverse)\nrequire(patchwork)\n\n\nThen we define our color codes that we are going to use\n\nCodemy.colors = colorRampPalette(c(\"#5E85B8\",\"#EDF0C0\",\"#C13127\"))\n\n\nmy.colors2 = colorRampPalette(colors = c(\"#8220EF\", \"#000096\", \"#0000CC\", \"#446CEA\", \"#1F90FF\", \"#00BFFA\",\n                            \"#9FD2FE\", \"#D3F5FF\", \"#FFFFC7\", \"#FFAA01\", \"#FF6E01\", \"#FE0000\", \"#C80000\", \"#9F2323\"))"
  },
  {
    "objectID": "ch13.html#dataset",
    "href": "ch13.html#dataset",
    "title": "\n16  High Frequency Data\n",
    "section": "\n16.3 Dataset",
    "text": "16.3 Dataset\nWe are going to use moa_high_frequency.csv, which is a high frequency dataset. This dataset has three columns and a brief description of each column:\n\ndate: This column appears to contain date and time values represented as dttm (DateTime) data type. It includes specific timestamps such as “2022-10-08 22:00:00” and “2022-10-08 22:30:00”.\nvariables: This column is of character (chr) data type represents variable measured, which are Temperature, pH and dissolved oxygen.\ndata: This column is of numeric (dbl) data type and contains the actual data values corresponding to the measurements of Temperature, pH and dissolved oxygen.\n\nAs the data is in a comma-separated file format, we can easily import it into the session from the working directory by using the read_csv function from the readr package.\n\nCodedata = read_csv(\"data/moa_high_frequency.csv\")\n\n\nThe code data = read_csv(\"data/moa_high_frequency.csv\") read and load the high-frequency data from the CSV file into the data variable, and you can further analyze and manipulate the data using R’s data manipulation and analysis capabilities.\nWe can concise have a summary of a dataset, including its structure and contents with glimpse function. It is particularly useful for large datasets with many variables.\n\nCodedata |&gt;\n  glimpse()\n\nRows: 25,887\nColumns: 3\n$ date      &lt;dttm&gt; 2022-10-08 22:00:00, 2022-10-08 22:00:00, 2022-10-08 22:30:…\n$ variables &lt;chr&gt; \"temperature\", \"ph\", \"temperature\", \"ph\", \"temperature\", \"ph…\n$ data      &lt;dbl&gt; 26.520000, 8.061103, 26.520000, 8.061375, 26.500000, 8.05981…\n\n\nThis summary provides an overview of the dataset’s structure and the information contained within each column. This dataset contains 25,887 rows and 3 columns. We can use this information to quickly assess the quality and relevance of the dataset for analysis purposes\nFurther, we can print the data frame and show the first and last five records of the dataset. The FSA::headtail() function is not a built-in function in R. To use the headtail() function with the data object, you would need to ensure that the “FSA” package is installed and loaded.\n\nCodedata |&gt;\n  FSA::headtail() |&gt;\n  gt::gt()\n\n\n\n\n\n\nTABLE 16.1.  The first and last five records of the datase \n  \ndate\n      variables\n      data\n    \n\n\n2022-10-08 22:00:00\ntemperature\n26.520000\n\n\n2022-10-08 22:00:00\nph\n8.061103\n\n\n2022-10-08 22:30:00\ntemperature\n26.520000\n\n\n2023-04-06 04:00:00\ndo\n6.970000\n\n\n2023-04-06 04:30:00\ndo\n6.830000\n\n\n2023-04-06 05:00:00\ndo\n6.840000\n\n\n\n\n\n\n\nWe notice that the variables names must be edited, By applying these transformations using the mutate() function and the str_replace() function, the variables names are updated, reflecting the desired replacements.\n\nCodedata = data  |&gt;\n  mutate(\n    variables = str_replace(string = variables, pattern = \"do\", replacement = \"Dissolved Oxygen\"),\n    variables = str_replace(string = variables, pattern = \"temperature\", replacement = \"Temperature\"),\n    variables = str_replace(string = variables, pattern = \"ph\", replacement = \"pH\")\n  )"
  },
  {
    "objectID": "ch13.html#visualizing-high-frequency-data",
    "href": "ch13.html#visualizing-high-frequency-data",
    "title": "\n16  High Frequency Data\n",
    "section": "\n16.4 Visualizing high frequency data",
    "text": "16.4 Visualizing high frequency data\nOnce this high frequency dataset has been tidied, it is important to visualize the data to gain insights and identify patterns. Visualizing high frequency data can be challenging due to the sheer volume of data points. However, there are several techniques that can be used to effectively visualize this type of data.\nOne approach is to use a line chart to plot the data over time. This allows for easy identification of trends and patterns in the data.\nFigure 16.1\n\nCodedata |&gt;\n  ggplot(aes(x = date, y = data)) +\n  geom_path() +\n  facet_wrap(~variables, scales = \"free_y\", nrow = 2)+\n  annotate(geom = \"rect\", xmin = lubridate::dmy_hms(011222000000), xmax = lubridate::dmy_hms(010223000000), ymin =Inf, ymax = Inf, fill = \"red\", alpha = .2 )+\n  scale_x_datetime(breaks = \"month\", labels = scales::label_date_short())+\n  theme_bw(base_size = 14)+\n  theme(axis.title.x = element_blank())\n\n\n\nFIGURE 16.1. Line plot dissolved oxygen, pH and temperature over a period\n\n\n\n\nAnother technique is to use a heat map or density plot to visualize the distribution of the data. This can be particularly useful when dealing with large datasets.\n\nCodeph = data |&gt;\n  filter(variables == \"pH\") |&gt;\n  mutate(hour = lubridate::hour(date), date = lubridate::as_date(date)) |&gt;\n  filter(date &lt; dmy(010423))|&gt;\n  ggplot(aes(x = date, y = hour, z = data)) +\n  metR::geom_contour_fill()+\n  metR::geom_contour2(aes(label = ..level..), breaks = 8.05, skip = 10)+\n  scale_fill_gradientn(colours = oce::oce.colors9A(120), trans = scales::modulus_trans(p = 3), name = \"pH\")+\n  scale_y_reverse(breaks = seq(0,24,2), expand = c(0, NA), name = \"Hours\")+\n  scale_x_date(date_breaks = \"10 day\", labels = scales::label_date_short(), expand = c(0, NA))+\n  theme_bw(base_size = 14)+\n  theme(axis.title.x = element_blank())\n\nph\n\n\n\nFIGURE 16.2. Hovmoller diagram of hour variation of pH over a period\n\n\n\n\nIt is also important to consider the scale of the visualization when dealing with high frequency data. Choosing an appropriate scale can help to highlight important features of the data while avoiding visual clutter.\n\nCodetemp = data |&gt;\n  filter(variables == \"Temperature\") |&gt;\n  mutate(hour = lubridate::hour(date), date = lubridate::as_date(date)) |&gt;\n  filter(date &lt; dmy(010423)) |&gt;\n  ggplot(aes(x = date, y = hour, z = data)) +\n  metR::geom_contour_fill()+  \n  metR::geom_contour2(aes(label = ..level..), breaks = 28, skip = 0)+\n  scale_fill_gradientn(colours = my.colors2(120), trans = scales::modulus_trans(p = 0.001), name = \"SST\")+\n  scale_y_reverse(breaks = seq(0,24,2), expand = c(0, NA), name = \"Hours\")+\n  scale_x_date(date_breaks = \"10 day\", labels = scales::label_date_short(), expand = c(0, NA))+\n  theme_bw(base_size = 14)+\n  theme(axis.title.x = element_blank())\n\ntemp\n\n\n\nFIGURE 16.3. Hovmoller diagram of hour variation of temperature over a period\n\n\n\n\n\nCodedo = data |&gt;\n  filter(variables == \"Dissolved Oxygen\") |&gt;\n  mutate(hour = lubridate::hour(date), date = lubridate::as_date(date)) |&gt;\n  filter(date &lt; dmy(010423) & hour &gt;7 & hour &lt; 21) |&gt;\n  ggplot(aes(x = date, y = hour, z = data)) +\n  metR::geom_contour_fill()+  \n  metR::geom_contour2(aes(label = ..level..), breaks = 28, skip = 0)+\n  scale_fill_gradientn(colours = oce::oce.colorsJet(120), trans = scales::modulus_trans(p = 0.001), name = \"DO\")+\n  scale_y_reverse(breaks = seq(0,24,2), expand = c(0, NA), name = \"Hours\")+\n  scale_x_date(date_breaks = \"10 day\", labels = scales::label_date_short(), expand = c(0, NA))+\n  theme_bw(base_size = 14)+\n  theme(axis.title.x = element_blank())\n\ndo\n\n\n\nFIGURE 16.4. Hovmoller diagram of hour variation of oxygen over a period\n\n\n\n\nOverall, the importance of visualizing high frequency data after tidying cannot be overstated, as it is a critical component of gaining insights and making informed decisions. To see the pattern of the three variables, we can use the patchwork package, which provides a simple and flexible way to arrange and combine multiple plots into a single layout. The package allows to arrange the plots horizontally or vertically using the + operator or the / operators, respectively. For example, here I arranged the heatmap of ph, temperature and dissolved oxygen vertically. T that I have just plotted w\nHere’s a step-by-step guide on how to use patchwork\n\nCode(ph + theme(axis.text.x = element_blank())) / \n  (temp + theme(axis.text.x = element_blank())) / \n  do\n\n\n\nFIGURE 16.5. Hovmoller diagram of hour variation of pH, temperature, and dissolved oxygen over a period"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Bache, Stefan Milton, and Hadley Wickham. 2022. Magrittr: A\nForward-Pipe Operator for r. https://CRAN.R-project.org/package=magrittr.\n\n\nMüller, Kirill, and Hadley Wickham. 2022. Tibble: Simple Data\nFrames. https://CRAN.R-project.org/package=tibble.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data\nAnalysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\n———. 2019. Stringr: Simple, Consistent Wrappers for Common String\nOperations. https://CRAN.R-project.org/package=stringr.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy\nD’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019.\n“Welcome to the tidyverse.”\nJournal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\n\n\nWickham, Hadley, and Jennifer Bryan. 2022. Readxl: Read Excel\nFiles. https://CRAN.R-project.org/package=readxl.\n\n\nWickham, Hadley, Romain François, Lionel Henry, and Kirill Müller. 2022.\nDplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, and Maximilian Girlich. 2022. Tidyr: Tidy Messy\nData. https://CRAN.R-project.org/package=tidyr.\n\n\nWickham, Hadley, Jim Hester, and Jennifer Bryan. 2022. Readr: Read\nRectangular Text Data. https://CRAN.R-project.org/package=readr."
  },
  {
    "objectID": "ch41.html#data-models",
    "href": "ch41.html#data-models",
    "title": "7  Data models and Simple Feature (sf) in R",
    "section": "7.1 Data models",
    "text": "7.1 Data models\nGeographic Information Systems (GIS) play a pivotal role in capturing, analyzing, and visualizing spatial data. Central to the functioning of GIS is the concept of data models, which provide a structured framework for organizing and representing geographic information. In this article, we will embark on a thorough exploration of data models in GIS, delving into their significance, types, and applications. By the end, readers will have a comprehensive understanding of data models and their role in enabling efficient spatial analysis."
  },
  {
    "objectID": "ch41.html#the-significance-of-data-models-in-gis",
    "href": "ch41.html#the-significance-of-data-models-in-gis",
    "title": "7  Data models and Simple Feature (sf) in R",
    "section": "7.2 The Significance of Data Models in GIS:",
    "text": "7.2 The Significance of Data Models in GIS:\nData models serve as the backbone of GIS, offering a structured approach to organizing and representing spatial data. They define how real-world objects and phenomena are conceptualized and stored within GIS databases. Data models facilitate data integration, standardization, and interoperability, enabling efficient data management and analysis. By understanding data models, GIS professionals can effectively capture, store, and retrieve spatial data, facilitating informed decision-making and analysis."
  },
  {
    "objectID": "ch41.html#types-of-data-models",
    "href": "ch41.html#types-of-data-models",
    "title": "7  Data models and Simple Feature (sf) in R",
    "section": "7.3 Types of Data Models",
    "text": "7.3 Types of Data Models\nVector Data Model\nThe vector data model represents geographic features as points, lines, and polygons. It utilizes coordinates and topological relationships to define the spatial properties of objects. Vector data models are commonly used for representing discrete and continuous phenomena, such as roads, rivers, land parcels, and vegetation. They offer precise representation and are suitable for detailed analysis and visualization.\nRaster Data Model\nThe raster data model organizes spatial data into a grid of cells or pixels. Each cell represents a discrete unit of space and contains a value that represents a specific attribute or property. Raster data models are suitable for continuous data, such as satellite imagery, elevation data, and climate information. They excel in spatial analysis operations like overlay analysis, surface modeling, and terrain analysis.\nData models form the foundation of GIS, providing a structured framework for organizing, representing, and analyzing spatial data. Understanding the types and applications of data models is essential for GIS professionals to effectively manage and utilize spatial information. By leveraging appropriate data models, users can unlock the full potential of GIS for spatial analysis, visualization, and informed decision-making in diverse domains. The continual advancement of data modeling in GIS ensures that the field remains dynamic and responsive to evolving spatial data requirements."
  },
  {
    "objectID": "ch41.html#simple-feature",
    "href": "ch41.html#simple-feature",
    "title": "7  Data models and Simple Feature (sf) in R",
    "section": "7.4 Simple feature",
    "text": "7.4 Simple feature\nHave you ever found yourself struggling to work with spatial data in R? Well, fear not, because the introduction of the simple features (sf) package has made handling spatial data a breeze. In this article, we will explore what the sf package is, how it works, and some of its key features. R, a widely used programming language for statistical computing and graphics, offers the powerful “sf” package, which provides a comprehensive framework for working with spatial data. In this chapter, we will delve into the basics of the “sf” package in R, exploring its key features, data structures, and functions. By the end of this chapter, readers will gain a solid understanding of how to leverage “sf” to perform efficient and insightful spatial analysis."
  },
  {
    "objectID": "ch41.html#the-significance-of-data-models",
    "href": "ch41.html#the-significance-of-data-models",
    "title": "7  Data models and Simple Feature (sf) in R",
    "section": "7.2 The Significance of Data Models",
    "text": "7.2 The Significance of Data Models\nData models serve as the backbone of GIS, offering a structured approach to organizing and representing spatial data. They define how real-world objects and phenomena are conceptualized and stored within GIS databases. Data models facilitate data integration, standardization, and interoperability, enabling efficient data management and analysis. By understanding data models, GIS professionals can effectively capture, store, and retrieve spatial data, facilitating informed decision-making and analysis."
  }
]